{"ast":null,"code":"import _toArray from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _defineProperty from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Injectable, NgModule, NgZone, Inject, Input, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { BaseDirective2, StyleBuilder, StyleUtils, MediaMarshaller, CoreModule, LAYOUT_CONFIG, validateBasis } from '@angular/flex-layout/core';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/flex-layout/core';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nvar INLINE = 'inline';\n/** @type {?} */\n\nvar LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\n\nfunction buildLayoutCSS(value) {\n  var _validateValue = validateValue(value),\n      _validateValue2 = _slicedToArray(_validateValue, 3),\n      direction = _validateValue2[0],\n      wrap = _validateValue2[1],\n      isInline = _validateValue2[2];\n\n  return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateValue(value) {\n  value = value ? value.toLowerCase() : '';\n\n  var _value$split = value.split(' '),\n      _value$split2 = _slicedToArray(_value$split, 3),\n      direction = _value$split2[0],\n      wrap = _value$split2[1],\n      inline = _value$split2[2]; // First value must be the `flex-direction`\n\n\n  if (!LAYOUT_VALUES.find(\n  /**\n  * @param {?} x\n  * @return {?}\n  */\n  function (x) {\n    return x === direction;\n  })) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = inline !== INLINE ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isFlowHorizontal(value) {\n  var _validateValue3 = validateValue(value),\n      _validateValue4 = _slicedToArray(_validateValue3, 1),\n      flow = _validateValue4[0];\n\n  return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n      // All other values fallback to 'wrap'\n\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n\n  return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\n\n\nfunction buildCSS(direction) {\n  var wrap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var inline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout/layout.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar LayoutStyleBuilder =\n/** @class */\nfunction () {\n  var LayoutStyleBuilder = /*#__PURE__*/function (_StyleBuilder) {\n    _inherits(LayoutStyleBuilder, _StyleBuilder);\n\n    var _super = _createSuper(LayoutStyleBuilder);\n\n    function LayoutStyleBuilder() {\n      _classCallCheck(this, LayoutStyleBuilder);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(LayoutStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} input\n       * @return {?}\n       */\n      function buildStyles(input) {\n        return buildLayoutCSS(input);\n      }\n    }]);\n\n    return LayoutStyleBuilder;\n  }(StyleBuilder);\n\n  LayoutStyleBuilder.ɵfac = function LayoutStyleBuilder_Factory(t) {\n    return ɵLayoutStyleBuilder_BaseFactory(t || LayoutStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  LayoutStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function LayoutStyleBuilder_Factory() {\n      return new LayoutStyleBuilder();\n    },\n    token: LayoutStyleBuilder,\n    providedIn: \"root\"\n  });\n  var ɵLayoutStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(LayoutStyleBuilder);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(LayoutStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], null, null);\n  })();\n\n  return LayoutStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs = ['fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md', 'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md', 'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm', 'fxLayout.gt-md', 'fxLayout.gt-lg'];\n/** @type {?} */\n\nvar selector = \"\\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\\n  [fxLayout.gt-md], [fxLayout.gt-lg]\\n\";\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n\nvar LayoutDirective =\n/** @class */\nfunction () {\n  /**\n   * 'layout' flexbox styling directive\n   * Defines the positioning flow direction for the child elements: row or column\n   * Optional values: column or row (default)\n   * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n   *\n   */\n  var LayoutDirective = /*#__PURE__*/function (_BaseDirective) {\n    _inherits(LayoutDirective, _BaseDirective);\n\n    var _super2 = _createSuper(LayoutDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function LayoutDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this;\n\n      _classCallCheck(this, LayoutDirective);\n\n      _this = _super2.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this.DIRECTIVE_KEY = 'layout';\n      _this.styleCache = layoutCache;\n\n      _this.init();\n\n      return _this;\n    }\n\n    return LayoutDirective;\n  }(BaseDirective2);\n\n  LayoutDirective.ɵfac = function LayoutDirective_Factory(t) {\n    return new (t || LayoutDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LayoutStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  LayoutDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: LayoutDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  LayoutDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: LayoutStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(LayoutDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: LayoutStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, null);\n  })();\n\n  return LayoutDirective;\n}();\n\nvar DefaultLayoutDirective =\n/** @class */\nfunction () {\n  var DefaultLayoutDirective = /*#__PURE__*/function (_LayoutDirective) {\n    _inherits(DefaultLayoutDirective, _LayoutDirective);\n\n    var _super3 = _createSuper(DefaultLayoutDirective);\n\n    function DefaultLayoutDirective() {\n      var _this2;\n\n      _classCallCheck(this, DefaultLayoutDirective);\n\n      _this2 = _super3.apply(this, arguments);\n      _this2.inputs = inputs;\n      return _this2;\n    }\n\n    return DefaultLayoutDirective;\n  }(LayoutDirective);\n\n  DefaultLayoutDirective.ɵfac = function DefaultLayoutDirective_Factory(t) {\n    return ɵDefaultLayoutDirective_BaseFactory(t || DefaultLayoutDirective);\n  };\n\n  DefaultLayoutDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultLayoutDirective,\n    selectors: [[\"\", \"fxLayout\", \"\"], [\"\", \"fxLayout.xs\", \"\"], [\"\", \"fxLayout.sm\", \"\"], [\"\", \"fxLayout.md\", \"\"], [\"\", \"fxLayout.lg\", \"\"], [\"\", \"fxLayout.xl\", \"\"], [\"\", \"fxLayout.lt-sm\", \"\"], [\"\", \"fxLayout.lt-md\", \"\"], [\"\", \"fxLayout.lt-lg\", \"\"], [\"\", \"fxLayout.lt-xl\", \"\"], [\"\", \"fxLayout.gt-xs\", \"\"], [\"\", \"fxLayout.gt-sm\", \"\"], [\"\", \"fxLayout.gt-md\", \"\"], [\"\", \"fxLayout.gt-lg\", \"\"]],\n    inputs: {\n      fxLayout: \"fxLayout\",\n      \"fxLayout.xs\": \"fxLayout.xs\",\n      \"fxLayout.sm\": \"fxLayout.sm\",\n      \"fxLayout.md\": \"fxLayout.md\",\n      \"fxLayout.lg\": \"fxLayout.lg\",\n      \"fxLayout.xl\": \"fxLayout.xl\",\n      \"fxLayout.lt-sm\": \"fxLayout.lt-sm\",\n      \"fxLayout.lt-md\": \"fxLayout.lt-md\",\n      \"fxLayout.lt-lg\": \"fxLayout.lt-lg\",\n      \"fxLayout.lt-xl\": \"fxLayout.lt-xl\",\n      \"fxLayout.gt-xs\": \"fxLayout.gt-xs\",\n      \"fxLayout.gt-sm\": \"fxLayout.gt-sm\",\n      \"fxLayout.gt-md\": \"fxLayout.gt-md\",\n      \"fxLayout.gt-lg\": \"fxLayout.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultLayoutDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultLayoutDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultLayoutDirective, [{\n      type: Directive,\n      args: [{\n        selector: selector,\n        inputs: inputs\n      }]\n    }], null, null);\n  })();\n\n  return DefaultLayoutDirective;\n}();\n/** @type {?} */\n\n\nvar layoutCache = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-gap/layout-gap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\nvar LayoutGapStyleBuilder =\n/** @class */\nfunction () {\n  var LayoutGapStyleBuilder = /*#__PURE__*/function (_StyleBuilder2) {\n    _inherits(LayoutGapStyleBuilder, _StyleBuilder2);\n\n    var _super4 = _createSuper(LayoutGapStyleBuilder);\n\n    /**\n     * @param {?} _styler\n     */\n    function LayoutGapStyleBuilder(_styler) {\n      var _this3;\n\n      _classCallCheck(this, LayoutGapStyleBuilder);\n\n      _this3 = _super4.call(this);\n      _this3._styler = _styler;\n      return _this3;\n    }\n    /**\n     * @param {?} gapValue\n     * @param {?} parent\n     * @return {?}\n     */\n\n\n    _createClass(LayoutGapStyleBuilder, [{\n      key: \"buildStyles\",\n      value: function buildStyles(gapValue, parent) {\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n          gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER)); // Add the margin to the host element\n\n          return buildGridMargin(gapValue, parent.directionality);\n        } else {\n          return {};\n        }\n      }\n      /**\n       * @param {?} gapValue\n       * @param {?} _styles\n       * @param {?} parent\n       * @return {?}\n       */\n\n    }, {\n      key: \"sideEffect\",\n      value: function sideEffect(gapValue, _styles, parent) {\n        /** @type {?} */\n        var items = parent.items;\n\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n          gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER)); // For each `element` children, set the padding\n\n          /** @type {?} */\n\n          var paddingStyles = buildGridPadding(gapValue, parent.directionality);\n\n          this._styler.applyStyleToElements(paddingStyles, parent.items);\n        } else {\n          /** @type {?} */\n          var lastItem =\n          /** @type {?} */\n          items.pop(); // For each `element` children EXCEPT the last,\n          // set the margin right/bottom styles...\n\n          /** @type {?} */\n\n          var gapCss = buildGapCSS(gapValue, parent);\n\n          this._styler.applyStyleToElements(gapCss, items); // Clear all gaps for all visible elements\n\n\n          this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n        }\n      }\n    }]);\n\n    return LayoutGapStyleBuilder;\n  }(StyleBuilder);\n\n  LayoutGapStyleBuilder.ɵfac = function LayoutGapStyleBuilder_Factory(t) {\n    return new (t || LayoutGapStyleBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.StyleUtils));\n  };\n  /** @nocollapse */\n\n\n  LayoutGapStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function LayoutGapStyleBuilder_Factory() {\n      return new LayoutGapStyleBuilder(ɵɵinject(StyleUtils));\n    },\n    token: LayoutGapStyleBuilder,\n    providedIn: \"root\"\n  });\n  /** @nocollapse */\n\n  LayoutGapStyleBuilder.ctorParameters = function () {\n    return [{\n      type: StyleUtils\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(LayoutGapStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], function () {\n      return [{\n        type: ɵngcc1.StyleUtils\n      }];\n    }, null);\n  })();\n\n  return LayoutGapStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$1 = ['fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md', 'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md', 'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm', 'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'];\n/** @type {?} */\n\nvar selector$1 = \"\\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\\n\";\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n\nvar LayoutGapDirective =\n/** @class */\nfunction () {\n  /**\n   * 'layout-padding' styling directive\n   *  Defines padding of child elements in a layout container\n   */\n  var LayoutGapDirective = /*#__PURE__*/function (_BaseDirective2) {\n    _inherits(LayoutGapDirective, _BaseDirective2);\n\n    var _super5 = _createSuper(LayoutGapDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} zone\n     * @param {?} directionality\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function LayoutGapDirective(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {\n      var _this4;\n\n      _classCallCheck(this, LayoutGapDirective);\n\n      _this4 = _super5.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this4.zone = zone;\n      _this4.directionality = directionality;\n      _this4.styleUtils = styleUtils;\n      _this4.layout = 'row'; // default flex-direction\n      // default flex-direction\n\n      _this4.DIRECTIVE_KEY = 'layout-gap';\n      _this4.observerSubject = new Subject();\n      /** @type {?} */\n\n      var extraTriggers = [_this4.directionality.change, _this4.observerSubject.asObservable()];\n\n      _this4.init(extraTriggers);\n\n      _this4.marshal.trackValue(_this4.nativeElement, 'layout').pipe(takeUntil(_this4.destroySubject)).subscribe(_this4.onLayoutChange.bind(_assertThisInitialized(_this4)));\n\n      return _this4;\n    }\n    /**\n     * Special accessor to query for all child 'element' nodes regardless of type, class, etc\n     * @protected\n     * @return {?}\n     */\n\n\n    _createClass(LayoutGapDirective, [{\n      key: \"childrenNodes\",\n      get: function get() {\n        /** @type {?} */\n        var obj = this.nativeElement.children;\n        /** @type {?} */\n\n        var buffer = []; // iterate backwards ensuring that length is an UInt32\n\n        for (var i = obj.length; i--;) {\n          buffer[i] = obj[i];\n        }\n\n        return buffer;\n      } // *********************************************\n      // Lifecycle Methods\n      // *********************************************\n\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        this.buildChildObservable();\n        this.triggerUpdate();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        _get(_getPrototypeOf(LayoutGapDirective.prototype), \"ngOnDestroy\", this).call(this);\n\n        if (this.observer) {\n          this.observer.disconnect();\n        }\n      } // *********************************************\n      // Protected methods\n      // *********************************************\n\n      /**\n       * Cache the parent container 'flex-direction' and update the 'margin' styles\n       * @protected\n       * @param {?} matcher\n       * @return {?}\n       */\n\n    }, {\n      key: \"onLayoutChange\",\n      value: function onLayoutChange(matcher) {\n        var _this5 = this;\n\n        /** @type {?} */\n        var layout = matcher.value; // Make sure to filter out 'wrap' option\n\n        /** @type {?} */\n\n        var direction = layout.split(' ');\n        this.layout = direction[0];\n\n        if (!LAYOUT_VALUES.find(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return x === _this5.layout;\n        })) {\n          this.layout = 'row';\n        }\n\n        this.triggerUpdate();\n      }\n      /**\n       *\n       * @protected\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        var _this6 = this;\n\n        // Gather all non-hidden Element nodes\n\n        /** @type {?} */\n        var items = this.childrenNodes.filter(\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n        function (el) {\n          return el.nodeType === 1 && _this6.willDisplay(el);\n        }).sort(\n        /**\n        * @param {?} a\n        * @param {?} b\n        * @return {?}\n        */\n        function (a, b) {\n          /** @type {?} */\n          var orderA = +_this6.styler.lookupStyle(a, 'order');\n          /** @type {?} */\n\n          var orderB = +_this6.styler.lookupStyle(b, 'order');\n\n          if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n            return 0;\n          } else {\n            return orderA > orderB ? 1 : -1;\n          }\n        });\n\n        if (items.length > 0) {\n          /** @type {?} */\n          var directionality = this.directionality.value;\n          /** @type {?} */\n\n          var layout = this.layout;\n\n          if (layout === 'row' && directionality === 'rtl') {\n            this.styleCache = layoutGapCacheRowRtl;\n          } else if (layout === 'row' && directionality !== 'rtl') {\n            this.styleCache = layoutGapCacheRowLtr;\n          } else if (layout === 'column' && directionality === 'rtl') {\n            this.styleCache = layoutGapCacheColumnRtl;\n          } else if (layout === 'column' && directionality !== 'rtl') {\n            this.styleCache = layoutGapCacheColumnLtr;\n          }\n\n          this.addStyles(value, {\n            directionality: directionality,\n            items: items,\n            layout: layout\n          });\n        }\n      }\n      /**\n       * We need to override clearStyles because in most cases mru isn't populated\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"clearStyles\",\n      value: function clearStyles() {\n        /** @type {?} */\n        var gridMode = Object.keys(this.mru).length > 0;\n        /** @type {?} */\n\n        var childrenStyle = gridMode ? 'padding' : getMarginType(this.directionality.value, this.layout); // If there are styles on the parent remove them\n\n        if (gridMode) {\n          _get(_getPrototypeOf(LayoutGapDirective.prototype), \"clearStyles\", this).call(this);\n        } // Then remove the children styles too\n\n\n        this.styleUtils.applyStyleToElements(_defineProperty({}, childrenStyle, ''), this.childrenNodes);\n      }\n      /**\n       * Determine if an element will show or hide based on current activation\n       * @protected\n       * @param {?} source\n       * @return {?}\n       */\n\n    }, {\n      key: \"willDisplay\",\n      value: function willDisplay(source) {\n        /** @type {?} */\n        var value = this.marshal.getValue(source, 'show-hide');\n        return value === true || value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none';\n      }\n      /**\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"buildChildObservable\",\n      value: function buildChildObservable() {\n        var _this7 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          if (typeof MutationObserver !== 'undefined') {\n            _this7.observer = new MutationObserver(\n            /**\n            * @param {?} mutations\n            * @return {?}\n            */\n            function (mutations) {\n              /** @type {?} */\n              var validatedChanges =\n              /**\n              * @param {?} it\n              * @return {?}\n              */\n              function validatedChanges(it) {\n                return it.addedNodes && it.addedNodes.length > 0 || it.removedNodes && it.removedNodes.length > 0;\n              }; // update gap styles only for child 'added' or 'removed' events\n\n\n              if (mutations.some(validatedChanges)) {\n                _this7.observerSubject.next();\n              }\n            });\n\n            _this7.observer.observe(_this7.nativeElement, {\n              childList: true\n            });\n          }\n        });\n      }\n    }]);\n\n    return LayoutGapDirective;\n  }(BaseDirective2);\n\n  LayoutGapDirective.ɵfac = function LayoutGapDirective_Factory(t) {\n    return new (t || LayoutGapDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LayoutGapStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  LayoutGapDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: LayoutGapDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  LayoutGapDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: Directionality\n    }, {\n      type: StyleUtils\n    }, {\n      type: LayoutGapStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(LayoutGapDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc0.NgZone\n      }, {\n        type: ɵngcc2.Directionality\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: LayoutGapStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, null);\n  })();\n\n  return LayoutGapDirective;\n}();\n\nvar DefaultLayoutGapDirective =\n/** @class */\nfunction () {\n  var DefaultLayoutGapDirective = /*#__PURE__*/function (_LayoutGapDirective) {\n    _inherits(DefaultLayoutGapDirective, _LayoutGapDirective);\n\n    var _super6 = _createSuper(DefaultLayoutGapDirective);\n\n    function DefaultLayoutGapDirective() {\n      var _this8;\n\n      _classCallCheck(this, DefaultLayoutGapDirective);\n\n      _this8 = _super6.apply(this, arguments);\n      _this8.inputs = inputs$1;\n      return _this8;\n    }\n\n    return DefaultLayoutGapDirective;\n  }(LayoutGapDirective);\n\n  DefaultLayoutGapDirective.ɵfac = function DefaultLayoutGapDirective_Factory(t) {\n    return ɵDefaultLayoutGapDirective_BaseFactory(t || DefaultLayoutGapDirective);\n  };\n\n  DefaultLayoutGapDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultLayoutGapDirective,\n    selectors: [[\"\", \"fxLayoutGap\", \"\"], [\"\", \"fxLayoutGap.xs\", \"\"], [\"\", \"fxLayoutGap.sm\", \"\"], [\"\", \"fxLayoutGap.md\", \"\"], [\"\", \"fxLayoutGap.lg\", \"\"], [\"\", \"fxLayoutGap.xl\", \"\"], [\"\", \"fxLayoutGap.lt-sm\", \"\"], [\"\", \"fxLayoutGap.lt-md\", \"\"], [\"\", \"fxLayoutGap.lt-lg\", \"\"], [\"\", \"fxLayoutGap.lt-xl\", \"\"], [\"\", \"fxLayoutGap.gt-xs\", \"\"], [\"\", \"fxLayoutGap.gt-sm\", \"\"], [\"\", \"fxLayoutGap.gt-md\", \"\"], [\"\", \"fxLayoutGap.gt-lg\", \"\"]],\n    inputs: {\n      fxLayoutGap: \"fxLayoutGap\",\n      \"fxLayoutGap.xs\": \"fxLayoutGap.xs\",\n      \"fxLayoutGap.sm\": \"fxLayoutGap.sm\",\n      \"fxLayoutGap.md\": \"fxLayoutGap.md\",\n      \"fxLayoutGap.lg\": \"fxLayoutGap.lg\",\n      \"fxLayoutGap.xl\": \"fxLayoutGap.xl\",\n      \"fxLayoutGap.lt-sm\": \"fxLayoutGap.lt-sm\",\n      \"fxLayoutGap.lt-md\": \"fxLayoutGap.lt-md\",\n      \"fxLayoutGap.lt-lg\": \"fxLayoutGap.lt-lg\",\n      \"fxLayoutGap.lt-xl\": \"fxLayoutGap.lt-xl\",\n      \"fxLayoutGap.gt-xs\": \"fxLayoutGap.gt-xs\",\n      \"fxLayoutGap.gt-sm\": \"fxLayoutGap.gt-sm\",\n      \"fxLayoutGap.gt-md\": \"fxLayoutGap.gt-md\",\n      \"fxLayoutGap.gt-lg\": \"fxLayoutGap.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultLayoutGapDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultLayoutGapDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultLayoutGapDirective, [{\n      type: Directive,\n      args: [{\n        selector: selector$1,\n        inputs: inputs$1\n      }]\n    }], null, null);\n  })();\n\n  return DefaultLayoutGapDirective;\n}();\n/** @type {?} */\n\n\nvar layoutGapCacheRowRtl = new Map();\n/** @type {?} */\n\nvar layoutGapCacheColumnRtl = new Map();\n/** @type {?} */\n\nvar layoutGapCacheRowLtr = new Map();\n/** @type {?} */\n\nvar layoutGapCacheColumnLtr = new Map();\n/** @type {?} */\n\nvar GRID_SPECIFIER = ' grid';\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\n\nfunction buildGridPadding(value, directionality) {\n  var _value$split3 = value.split(' '),\n      _value$split4 = _slicedToArray(_value$split3, 2),\n      between = _value$split4[0],\n      below = _value$split4[1];\n  /** @type {?} */\n\n\n  var bottom = below || between;\n  /** @type {?} */\n\n  var paddingRight = '0px';\n  /** @type {?} */\n\n  var paddingBottom = bottom;\n  /** @type {?} */\n\n  var paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = between;\n  } else {\n    paddingRight = between;\n  }\n\n  return {\n    'padding': \"0px \".concat(paddingRight, \" \").concat(paddingBottom, \" \").concat(paddingLeft)\n  };\n}\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\n\n\nfunction buildGridMargin(value, directionality) {\n  var _value$split5 = value.split(' '),\n      _value$split6 = _slicedToArray(_value$split5, 2),\n      between = _value$split6[0],\n      below = _value$split6[1];\n  /** @type {?} */\n\n\n  var bottom = below || between;\n  /** @type {?} */\n\n  var minus =\n  /**\n  * @param {?} str\n  * @return {?}\n  */\n  function minus(str) {\n    return \"-\".concat(str);\n  };\n  /** @type {?} */\n\n\n  var marginRight = '0px';\n  /** @type {?} */\n\n  var marginBottom = minus(bottom);\n  /** @type {?} */\n\n  var marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = minus(between);\n  } else {\n    marginRight = minus(between);\n  }\n\n  return {\n    'margin': \"0px \".concat(marginRight, \" \").concat(marginBottom, \" \").concat(marginLeft)\n  };\n}\n/**\n * @param {?} directionality\n * @param {?} layout\n * @return {?}\n */\n\n\nfunction getMarginType(directionality, layout) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n\n    case 'column-reverse':\n      return 'margin-top';\n\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n\n    default:\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n/**\n * @param {?} gapValue\n * @param {?} parent\n * @return {?}\n */\n\n\nfunction buildGapCSS(gapValue, parent) {\n  /** @type {?} */\n  var key = getMarginType(parent.directionality, parent.layout);\n  /** @type {?} */\n\n  var margins = Object.assign({}, CLEAR_MARGIN_CSS);\n  margins[key] = gapValue;\n  return margins;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\n\n\nfunction extendObject(dest) {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n\n    if (source != null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex/flex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FlexStyleBuilder =\n/** @class */\nfunction () {\n  var FlexStyleBuilder = /*#__PURE__*/function (_StyleBuilder3) {\n    _inherits(FlexStyleBuilder, _StyleBuilder3);\n\n    var _super7 = _createSuper(FlexStyleBuilder);\n\n    /**\n     * @param {?} layoutConfig\n     */\n    function FlexStyleBuilder(layoutConfig) {\n      var _this9;\n\n      _classCallCheck(this, FlexStyleBuilder);\n\n      _this9 = _super7.call(this);\n      _this9.layoutConfig = layoutConfig;\n      return _this9;\n    }\n    /**\n     * @param {?} input\n     * @param {?} parent\n     * @return {?}\n     */\n\n\n    _createClass(FlexStyleBuilder, [{\n      key: \"buildStyles\",\n      value: function buildStyles(input, parent) {\n        var _input$split = input.split(' '),\n            _input$split2 = _toArray(_input$split),\n            grow = _input$split2[0],\n            shrink = _input$split2[1],\n            basisParts = _input$split2.slice(2);\n        /** @type {?} */\n\n\n        var basis = basisParts.join(' '); // The flex-direction of this element's flex container. Defaults to 'row'.\n\n        /** @type {?} */\n\n        var direction = parent.direction.indexOf('column') > -1 ? 'column' : 'row';\n        /** @type {?} */\n\n        var max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n        /** @type {?} */\n\n        var min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n        /** @type {?} */\n\n        var hasCalc = String(basis).indexOf('calc') > -1;\n        /** @type {?} */\n\n        var usingCalc = hasCalc || basis === 'auto';\n        /** @type {?} */\n\n        var isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n        /** @type {?} */\n\n        var hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 || String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;\n        /** @type {?} */\n\n        var isValue = hasCalc || hasUnits;\n        grow = grow == '0' ? 0 : grow;\n        shrink = shrink == '0' ? 0 : shrink; // make box inflexible when shrink and grow are both zero\n        // should not set a min when the grow is zero\n        // should not set a max when the shrink is zero\n\n        /** @type {?} */\n\n        var isFixed = !grow && !shrink;\n        /** @type {?} */\n\n        var css = {}; // flex-basis allows you to specify the initial/starting main-axis size of the element,\n        // before anything else is computed. It can either be a percentage or an absolute value.\n        // It is, however, not the breaking point for flex-grow/shrink properties\n        //\n        // flex-grow can be seen as this:\n        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n        //   1: (Default value). Stretch; will be the same size to all other flex items on\n        //       the same row since they have a default value of 1.\n        //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n        //      with 'flex-grow: 1' on the same row.\n        // Use `null` to clear existing styles.\n\n        /** @type {?} */\n\n        var clearStyles = {\n          'max-width': null,\n          'max-height': null,\n          'min-width': null,\n          'min-height': null\n        };\n\n        switch (basis || '') {\n          case '':\n            /** @type {?} */\n            var useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n            basis = direction === 'row' ? '0%' : useColumnBasisZero ? '0.000000001px' : 'auto';\n            break;\n\n          case 'initial': // default\n\n          case 'nogrow':\n            grow = 0;\n            basis = 'auto';\n            break;\n\n          case 'grow':\n            basis = '100%';\n            break;\n\n          case 'noshrink':\n            shrink = 0;\n            basis = 'auto';\n            break;\n\n          case 'auto':\n            break;\n\n          case 'none':\n            grow = 0;\n            shrink = 0;\n            basis = 'auto';\n            break;\n\n          default:\n            // Defaults to percentage sizing unless `px` is explicitly set\n            if (!isValue && !isPercent && !isNaN(\n            /** @type {?} */\n            basis)) {\n              basis = basis + '%';\n            } // Fix for issue 280\n\n\n            if (basis === '0%') {\n              isValue = true;\n            }\n\n            if (basis === '0px') {\n              basis = '0%';\n            } // fix issue #5345\n\n\n            if (hasCalc) {\n              css = extendObject(clearStyles, {\n                'flex-grow': grow,\n                'flex-shrink': shrink,\n                'flex-basis': isValue ? basis : '100%'\n              });\n            } else {\n              css = extendObject(clearStyles, {\n                'flex': \"\".concat(grow, \" \").concat(shrink, \" \").concat(isValue ? basis : '100%')\n              });\n            }\n\n            break;\n        }\n\n        if (!(css['flex'] || css['flex-grow'])) {\n          if (hasCalc) {\n            css = extendObject(clearStyles, {\n              'flex-grow': grow,\n              'flex-shrink': shrink,\n              'flex-basis': basis\n            });\n          } else {\n            css = extendObject(clearStyles, {\n              'flex': \"\".concat(grow, \" \").concat(shrink, \" \").concat(basis)\n            });\n          }\n        } // Fix for issues 277, 534, and 728\n\n\n        if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n          css[min] = isFixed || isValue && grow ? basis : null;\n          css[max] = isFixed || !usingCalc && shrink ? basis : null;\n        } // Fix for issue 528\n\n\n        if (!css[min] && !css[max]) {\n          if (hasCalc) {\n            css = extendObject(clearStyles, {\n              'flex-grow': grow,\n              'flex-shrink': shrink,\n              'flex-basis': basis\n            });\n          } else {\n            css = extendObject(clearStyles, {\n              'flex': \"\".concat(grow, \" \").concat(shrink, \" \").concat(basis)\n            });\n          }\n        } else {\n          // Fix for issue 660\n          if (parent.hasWrap) {\n            css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ? hasCalc ? css[max] : \"\".concat(grow, \" \").concat(shrink, \" \").concat(css[max]) : hasCalc ? css[min] : \"\".concat(grow, \" \").concat(shrink, \" \").concat(css[min]);\n          }\n        }\n\n        return (\n          /** @type {?} */\n          extendObject(css, {\n            'box-sizing': 'border-box'\n          })\n        );\n      }\n    }]);\n\n    return FlexStyleBuilder;\n  }(StyleBuilder);\n\n  FlexStyleBuilder.ɵfac = function FlexStyleBuilder_Factory(t) {\n    return new (t || FlexStyleBuilder)(ɵngcc0.ɵɵinject(LAYOUT_CONFIG));\n  };\n  /** @nocollapse */\n\n\n  FlexStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexStyleBuilder_Factory() {\n      return new FlexStyleBuilder(ɵɵinject(LAYOUT_CONFIG));\n    },\n    token: FlexStyleBuilder,\n    providedIn: \"root\"\n  });\n  /** @nocollapse */\n\n  FlexStyleBuilder.ctorParameters = function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], function () {\n      return [{\n        type: undefined,\n        decorators: [{\n          type: Inject,\n          args: [LAYOUT_CONFIG]\n        }]\n      }];\n    }, null);\n  })();\n\n  return FlexStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$2 = ['fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md', 'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md', 'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm', 'fxFlex.gt-md', 'fxFlex.gt-lg'];\n/** @type {?} */\n\nvar selector$2 = \"\\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\\n  [fxFlex.gt-md], [fxFlex.gt-lg]\\n\";\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n\nvar FlexDirective =\n/** @class */\nfunction () {\n  /**\n   * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n   * Corresponds to the css `flex` shorthand property.\n   *\n   * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n   */\n  var FlexDirective = /*#__PURE__*/function (_BaseDirective3) {\n    _inherits(FlexDirective, _BaseDirective3);\n\n    var _super8 = _createSuper(FlexDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} layoutConfig\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexDirective(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {\n      var _this10;\n\n      _classCallCheck(this, FlexDirective);\n\n      _this10 = _super8.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this10.layoutConfig = layoutConfig;\n      _this10.marshal = marshal;\n      _this10.DIRECTIVE_KEY = 'flex';\n      _this10.direction = undefined;\n      _this10.wrap = undefined;\n      _this10.flexGrow = '1';\n      _this10.flexShrink = '1';\n\n      _this10.init();\n\n      return _this10;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(FlexDirective, [{\n      key: \"shrink\",\n      get: function get() {\n        return this.flexShrink;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this.flexShrink = value || '1';\n        this.triggerReflow();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"grow\",\n      get: function get() {\n        return this.flexGrow;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this.flexGrow = value || '1';\n        this.triggerReflow();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.parentElement) {\n          this.marshal.trackValue(this.parentElement, 'layout').pipe(takeUntil(this.destroySubject)).subscribe(this.onLayoutChange.bind(this));\n          this.marshal.trackValue(this.nativeElement, 'layout-align').pipe(takeUntil(this.destroySubject)).subscribe(this.triggerReflow.bind(this));\n        }\n      }\n      /**\n       * Caches the parent container's 'flex-direction' and updates the element's style.\n       * Used as a handler for layout change events from the parent flex container.\n       * @protected\n       * @param {?} matcher\n       * @return {?}\n       */\n\n    }, {\n      key: \"onLayoutChange\",\n      value: function onLayoutChange(matcher) {\n        /** @type {?} */\n        var layout = matcher.value;\n        /** @type {?} */\n\n        var layoutParts = layout.split(' ');\n        this.direction = layoutParts[0];\n        this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n        this.triggerUpdate();\n      }\n      /**\n       * Input to this is exclusively the basis input value\n       * @protected\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        /** @type {?} */\n        var addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n\n        if (this.direction === undefined) {\n          this.direction = this.getFlexFlowDirection(\n          /** @type {?} */\n          this.parentElement, addFlexToParent);\n        }\n\n        if (this.wrap === undefined) {\n          this.wrap = this.hasWrap(\n          /** @type {?} */\n          this.parentElement);\n        }\n        /** @type {?} */\n\n\n        var direction = this.direction;\n        /** @type {?} */\n\n        var isHorizontal = direction.startsWith('row');\n        /** @type {?} */\n\n        var hasWrap = this.wrap;\n\n        if (isHorizontal && hasWrap) {\n          this.styleCache = flexRowWrapCache;\n        } else if (isHorizontal && !hasWrap) {\n          this.styleCache = flexRowCache;\n        } else if (!isHorizontal && hasWrap) {\n          this.styleCache = flexColumnWrapCache;\n        } else if (!isHorizontal && !hasWrap) {\n          this.styleCache = flexColumnCache;\n        }\n        /** @type {?} */\n\n\n        var basis = String(value).replace(';', '');\n        /** @type {?} */\n\n        var parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n        this.addStyles(parts.join(' '), {\n          direction: direction,\n          hasWrap: hasWrap\n        });\n      }\n      /**\n       * Trigger a style reflow, usually based on a shrink/grow input event\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"triggerReflow\",\n      value: function triggerReflow() {\n        /** @type {?} */\n        var activatedValue = this.activatedValue;\n\n        if (activatedValue !== undefined) {\n          /** @type {?} */\n          var parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n          this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n        }\n      }\n    }]);\n\n    return FlexDirective;\n  }(BaseDirective2);\n\n  FlexDirective.ɵfac = function FlexDirective_Factory(t) {\n    return new (t || FlexDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LAYOUT_CONFIG), ɵngcc0.ɵɵdirectiveInject(FlexStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexDirective,\n    inputs: {\n      shrink: [\"fxShrink\", \"shrink\"],\n      grow: [\"fxGrow\", \"grow\"]\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  FlexDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: FlexStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n\n  FlexDirective.propDecorators = {\n    shrink: [{\n      type: Input,\n      args: ['fxShrink']\n    }],\n    grow: [{\n      type: Input,\n      args: ['fxGrow']\n    }]\n  };\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: undefined,\n        decorators: [{\n          type: Inject,\n          args: [LAYOUT_CONFIG]\n        }]\n      }, {\n        type: FlexStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, {\n      shrink: [{\n        type: Input,\n        args: ['fxShrink']\n      }],\n      grow: [{\n        type: Input,\n        args: ['fxGrow']\n      }]\n    });\n  })();\n\n  return FlexDirective;\n}();\n\nvar DefaultFlexDirective =\n/** @class */\nfunction () {\n  var DefaultFlexDirective = /*#__PURE__*/function (_FlexDirective) {\n    _inherits(DefaultFlexDirective, _FlexDirective);\n\n    var _super9 = _createSuper(DefaultFlexDirective);\n\n    function DefaultFlexDirective() {\n      var _this11;\n\n      _classCallCheck(this, DefaultFlexDirective);\n\n      _this11 = _super9.apply(this, arguments);\n      _this11.inputs = inputs$2;\n      return _this11;\n    }\n\n    return DefaultFlexDirective;\n  }(FlexDirective);\n\n  DefaultFlexDirective.ɵfac = function DefaultFlexDirective_Factory(t) {\n    return ɵDefaultFlexDirective_BaseFactory(t || DefaultFlexDirective);\n  };\n\n  DefaultFlexDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexDirective,\n    selectors: [[\"\", \"fxFlex\", \"\"], [\"\", \"fxFlex.xs\", \"\"], [\"\", \"fxFlex.sm\", \"\"], [\"\", \"fxFlex.md\", \"\"], [\"\", \"fxFlex.lg\", \"\"], [\"\", \"fxFlex.xl\", \"\"], [\"\", \"fxFlex.lt-sm\", \"\"], [\"\", \"fxFlex.lt-md\", \"\"], [\"\", \"fxFlex.lt-lg\", \"\"], [\"\", \"fxFlex.lt-xl\", \"\"], [\"\", \"fxFlex.gt-xs\", \"\"], [\"\", \"fxFlex.gt-sm\", \"\"], [\"\", \"fxFlex.gt-md\", \"\"], [\"\", \"fxFlex.gt-lg\", \"\"]],\n    inputs: {\n      fxFlex: \"fxFlex\",\n      \"fxFlex.xs\": \"fxFlex.xs\",\n      \"fxFlex.sm\": \"fxFlex.sm\",\n      \"fxFlex.md\": \"fxFlex.md\",\n      \"fxFlex.lg\": \"fxFlex.lg\",\n      \"fxFlex.xl\": \"fxFlex.xl\",\n      \"fxFlex.lt-sm\": \"fxFlex.lt-sm\",\n      \"fxFlex.lt-md\": \"fxFlex.lt-md\",\n      \"fxFlex.lt-lg\": \"fxFlex.lt-lg\",\n      \"fxFlex.lt-xl\": \"fxFlex.lt-xl\",\n      \"fxFlex.gt-xs\": \"fxFlex.gt-xs\",\n      \"fxFlex.gt-sm\": \"fxFlex.gt-sm\",\n      \"fxFlex.gt-md\": \"fxFlex.gt-md\",\n      \"fxFlex.gt-lg\": \"fxFlex.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultFlexDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultFlexDirective, [{\n      type: Directive,\n      args: [{\n        inputs: inputs$2,\n        selector: selector$2\n      }]\n    }], null, null);\n  })();\n\n  return DefaultFlexDirective;\n}();\n/** @type {?} */\n\n\nvar flexRowCache = new Map();\n/** @type {?} */\n\nvar flexColumnCache = new Map();\n/** @type {?} */\n\nvar flexRowWrapCache = new Map();\n/** @type {?} */\n\nvar flexColumnWrapCache = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-order/flex-order.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar FlexOrderStyleBuilder =\n/** @class */\nfunction () {\n  var FlexOrderStyleBuilder = /*#__PURE__*/function (_StyleBuilder4) {\n    _inherits(FlexOrderStyleBuilder, _StyleBuilder4);\n\n    var _super10 = _createSuper(FlexOrderStyleBuilder);\n\n    function FlexOrderStyleBuilder() {\n      _classCallCheck(this, FlexOrderStyleBuilder);\n\n      return _super10.apply(this, arguments);\n    }\n\n    _createClass(FlexOrderStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      function buildStyles(value) {\n        return {\n          order: value && parseInt(value, 10) || ''\n        };\n      }\n    }]);\n\n    return FlexOrderStyleBuilder;\n  }(StyleBuilder);\n\n  FlexOrderStyleBuilder.ɵfac = function FlexOrderStyleBuilder_Factory(t) {\n    return ɵFlexOrderStyleBuilder_BaseFactory(t || FlexOrderStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexOrderStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexOrderStyleBuilder_Factory() {\n      return new FlexOrderStyleBuilder();\n    },\n    token: FlexOrderStyleBuilder,\n    providedIn: \"root\"\n  });\n  var ɵFlexOrderStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexOrderStyleBuilder);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexOrderStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], null, null);\n  })();\n\n  return FlexOrderStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$3 = ['fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md', 'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md', 'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm', 'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'];\n/** @type {?} */\n\nvar selector$3 = \"\\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\\n\";\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n\nvar FlexOrderDirective =\n/** @class */\nfunction () {\n  /**\n   * 'flex-order' flexbox styling directive\n   * Configures the positional ordering of the element in a sorted layout container\n   * @see https://css-tricks.com/almanac/properties/o/order/\n   */\n  var FlexOrderDirective = /*#__PURE__*/function (_BaseDirective4) {\n    _inherits(FlexOrderDirective, _BaseDirective4);\n\n    var _super11 = _createSuper(FlexOrderDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexOrderDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this12;\n\n      _classCallCheck(this, FlexOrderDirective);\n\n      _this12 = _super11.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this12.DIRECTIVE_KEY = 'flex-order';\n      _this12.styleCache = flexOrderCache;\n\n      _this12.init();\n\n      return _this12;\n    }\n\n    return FlexOrderDirective;\n  }(BaseDirective2);\n\n  FlexOrderDirective.ɵfac = function FlexOrderDirective_Factory(t) {\n    return new (t || FlexOrderDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(FlexOrderStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexOrderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexOrderDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  FlexOrderDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: FlexOrderStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexOrderDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: FlexOrderStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, null);\n  })();\n\n  return FlexOrderDirective;\n}();\n/** @type {?} */\n\n\nvar flexOrderCache = new Map();\n\nvar DefaultFlexOrderDirective =\n/** @class */\nfunction () {\n  var DefaultFlexOrderDirective = /*#__PURE__*/function (_FlexOrderDirective) {\n    _inherits(DefaultFlexOrderDirective, _FlexOrderDirective);\n\n    var _super12 = _createSuper(DefaultFlexOrderDirective);\n\n    function DefaultFlexOrderDirective() {\n      var _this13;\n\n      _classCallCheck(this, DefaultFlexOrderDirective);\n\n      _this13 = _super12.apply(this, arguments);\n      _this13.inputs = inputs$3;\n      return _this13;\n    }\n\n    return DefaultFlexOrderDirective;\n  }(FlexOrderDirective);\n\n  DefaultFlexOrderDirective.ɵfac = function DefaultFlexOrderDirective_Factory(t) {\n    return ɵDefaultFlexOrderDirective_BaseFactory(t || DefaultFlexOrderDirective);\n  };\n\n  DefaultFlexOrderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexOrderDirective,\n    selectors: [[\"\", \"fxFlexOrder\", \"\"], [\"\", \"fxFlexOrder.xs\", \"\"], [\"\", \"fxFlexOrder.sm\", \"\"], [\"\", \"fxFlexOrder.md\", \"\"], [\"\", \"fxFlexOrder.lg\", \"\"], [\"\", \"fxFlexOrder.xl\", \"\"], [\"\", \"fxFlexOrder.lt-sm\", \"\"], [\"\", \"fxFlexOrder.lt-md\", \"\"], [\"\", \"fxFlexOrder.lt-lg\", \"\"], [\"\", \"fxFlexOrder.lt-xl\", \"\"], [\"\", \"fxFlexOrder.gt-xs\", \"\"], [\"\", \"fxFlexOrder.gt-sm\", \"\"], [\"\", \"fxFlexOrder.gt-md\", \"\"], [\"\", \"fxFlexOrder.gt-lg\", \"\"]],\n    inputs: {\n      fxFlexOrder: \"fxFlexOrder\",\n      \"fxFlexOrder.xs\": \"fxFlexOrder.xs\",\n      \"fxFlexOrder.sm\": \"fxFlexOrder.sm\",\n      \"fxFlexOrder.md\": \"fxFlexOrder.md\",\n      \"fxFlexOrder.lg\": \"fxFlexOrder.lg\",\n      \"fxFlexOrder.xl\": \"fxFlexOrder.xl\",\n      \"fxFlexOrder.lt-sm\": \"fxFlexOrder.lt-sm\",\n      \"fxFlexOrder.lt-md\": \"fxFlexOrder.lt-md\",\n      \"fxFlexOrder.lt-lg\": \"fxFlexOrder.lt-lg\",\n      \"fxFlexOrder.lt-xl\": \"fxFlexOrder.lt-xl\",\n      \"fxFlexOrder.gt-xs\": \"fxFlexOrder.gt-xs\",\n      \"fxFlexOrder.gt-sm\": \"fxFlexOrder.gt-sm\",\n      \"fxFlexOrder.gt-md\": \"fxFlexOrder.gt-md\",\n      \"fxFlexOrder.gt-lg\": \"fxFlexOrder.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultFlexOrderDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexOrderDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultFlexOrderDirective, [{\n      type: Directive,\n      args: [{\n        selector: selector$3,\n        inputs: inputs$3\n      }]\n    }], null, null);\n  })();\n\n  return DefaultFlexOrderDirective;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-offset/flex-offset.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FlexOffsetStyleBuilder =\n/** @class */\nfunction () {\n  var FlexOffsetStyleBuilder = /*#__PURE__*/function (_StyleBuilder5) {\n    _inherits(FlexOffsetStyleBuilder, _StyleBuilder5);\n\n    var _super13 = _createSuper(FlexOffsetStyleBuilder);\n\n    function FlexOffsetStyleBuilder() {\n      _classCallCheck(this, FlexOffsetStyleBuilder);\n\n      return _super13.apply(this, arguments);\n    }\n\n    _createClass(FlexOffsetStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} offset\n       * @param {?} parent\n       * @return {?}\n       */\n      function buildStyles(offset, parent) {\n        if (offset === '') {\n          offset = '0';\n        }\n        /** @type {?} */\n\n\n        var isPercent = String(offset).indexOf('%') > -1;\n        /** @type {?} */\n\n        var isPx = String(offset).indexOf('px') > -1;\n\n        if (!isPx && !isPercent && !isNaN(+offset)) {\n          offset = offset + '%';\n        }\n        /** @type {?} */\n\n\n        var horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n        /** @type {?} */\n\n        var styles = isFlowHorizontal(parent.layout) ? _defineProperty({}, horizontalLayoutKey, \"\".concat(offset)) : {\n          'margin-top': \"\".concat(offset)\n        };\n        return styles;\n      }\n    }]);\n\n    return FlexOffsetStyleBuilder;\n  }(StyleBuilder);\n\n  FlexOffsetStyleBuilder.ɵfac = function FlexOffsetStyleBuilder_Factory(t) {\n    return ɵFlexOffsetStyleBuilder_BaseFactory(t || FlexOffsetStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexOffsetStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexOffsetStyleBuilder_Factory() {\n      return new FlexOffsetStyleBuilder();\n    },\n    token: FlexOffsetStyleBuilder,\n    providedIn: \"root\"\n  });\n  var ɵFlexOffsetStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexOffsetStyleBuilder);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexOffsetStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], null, null);\n  })();\n\n  return FlexOffsetStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$4 = ['fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md', 'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md', 'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm', 'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'];\n/** @type {?} */\n\nvar selector$4 = \"\\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\\n\";\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n\nvar FlexOffsetDirective =\n/** @class */\nfunction () {\n  /**\n   * 'flex-offset' flexbox styling directive\n   * Configures the 'margin-left' of the element in a layout container\n   */\n  var FlexOffsetDirective = /*#__PURE__*/function (_BaseDirective5) {\n    _inherits(FlexOffsetDirective, _BaseDirective5);\n\n    var _super14 = _createSuper(FlexOffsetDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} directionality\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     * @param {?} styler\n     */\n    function FlexOffsetDirective(elRef, directionality, styleBuilder, marshal, styler) {\n      var _this14;\n\n      _classCallCheck(this, FlexOffsetDirective);\n\n      _this14 = _super14.call(this, elRef, styleBuilder, styler, marshal);\n      _this14.directionality = directionality;\n      _this14.DIRECTIVE_KEY = 'flex-offset';\n\n      _this14.init([_this14.directionality.change]); // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n\n\n      if (_this14.parentElement) {\n        _this14.marshal.trackValue(_this14.parentElement, 'layout-gap').pipe(takeUntil(_this14.destroySubject)).subscribe(_this14.triggerUpdate.bind(_assertThisInitialized(_this14)));\n      }\n\n      return _this14;\n    } // *********************************************\n    // Protected methods\n    // *********************************************\n\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n\n\n    _createClass(FlexOffsetDirective, [{\n      key: \"updateWithValue\",\n      value: function updateWithValue() {\n        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n\n        /** @type {?} */\n        var layout = this.getFlexFlowDirection(\n        /** @type {?} */\n        this.parentElement, true);\n        /** @type {?} */\n\n        var isRtl = this.directionality.value === 'rtl';\n\n        if (layout === 'row' && isRtl) {\n          this.styleCache = flexOffsetCacheRowRtl;\n        } else if (layout === 'row' && !isRtl) {\n          this.styleCache = flexOffsetCacheRowLtr;\n        } else if (layout === 'column' && isRtl) {\n          this.styleCache = flexOffsetCacheColumnRtl;\n        } else if (layout === 'column' && !isRtl) {\n          this.styleCache = flexOffsetCacheColumnLtr;\n        }\n\n        this.addStyles(value + '', {\n          layout: layout,\n          isRtl: isRtl\n        });\n      }\n    }]);\n\n    return FlexOffsetDirective;\n  }(BaseDirective2);\n\n  FlexOffsetDirective.ɵfac = function FlexOffsetDirective_Factory(t) {\n    return new (t || FlexOffsetDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality), ɵngcc0.ɵɵdirectiveInject(FlexOffsetStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils));\n  };\n\n  FlexOffsetDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexOffsetDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  FlexOffsetDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: Directionality\n    }, {\n      type: FlexOffsetStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }, {\n      type: StyleUtils\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexOffsetDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc2.Directionality\n      }, {\n        type: FlexOffsetStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }, {\n        type: ɵngcc1.StyleUtils\n      }];\n    }, null);\n  })();\n\n  return FlexOffsetDirective;\n}();\n\nvar DefaultFlexOffsetDirective =\n/** @class */\nfunction () {\n  var DefaultFlexOffsetDirective = /*#__PURE__*/function (_FlexOffsetDirective) {\n    _inherits(DefaultFlexOffsetDirective, _FlexOffsetDirective);\n\n    var _super15 = _createSuper(DefaultFlexOffsetDirective);\n\n    function DefaultFlexOffsetDirective() {\n      var _this15;\n\n      _classCallCheck(this, DefaultFlexOffsetDirective);\n\n      _this15 = _super15.apply(this, arguments);\n      _this15.inputs = inputs$4;\n      return _this15;\n    }\n\n    return DefaultFlexOffsetDirective;\n  }(FlexOffsetDirective);\n\n  DefaultFlexOffsetDirective.ɵfac = function DefaultFlexOffsetDirective_Factory(t) {\n    return ɵDefaultFlexOffsetDirective_BaseFactory(t || DefaultFlexOffsetDirective);\n  };\n\n  DefaultFlexOffsetDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexOffsetDirective,\n    selectors: [[\"\", \"fxFlexOffset\", \"\"], [\"\", \"fxFlexOffset.xs\", \"\"], [\"\", \"fxFlexOffset.sm\", \"\"], [\"\", \"fxFlexOffset.md\", \"\"], [\"\", \"fxFlexOffset.lg\", \"\"], [\"\", \"fxFlexOffset.xl\", \"\"], [\"\", \"fxFlexOffset.lt-sm\", \"\"], [\"\", \"fxFlexOffset.lt-md\", \"\"], [\"\", \"fxFlexOffset.lt-lg\", \"\"], [\"\", \"fxFlexOffset.lt-xl\", \"\"], [\"\", \"fxFlexOffset.gt-xs\", \"\"], [\"\", \"fxFlexOffset.gt-sm\", \"\"], [\"\", \"fxFlexOffset.gt-md\", \"\"], [\"\", \"fxFlexOffset.gt-lg\", \"\"]],\n    inputs: {\n      fxFlexOffset: \"fxFlexOffset\",\n      \"fxFlexOffset.xs\": \"fxFlexOffset.xs\",\n      \"fxFlexOffset.sm\": \"fxFlexOffset.sm\",\n      \"fxFlexOffset.md\": \"fxFlexOffset.md\",\n      \"fxFlexOffset.lg\": \"fxFlexOffset.lg\",\n      \"fxFlexOffset.xl\": \"fxFlexOffset.xl\",\n      \"fxFlexOffset.lt-sm\": \"fxFlexOffset.lt-sm\",\n      \"fxFlexOffset.lt-md\": \"fxFlexOffset.lt-md\",\n      \"fxFlexOffset.lt-lg\": \"fxFlexOffset.lt-lg\",\n      \"fxFlexOffset.lt-xl\": \"fxFlexOffset.lt-xl\",\n      \"fxFlexOffset.gt-xs\": \"fxFlexOffset.gt-xs\",\n      \"fxFlexOffset.gt-sm\": \"fxFlexOffset.gt-sm\",\n      \"fxFlexOffset.gt-md\": \"fxFlexOffset.gt-md\",\n      \"fxFlexOffset.gt-lg\": \"fxFlexOffset.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultFlexOffsetDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexOffsetDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultFlexOffsetDirective, [{\n      type: Directive,\n      args: [{\n        selector: selector$4,\n        inputs: inputs$4\n      }]\n    }], null, null);\n  })();\n\n  return DefaultFlexOffsetDirective;\n}();\n/** @type {?} */\n\n\nvar flexOffsetCacheRowRtl = new Map();\n/** @type {?} */\n\nvar flexOffsetCacheColumnRtl = new Map();\n/** @type {?} */\n\nvar flexOffsetCacheRowLtr = new Map();\n/** @type {?} */\n\nvar flexOffsetCacheColumnLtr = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-align/flex-align.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar FlexAlignStyleBuilder =\n/** @class */\nfunction () {\n  var FlexAlignStyleBuilder = /*#__PURE__*/function (_StyleBuilder6) {\n    _inherits(FlexAlignStyleBuilder, _StyleBuilder6);\n\n    var _super16 = _createSuper(FlexAlignStyleBuilder);\n\n    function FlexAlignStyleBuilder() {\n      _classCallCheck(this, FlexAlignStyleBuilder);\n\n      return _super16.apply(this, arguments);\n    }\n\n    _createClass(FlexAlignStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} input\n       * @return {?}\n       */\n      function buildStyles(input) {\n        input = input || 'stretch';\n        /** @type {?} */\n\n        var styles = {}; // Cross-axis\n\n        switch (input) {\n          case 'start':\n            styles['align-self'] = 'flex-start';\n            break;\n\n          case 'end':\n            styles['align-self'] = 'flex-end';\n            break;\n\n          default:\n            styles['align-self'] = input;\n            break;\n        }\n\n        return styles;\n      }\n    }]);\n\n    return FlexAlignStyleBuilder;\n  }(StyleBuilder);\n\n  FlexAlignStyleBuilder.ɵfac = function FlexAlignStyleBuilder_Factory(t) {\n    return ɵFlexAlignStyleBuilder_BaseFactory(t || FlexAlignStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexAlignStyleBuilder_Factory() {\n      return new FlexAlignStyleBuilder();\n    },\n    token: FlexAlignStyleBuilder,\n    providedIn: \"root\"\n  });\n  var ɵFlexAlignStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexAlignStyleBuilder);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexAlignStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], null, null);\n  })();\n\n  return FlexAlignStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$5 = ['fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md', 'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md', 'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm', 'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'];\n/** @type {?} */\n\nvar selector$5 = \"\\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\\n\";\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n\nvar FlexAlignDirective =\n/** @class */\nfunction () {\n  /**\n   * 'flex-align' flexbox styling directive\n   * Allows element-specific overrides for cross-axis alignments in a layout container\n   * @see https://css-tricks.com/almanac/properties/a/align-self/\n   */\n  var FlexAlignDirective = /*#__PURE__*/function (_BaseDirective6) {\n    _inherits(FlexAlignDirective, _BaseDirective6);\n\n    var _super17 = _createSuper(FlexAlignDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexAlignDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this16;\n\n      _classCallCheck(this, FlexAlignDirective);\n\n      _this16 = _super17.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this16.DIRECTIVE_KEY = 'flex-align';\n      _this16.styleCache = flexAlignCache;\n\n      _this16.init();\n\n      return _this16;\n    }\n\n    return FlexAlignDirective;\n  }(BaseDirective2);\n\n  FlexAlignDirective.ɵfac = function FlexAlignDirective_Factory(t) {\n    return new (t || FlexAlignDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(FlexAlignStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexAlignDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  FlexAlignDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: FlexAlignStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexAlignDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: FlexAlignStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, null);\n  })();\n\n  return FlexAlignDirective;\n}();\n/** @type {?} */\n\n\nvar flexAlignCache = new Map();\n\nvar DefaultFlexAlignDirective =\n/** @class */\nfunction () {\n  var DefaultFlexAlignDirective = /*#__PURE__*/function (_FlexAlignDirective) {\n    _inherits(DefaultFlexAlignDirective, _FlexAlignDirective);\n\n    var _super18 = _createSuper(DefaultFlexAlignDirective);\n\n    function DefaultFlexAlignDirective() {\n      var _this17;\n\n      _classCallCheck(this, DefaultFlexAlignDirective);\n\n      _this17 = _super18.apply(this, arguments);\n      _this17.inputs = inputs$5;\n      return _this17;\n    }\n\n    return DefaultFlexAlignDirective;\n  }(FlexAlignDirective);\n\n  DefaultFlexAlignDirective.ɵfac = function DefaultFlexAlignDirective_Factory(t) {\n    return ɵDefaultFlexAlignDirective_BaseFactory(t || DefaultFlexAlignDirective);\n  };\n\n  DefaultFlexAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexAlignDirective,\n    selectors: [[\"\", \"fxFlexAlign\", \"\"], [\"\", \"fxFlexAlign.xs\", \"\"], [\"\", \"fxFlexAlign.sm\", \"\"], [\"\", \"fxFlexAlign.md\", \"\"], [\"\", \"fxFlexAlign.lg\", \"\"], [\"\", \"fxFlexAlign.xl\", \"\"], [\"\", \"fxFlexAlign.lt-sm\", \"\"], [\"\", \"fxFlexAlign.lt-md\", \"\"], [\"\", \"fxFlexAlign.lt-lg\", \"\"], [\"\", \"fxFlexAlign.lt-xl\", \"\"], [\"\", \"fxFlexAlign.gt-xs\", \"\"], [\"\", \"fxFlexAlign.gt-sm\", \"\"], [\"\", \"fxFlexAlign.gt-md\", \"\"], [\"\", \"fxFlexAlign.gt-lg\", \"\"]],\n    inputs: {\n      fxFlexAlign: \"fxFlexAlign\",\n      \"fxFlexAlign.xs\": \"fxFlexAlign.xs\",\n      \"fxFlexAlign.sm\": \"fxFlexAlign.sm\",\n      \"fxFlexAlign.md\": \"fxFlexAlign.md\",\n      \"fxFlexAlign.lg\": \"fxFlexAlign.lg\",\n      \"fxFlexAlign.xl\": \"fxFlexAlign.xl\",\n      \"fxFlexAlign.lt-sm\": \"fxFlexAlign.lt-sm\",\n      \"fxFlexAlign.lt-md\": \"fxFlexAlign.lt-md\",\n      \"fxFlexAlign.lt-lg\": \"fxFlexAlign.lt-lg\",\n      \"fxFlexAlign.lt-xl\": \"fxFlexAlign.lt-xl\",\n      \"fxFlexAlign.gt-xs\": \"fxFlexAlign.gt-xs\",\n      \"fxFlexAlign.gt-sm\": \"fxFlexAlign.gt-sm\",\n      \"fxFlexAlign.gt-md\": \"fxFlexAlign.gt-md\",\n      \"fxFlexAlign.gt-lg\": \"fxFlexAlign.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultFlexAlignDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexAlignDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultFlexAlignDirective, [{\n      type: Directive,\n      args: [{\n        selector: selector$5,\n        inputs: inputs$5\n      }]\n    }], null, null);\n  })();\n\n  return DefaultFlexAlignDirective;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-fill/flex-fill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\nvar FlexFillStyleBuilder =\n/** @class */\nfunction () {\n  var FlexFillStyleBuilder = /*#__PURE__*/function (_StyleBuilder7) {\n    _inherits(FlexFillStyleBuilder, _StyleBuilder7);\n\n    var _super19 = _createSuper(FlexFillStyleBuilder);\n\n    function FlexFillStyleBuilder() {\n      _classCallCheck(this, FlexFillStyleBuilder);\n\n      return _super19.apply(this, arguments);\n    }\n\n    _createClass(FlexFillStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} _input\n       * @return {?}\n       */\n      function buildStyles(_input) {\n        return FLEX_FILL_CSS;\n      }\n    }]);\n\n    return FlexFillStyleBuilder;\n  }(StyleBuilder);\n\n  FlexFillStyleBuilder.ɵfac = function FlexFillStyleBuilder_Factory(t) {\n    return ɵFlexFillStyleBuilder_BaseFactory(t || FlexFillStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexFillStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexFillStyleBuilder_Factory() {\n      return new FlexFillStyleBuilder();\n    },\n    token: FlexFillStyleBuilder,\n    providedIn: \"root\"\n  });\n  var ɵFlexFillStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexFillStyleBuilder);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexFillStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], null, null);\n  })();\n\n  return FlexFillStyleBuilder;\n}();\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n\n\nvar FlexFillDirective =\n/** @class */\nfunction () {\n  /**\n   * 'fxFill' flexbox styling directive\n   *  Maximizes width and height of element in a layout container\n   *\n   *  NOTE: fxFill is NOT responsive API!!\n   */\n  var FlexFillDirective = /*#__PURE__*/function (_BaseDirective7) {\n    _inherits(FlexFillDirective, _BaseDirective7);\n\n    var _super20 = _createSuper(FlexFillDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexFillDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this18;\n\n      _classCallCheck(this, FlexFillDirective);\n\n      _this18 = _super20.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this18.styleCache = flexFillCache;\n\n      _this18.addStyles('');\n\n      return _this18;\n    }\n\n    return FlexFillDirective;\n  }(BaseDirective2);\n\n  FlexFillDirective.ɵfac = function FlexFillDirective_Factory(t) {\n    return new (t || FlexFillDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(FlexFillStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexFillDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexFillDirective,\n    selectors: [[\"\", \"fxFill\", \"\"], [\"\", \"fxFlexFill\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  FlexFillDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: FlexFillStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexFillDirective, [{\n      type: Directive,\n      args: [{\n        selector: \"[fxFill], [fxFlexFill]\"\n      }]\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: FlexFillStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, null);\n  })();\n\n  return FlexFillDirective;\n}();\n/** @type {?} */\n\n\nvar flexFillCache = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-align/layout-align.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar LayoutAlignStyleBuilder =\n/** @class */\nfunction () {\n  var LayoutAlignStyleBuilder = /*#__PURE__*/function (_StyleBuilder8) {\n    _inherits(LayoutAlignStyleBuilder, _StyleBuilder8);\n\n    var _super21 = _createSuper(LayoutAlignStyleBuilder);\n\n    function LayoutAlignStyleBuilder() {\n      _classCallCheck(this, LayoutAlignStyleBuilder);\n\n      return _super21.apply(this, arguments);\n    }\n\n    _createClass(LayoutAlignStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} align\n       * @param {?} parent\n       * @return {?}\n       */\n      function buildStyles(align, parent) {\n        /** @type {?} */\n        var css = {};\n\n        var _align$split = align.split(' '),\n            _align$split2 = _slicedToArray(_align$split, 2),\n            mainAxis = _align$split2[0],\n            crossAxis = _align$split2[1]; // Main axis\n\n\n        switch (mainAxis) {\n          case 'center':\n            css['justify-content'] = 'center';\n            break;\n\n          case 'space-around':\n            css['justify-content'] = 'space-around';\n            break;\n\n          case 'space-between':\n            css['justify-content'] = 'space-between';\n            break;\n\n          case 'space-evenly':\n            css['justify-content'] = 'space-evenly';\n            break;\n\n          case 'end':\n          case 'flex-end':\n            css['justify-content'] = 'flex-end';\n            break;\n\n          case 'start':\n          case 'flex-start':\n          default:\n            css['justify-content'] = 'flex-start'; // default main axis\n\n            break;\n        } // Cross-axis\n\n\n        switch (crossAxis) {\n          case 'start':\n          case 'flex-start':\n            css['align-items'] = css['align-content'] = 'flex-start';\n            break;\n\n          case 'center':\n            css['align-items'] = css['align-content'] = 'center';\n            break;\n\n          case 'end':\n          case 'flex-end':\n            css['align-items'] = css['align-content'] = 'flex-end';\n            break;\n\n          case 'space-between':\n            css['align-content'] = 'space-between';\n            css['align-items'] = 'stretch';\n            break;\n\n          case 'space-around':\n            css['align-content'] = 'space-around';\n            css['align-items'] = 'stretch';\n            break;\n\n          case 'baseline':\n            css['align-content'] = 'stretch';\n            css['align-items'] = 'baseline';\n            break;\n\n          case 'stretch':\n          default:\n            // 'stretch'\n            css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n\n            break;\n        }\n\n        return (\n          /** @type {?} */\n          extendObject(css, {\n            'display': parent.inline ? 'inline-flex' : 'flex',\n            'flex-direction': parent.layout,\n            'box-sizing': 'border-box',\n            'max-width': crossAxis === 'stretch' ? !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n            'max-height': crossAxis === 'stretch' ? isFlowHorizontal(parent.layout) ? '100%' : null : null\n          })\n        );\n      }\n    }]);\n\n    return LayoutAlignStyleBuilder;\n  }(StyleBuilder);\n\n  LayoutAlignStyleBuilder.ɵfac = function LayoutAlignStyleBuilder_Factory(t) {\n    return ɵLayoutAlignStyleBuilder_BaseFactory(t || LayoutAlignStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  LayoutAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function LayoutAlignStyleBuilder_Factory() {\n      return new LayoutAlignStyleBuilder();\n    },\n    token: LayoutAlignStyleBuilder,\n    providedIn: \"root\"\n  });\n  var ɵLayoutAlignStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(LayoutAlignStyleBuilder);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(LayoutAlignStyleBuilder, [{\n      type: Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }], null, null);\n  })();\n\n  return LayoutAlignStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$6 = ['fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md', 'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md', 'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm', 'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'];\n/** @type {?} */\n\nvar selector$6 = \"\\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\\n\";\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n * @see https://css-tricks.com/almanac/properties/j/justify-content/\n * @see https://css-tricks.com/almanac/properties/a/align-items/\n * @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n\nvar LayoutAlignDirective =\n/** @class */\nfunction () {\n  /**\n   * 'layout-align' flexbox styling directive\n   *  Defines positioning of child elements along main and cross axis in a layout container\n   *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n   *\n   * @see https://css-tricks.com/almanac/properties/j/justify-content/\n   * @see https://css-tricks.com/almanac/properties/a/align-items/\n   * @see https://css-tricks.com/almanac/properties/a/align-content/\n   */\n  var LayoutAlignDirective = /*#__PURE__*/function (_BaseDirective8) {\n    _inherits(LayoutAlignDirective, _BaseDirective8);\n\n    var _super22 = _createSuper(LayoutAlignDirective);\n\n    // default inline value\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function LayoutAlignDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this19;\n\n      _classCallCheck(this, LayoutAlignDirective);\n\n      _this19 = _super22.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this19.DIRECTIVE_KEY = 'layout-align';\n      _this19.layout = 'row'; // default flex-direction\n      // default flex-direction\n\n      _this19.inline = false; // default inline value\n\n      _this19.init();\n\n      _this19.marshal.trackValue(_this19.nativeElement, 'layout').pipe(takeUntil(_this19.destroySubject)).subscribe(_this19.onLayoutChange.bind(_assertThisInitialized(_this19)));\n\n      return _this19;\n    } // *********************************************\n    // Protected methods\n    // *********************************************\n\n    /**\n     *\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    _createClass(LayoutAlignDirective, [{\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        /** @type {?} */\n        var layout = this.layout || 'row';\n        /** @type {?} */\n\n        var inline = this.inline;\n\n        if (layout === 'row' && inline) {\n          this.styleCache = layoutAlignHorizontalInlineCache;\n        } else if (layout === 'row' && !inline) {\n          this.styleCache = layoutAlignHorizontalCache;\n        } else if (layout === 'row-reverse' && inline) {\n          this.styleCache = layoutAlignHorizontalRevInlineCache;\n        } else if (layout === 'row-reverse' && !inline) {\n          this.styleCache = layoutAlignHorizontalRevCache;\n        } else if (layout === 'column' && inline) {\n          this.styleCache = layoutAlignVerticalInlineCache;\n        } else if (layout === 'column' && !inline) {\n          this.styleCache = layoutAlignVerticalCache;\n        } else if (layout === 'column-reverse' && inline) {\n          this.styleCache = layoutAlignVerticalRevInlineCache;\n        } else if (layout === 'column-reverse' && !inline) {\n          this.styleCache = layoutAlignVerticalRevCache;\n        }\n\n        this.addStyles(value, {\n          layout: layout,\n          inline: inline\n        });\n      }\n      /**\n       * Cache the parent container 'flex-direction' and update the 'flex' styles\n       * @protected\n       * @param {?} matcher\n       * @return {?}\n       */\n\n    }, {\n      key: \"onLayoutChange\",\n      value: function onLayoutChange(matcher) {\n        var _this20 = this;\n\n        /** @type {?} */\n        var layoutKeys = matcher.value.split(' ');\n        this.layout = layoutKeys[0];\n        this.inline = matcher.value.includes('inline');\n\n        if (!LAYOUT_VALUES.find(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return x === _this20.layout;\n        })) {\n          this.layout = 'row';\n        }\n\n        this.triggerUpdate();\n      }\n    }]);\n\n    return LayoutAlignDirective;\n  }(BaseDirective2);\n\n  LayoutAlignDirective.ɵfac = function LayoutAlignDirective_Factory(t) {\n    return new (t || LayoutAlignDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LayoutAlignStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  LayoutAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: LayoutAlignDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  LayoutAlignDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: LayoutAlignStyleBuilder\n    }, {\n      type: MediaMarshaller\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(LayoutAlignDirective, [{\n      type: Directive\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc1.StyleUtils\n      }, {\n        type: LayoutAlignStyleBuilder\n      }, {\n        type: ɵngcc1.MediaMarshaller\n      }];\n    }, null);\n  })();\n\n  return LayoutAlignDirective;\n}();\n\nvar DefaultLayoutAlignDirective =\n/** @class */\nfunction () {\n  var DefaultLayoutAlignDirective = /*#__PURE__*/function (_LayoutAlignDirective) {\n    _inherits(DefaultLayoutAlignDirective, _LayoutAlignDirective);\n\n    var _super23 = _createSuper(DefaultLayoutAlignDirective);\n\n    function DefaultLayoutAlignDirective() {\n      var _this21;\n\n      _classCallCheck(this, DefaultLayoutAlignDirective);\n\n      _this21 = _super23.apply(this, arguments);\n      _this21.inputs = inputs$6;\n      return _this21;\n    }\n\n    return DefaultLayoutAlignDirective;\n  }(LayoutAlignDirective);\n\n  DefaultLayoutAlignDirective.ɵfac = function DefaultLayoutAlignDirective_Factory(t) {\n    return ɵDefaultLayoutAlignDirective_BaseFactory(t || DefaultLayoutAlignDirective);\n  };\n\n  DefaultLayoutAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultLayoutAlignDirective,\n    selectors: [[\"\", \"fxLayoutAlign\", \"\"], [\"\", \"fxLayoutAlign.xs\", \"\"], [\"\", \"fxLayoutAlign.sm\", \"\"], [\"\", \"fxLayoutAlign.md\", \"\"], [\"\", \"fxLayoutAlign.lg\", \"\"], [\"\", \"fxLayoutAlign.xl\", \"\"], [\"\", \"fxLayoutAlign.lt-sm\", \"\"], [\"\", \"fxLayoutAlign.lt-md\", \"\"], [\"\", \"fxLayoutAlign.lt-lg\", \"\"], [\"\", \"fxLayoutAlign.lt-xl\", \"\"], [\"\", \"fxLayoutAlign.gt-xs\", \"\"], [\"\", \"fxLayoutAlign.gt-sm\", \"\"], [\"\", \"fxLayoutAlign.gt-md\", \"\"], [\"\", \"fxLayoutAlign.gt-lg\", \"\"]],\n    inputs: {\n      fxLayoutAlign: \"fxLayoutAlign\",\n      \"fxLayoutAlign.xs\": \"fxLayoutAlign.xs\",\n      \"fxLayoutAlign.sm\": \"fxLayoutAlign.sm\",\n      \"fxLayoutAlign.md\": \"fxLayoutAlign.md\",\n      \"fxLayoutAlign.lg\": \"fxLayoutAlign.lg\",\n      \"fxLayoutAlign.xl\": \"fxLayoutAlign.xl\",\n      \"fxLayoutAlign.lt-sm\": \"fxLayoutAlign.lt-sm\",\n      \"fxLayoutAlign.lt-md\": \"fxLayoutAlign.lt-md\",\n      \"fxLayoutAlign.lt-lg\": \"fxLayoutAlign.lt-lg\",\n      \"fxLayoutAlign.lt-xl\": \"fxLayoutAlign.lt-xl\",\n      \"fxLayoutAlign.gt-xs\": \"fxLayoutAlign.gt-xs\",\n      \"fxLayoutAlign.gt-sm\": \"fxLayoutAlign.gt-sm\",\n      \"fxLayoutAlign.gt-md\": \"fxLayoutAlign.gt-md\",\n      \"fxLayoutAlign.gt-lg\": \"fxLayoutAlign.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  var ɵDefaultLayoutAlignDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultLayoutAlignDirective);\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(DefaultLayoutAlignDirective, [{\n      type: Directive,\n      args: [{\n        selector: selector$6,\n        inputs: inputs$6\n      }]\n    }], null, null);\n  })();\n\n  return DefaultLayoutAlignDirective;\n}();\n/** @type {?} */\n\n\nvar layoutAlignHorizontalCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalCache = new Map();\n/** @type {?} */\n\nvar layoutAlignHorizontalRevCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalRevCache = new Map();\n/** @type {?} */\n\nvar layoutAlignHorizontalInlineCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalInlineCache = new Map();\n/** @type {?} */\n\nvar layoutAlignHorizontalRevInlineCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalRevInlineCache = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar ALL_DIRECTIVES = [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\nvar FlexModule =\n/** @class */\nfunction () {\n  /**\n   * *****************************************************************\n   * Define module for the Flex API\n   * *****************************************************************\n   */\n  var FlexModule = function FlexModule() {\n    _classCallCheck(this, FlexModule);\n  };\n\n  FlexModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: FlexModule\n  });\n  FlexModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function FlexModule_Factory(t) {\n      return new (t || FlexModule)();\n    },\n    imports: [[CoreModule, BidiModule]]\n  });\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlexModule, {\n      declarations: function declarations() {\n        return [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n      },\n      imports: function imports() {\n        return [CoreModule, BidiModule];\n      },\n      exports: function exports() {\n        return [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n      }\n    });\n  })();\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(FlexModule, [{\n      type: NgModule,\n      args: [{\n        imports: [CoreModule, BidiModule],\n        declarations: [].concat(ALL_DIRECTIVES),\n        exports: [].concat(ALL_DIRECTIVES)\n      }]\n    }], null, null);\n  })();\n\n  return FlexModule;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective };","map":{"version":3,"sources":["../../../src/lib/utils/layout-validator.ts","../../../src/lib/flex/layout/layout.ts","../../../src/lib/flex/layout-gap/layout-gap.ts","../../../src/lib/utils/object-extend.ts","../../../src/lib/flex/flex/flex.ts","../../../src/lib/flex/flex-order/flex-order.ts","../../../src/lib/flex/flex-offset/flex-offset.ts","../../../src/lib/flex/flex-align/flex-align.ts","../../../src/lib/flex/flex-fill/flex-fill.ts","../../../src/lib/flex/layout-align/layout-align.ts","../../../src/lib/flex/module.ts"],"names":["inputs","selector"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive()\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: LayoutStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive()\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              styleBuilder: LayoutGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  const [between, below] = value.split(' ');\n  const bottom = below || between;\n  let paddingRight = '0px', paddingBottom = bottom, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = between;\n  } else {\n    paddingRight = between;\n  }\n\n  return {'padding': `0px ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  const [between, below] = value.split(' ');\n  const bottom = below || between;\n  const minus = (str: string) => `-${str}`;\n  let marginRight = '0px', marginBottom = minus(bottom), marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = minus(between);\n  } else {\n    marginRight = minus(between);\n  }\n\n  return {'margin': `0px ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input, OnInit} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive()\nexport class FlexDirective extends BaseDirective2 implements OnInit {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction?: string = undefined;\n  protected wrap?: boolean = undefined;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  ngOnInit() {\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (this.direction === undefined) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    if (this.wrap === undefined) {\n      this.wrap = this.hasWrap(this.parentElement!);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive()\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: FlexOrderStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive()\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(elRef: ElementRef,\n              protected directionality: Directionality,\n              styleBuilder: FlexOffsetStyleBuilder,\n              marshal: MediaMarshaller,\n              styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive()\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: FlexAlignStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: FlexFillStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive()\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: LayoutAlignStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n"]},"metadata":{},"sourceType":"module"}