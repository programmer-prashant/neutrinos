{"ast":null,"code":"import _classCallCheck from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/10016/neutrinos-studio/assignment-1/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Injectable, EventEmitter, Output, Injector, Component, Input, NgModule, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { map, catchError, timeout, finalize, switchMap, filter, take } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { os, name, version } from 'platform';\nimport { Driver, NgForageConfig, NgForage, NgForageCache, InstanceFactory } from 'ngforage';\nimport { Subject, throwError, BehaviorSubject } from 'rxjs';\nimport firebase from 'firebase'; // @dynamic\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngforage';\nimport * as ɵngcc2 from '@angular/common/http';\nimport * as ɵngcc3 from '@angular/router';\nimport * as ɵngcc4 from '@angular/common';\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    background: a0,\n    color: a1\n  };\n};\n\nvar _c1 = function _c1() {\n  return [\"snackbar-layout\", \"customClass\"];\n};\n\nvar _c2 = [\"*\"];\n\nvar _c3 = function _c3(a0) {\n  return {\n    color: a0\n  };\n};\n\nfunction SnackbarComponent_n_snack_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function SnackbarComponent_n_snack_1_div_4_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var snackbar_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n      return snackbar_r1.action.onClick();\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var snackbar_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c3, snackbar_r1.action.color || ctx_r2.accent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", snackbar_r1.action.text, \" \");\n  }\n}\n\nfunction SnackbarComponent_n_snack_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"n-snack\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, SnackbarComponent_n_snack_1_div_4_Template, 2, 4, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var snackbar_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"background\", snackbar_r1.background || ctx_r0.background)(\"customClass\", snackbar_r1.customClass || ctx_r0.customClass)(\"color\", snackbar_r1.color || ctx_r0.color || ctx_r0.calcTextColor(snackbar_r1.background || ctx_r0.background));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", snackbar_r1.msg, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", snackbar_r1.action.text);\n  }\n}\n\nvar _c4 = \".snack-action[_ngcontent-%COMP%]{color:#2196f3;cursor:pointer;font-weight:700}.container[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap}.child[_ngcontent-%COMP%]{flex:1 0;margin-right:.5em;width:60%}.snackbars.bottom-center[_ngcontent-%COMP%]{align-items:middle}.snackbars[_ngcontent-%COMP%]{display:flex;display:inline;font-family:Roboto;letter-spacing:1px;max-width:100%;position:fixed;word-wrap:break-word;z-index:99999}.snackbars.bottom-center[_ngcontent-%COMP%]{align-items:center;bottom:1px;left:50%;transform:translate(-50%)}.snack[_ngcontent-%COMP%]{border-radius:.3em;max-height:50vh;overflow:auto;padding:1em}\";\n\nvar NSystemService = /*#__PURE__*/function () {\n  function NSystemService() {\n    _classCallCheck(this, NSystemService);\n\n    this._deviceType = this.checkDevice();\n  }\n\n  _createClass(NSystemService, [{\n    key: \"checkDevice\",\n    value:\n    /**\n     * Seter and getter for the environments\n     */\n    // set environments(properties) {\n    //   console.log(properties);\n    //   NSystemService.envProperties = properties;\n    //   this.properties = this.getVal('properties');\n    // }\n    // get environments() {\n    //   return NSystemService.envProperties;\n    // }\n\n    /**\n     * Returna 'mobile' or 'browser' based on the platform\n     */\n    function checkDevice() {\n      if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {\n        return 'mobile';\n      } else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {\n        return 'cordova_browser';\n      } else {\n        return 'browser';\n      }\n    }\n  }, {\n    key: \"deviceType\",\n    get: function get() {\n      return this._deviceType;\n    }\n  }, {\n    key: \"getVal\",\n    value: function getVal(key) {\n      if (!NSystemService.envProperties) {\n        NSystemService.envProperties = window['neutrinos']['environments'];\n        this.properties = NSystemService.envProperties.properties;\n      }\n\n      if (key == 'properties') {\n        if (NSystemService.envProperties) {\n          return NSystemService.envProperties.properties;\n        } else {\n          return undefined;\n        }\n      } else {\n        if (NSystemService.envProperties && NSystemService.envProperties.properties) {\n          return NSystemService.envProperties.properties[key];\n        } else {\n          return undefined;\n        }\n      }\n    }\n  }, {\n    key: \"isAndroid\",\n    value: function isAndroid() {\n      if (window['device'] && window['device']['platform'] == 'Android') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"isIOS\",\n    value: function isIOS() {\n      if (window['device'] && window['device']['platform'] == 'iOS') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"getAndroidVersion\",\n    value: function getAndroidVersion() {\n      if (this.isAndroid()) {\n        return window['device']['version'];\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"getAuthUrl\",\n    value: function getAuthUrl() {\n      // this.properties = this.getVal('properties');\n      return this.properties.baseUrl + this.properties.tenantName + '/auth/';\n    }\n  }, {\n    key: \"getTenantUrl\",\n    value: function getTenantUrl() {\n      return this.properties.baseUrl + this.properties.tenantName + '/';\n    }\n  }, {\n    key: \"getAppUrl\",\n    value: function getAppUrl() {\n      return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';\n    }\n  }, {\n    key: \"getProxyUrl\",\n    value: function getProxyUrl() {\n      return this.properties.baseUrl + this.properties.tenantName + '/proxy/';\n    }\n  }, {\n    key: \"getDataModelUrl\",\n    value: function getDataModelUrl() {\n      return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\n    }\n  }, {\n    key: \"getFileIOUrl\",\n    value: function getFileIOUrl() {\n      return this.properties.baseUrl + this.properties.tenantName + '/fileio/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\n    }\n  }, {\n    key: \"getPlatformDetails\",\n    value: function getPlatformDetails(type) {\n      var pDetails = {\n        platform: os.family,\n        platformVersion: os.version\n      };\n\n      if (type === 'browser') {\n        return Object.assign(pDetails, {\n          type: 'browser',\n          browser: name,\n          browserVersion: version\n        });\n      } else if (type === 'mobile' || type === 'cordova_browser') {\n        return Object.assign(pDetails, {\n          type: 'mobile',\n          model: window['device'].model,\n          manufacturer: window['device'].manufacturer,\n          isVirtual: window['device'].isVirtual\n        });\n      }\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!this.instance) {\n        this.instance = new NSystemService();\n      }\n\n      return this.instance;\n    }\n  }]);\n\n  return NSystemService;\n}();\n\nvar NSessionStorageService = /*#__PURE__*/function () {\n  function NSessionStorageService() {\n    _classCallCheck(this, NSessionStorageService);\n\n    NSessionStorageService.sessionStorageCache = sessionStorage;\n  }\n\n  _createClass(NSessionStorageService, [{\n    key: \"getSessionStorage\",\n    value: function getSessionStorage() {\n      return NSessionStorageService.sessionStorageCache;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      NSessionStorageService.sessionStorageCache[key] = value;\n      sessionStorage.setItem(key, value);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      if (!NSessionStorageService.sessionStorageCache[key]) {\n        return null;\n      }\n\n      try {\n        var obj = NSessionStorageService.sessionStorageCache[key];\n        return JSON.parse(obj);\n      } catch (error) {\n        return NSessionStorageService.sessionStorageCache[key];\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {\n        delete NSessionStorageService.sessionStorageCache[key];\n        sessionStorage.removeItem(key);\n      }\n    }\n  }, {\n    key: \"clearSessionStorage\",\n    value: function clearSessionStorage() {\n      NSessionStorageService.sessionStorageCache = {};\n      sessionStorage.clear();\n    }\n  }]);\n\n  return NSessionStorageService;\n}();\n\nNSessionStorageService.ɵfac = function NSessionStorageService_Factory(t) {\n  return new (t || NSessionStorageService)();\n};\n\nNSessionStorageService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NSessionStorageService,\n  factory: NSessionStorageService.ɵfac\n});\nNSessionStorageService.sessionStorageCache = {};\n\nNSessionStorageService.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NSessionStorageService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar NUtility = /*#__PURE__*/function () {\n  function NUtility() {\n    _classCallCheck(this, NUtility);\n  }\n\n  _createClass(NUtility, [{\n    key: \"generateUUID\",\n    value: function generateUUID() {\n      return this.__s4() + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + this.__s4() + this.__s4();\n    }\n  }, {\n    key: \"__s4\",\n    value: function __s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n  }]);\n\n  return NUtility;\n}();\n\nvar NLocalStorageService = /*#__PURE__*/function () {\n  function NLocalStorageService(ngfConfig, ngf, ngfCache) {\n    _classCallCheck(this, NLocalStorageService);\n\n    this.ngfConfig = ngfConfig;\n    this.ngf = ngf;\n    this.ngfCache = ngfCache;\n    this.storageCache = {};\n  }\n\n  _createClass(NLocalStorageService, [{\n    key: \"initStorage\",\n    value: function initStorage() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (window['cordova']) {\n          _this.initNgForage();\n        }\n\n        _this.ngf.iterate(function (value, key, iteratonNumber) {\n          _this.storageCache[key] = value;\n        }).then(function (result) {\n          _this.checkDeviceId();\n\n          return resolve('iteration is completed');\n        }).catch(function (error) {\n          return reject(error);\n        });\n      });\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      return this.storageCache;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      if (window['cordova']) {\n        this.initNgForage();\n      }\n\n      this.storageCache[key] = value;\n      return this.ngf.setItem(key, value).then(function (result) {\n        return result;\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      if (!this.storageCache[key]) {\n        return null;\n      }\n\n      try {\n        var obj = this.storageCache[key];\n        return JSON.parse(obj);\n      } catch (error) {\n        return this.storageCache[key];\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      var _this2 = this;\n\n      delete this.storageCache[key];\n\n      if (window['cordova']) {\n        this.initNgForage();\n      }\n\n      this.ngf.removeItem(key).then(function (fulfilled) {\n        delete _this2.ngf[key];\n      }).catch(function (error) {\n        console.error('Could not remove', key);\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.storageCache = {};\n      this.ngf.clear();\n    }\n  }, {\n    key: \"pluginCheck\",\n    value: function pluginCheck() {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI = window['NativeStorage']; // return true;\n      } // this.initStorage();\n\n    }\n  }, {\n    key: \"getItemNs\",\n    value: function getItemNs(key) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (window['cordova'] && window['NativeStorage']) {\n          _this3.nativeStorageI.getItem(key, function (result) {\n            resolve(result);\n          }, function (error) {\n            reject(error);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"setItemNs\",\n    value: function setItemNs(key, value) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (window['cordova'] && window['NativeStorage']) {\n          _this4.nativeStorageI.setItem(key, value, function (result) {\n            resolve(result);\n          }, function (error) {\n            reject(error);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"removeItemNs\",\n    value: function removeItemNs(key) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (window['cordova'] && window['NativeStorage']) {\n          _this5.nativeStorageI.remove(key, function (result) {\n            resolve(result);\n          }, function (error) {\n            reject(error);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"clearNs\",\n    value: function clearNs() {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (window['cordova'] && window['NativeStorage']) {\n          _this6.nativeStorageI.clear(function (result) {\n            resolve(result);\n          }, function (error) {\n            reject(error);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"initNgForage\",\n    value: function initNgForage() {\n      var driverType = window['neutrinos']['environments']['properties']['NGFORAGE_MOBILE_DRIVER'] ? window['neutrinos']['environments']['properties']['NGFORAGE_MOBILE_DRIVER'] : \"INDEXED_DB\";\n      this.ngfConfig.configure({\n        name: 'MyApp',\n        driver: [Driver[driverType]]\n      });\n    }\n  }, {\n    key: \"promiseReflect\",\n    value: function promiseReflect(promise) {\n      return promise.then(function (resolved) {\n        return {\n          v: resolved,\n          status: 'resolved'\n        };\n      }, function (error) {\n        return {\n          e: error,\n          status: 'rejected'\n        };\n      });\n    }\n  }, {\n    key: \"clearLocalStorage\",\n    value: function clearLocalStorage() {\n      this.remove('userObj');\n      this.remove('accessToken');\n      this.remove('refreshToken');\n      this.remove('registrationId');\n    }\n    /**\n     * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService\n    */\n\n  }, {\n    key: \"checkDeviceId\",\n    value: function checkDeviceId() {\n      var _this7 = this;\n\n      if (NSystemService.getInstance().checkDevice() === 'browser') {\n        this._deviceUUID = this.getValue('uuid');\n\n        if (!this._deviceUUID) {\n          this._deviceUUID = new NUtility().generateUUID();\n          this.setValue('uuid', this._deviceUUID);\n        }\n      } else {\n        window['plugins'].uniqueDeviceID.get(function (uuid) {\n          _this7._deviceUUID = uuid;\n\n          _this7.setValue('uuid', _this7._deviceUUID);\n        });\n      }\n\n      return this._deviceUUID;\n    }\n  }, {\n    key: \"deviceUUID\",\n    get: function get() {\n      return this._deviceUUID;\n    }\n  }]);\n\n  return NLocalStorageService;\n}();\n\nNLocalStorageService.ɵfac = function NLocalStorageService_Factory(t) {\n  return new (t || NLocalStorageService)(ɵngcc0.ɵɵinject(ɵngcc1.NgForageConfig), ɵngcc0.ɵɵinject(ɵngcc1.NgForage), ɵngcc0.ɵɵinject(ɵngcc1.NgForageCache));\n};\n\nNLocalStorageService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NLocalStorageService,\n  factory: NLocalStorageService.ɵfac\n});\n\nNLocalStorageService.ctorParameters = function () {\n  return [{\n    type: NgForageConfig\n  }, {\n    type: NgForage\n  }, {\n    type: NgForageCache\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NLocalStorageService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.NgForageConfig\n    }, {\n      type: ɵngcc1.NgForage\n    }, {\n      type: ɵngcc1.NgForageCache\n    }];\n  }, null);\n})();\n\nvar NTokenService = /*#__PURE__*/function () {\n  // nLocalStorageService: NLocalStorageService;\n  function NTokenService(nLocalStorageService) {\n    _classCallCheck(this, NTokenService);\n\n    this.nLocalStorageService = nLocalStorageService;\n    this.nSessionStorage = new NSessionStorageService(); // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n  _createClass(NTokenService, [{\n    key: \"updateTokens\",\n    value: function updateTokens(tokensObj, isRemember) {\n      var userObj = this.decodeToken(tokensObj['accessToken']);\n      this.nSessionStorage.setValue('accessToken', tokensObj['accessToken']);\n      this.nSessionStorage.setValue('refreshToken', tokensObj['refreshToken']);\n      this.nSessionStorage.setValue('userObj', JSON.stringify(userObj));\n\n      if (isRemember || this.nLocalStorageService.getValue('accessToken')) {\n        this.nLocalStorageService.setValue('accessToken', tokensObj['accessToken']);\n        this.nLocalStorageService.setValue('refreshToken', tokensObj['refreshToken']);\n        this.nLocalStorageService.setValue('userObj', JSON.stringify(userObj));\n      }\n    }\n  }, {\n    key: \"updateSessionStorage\",\n    value: function updateSessionStorage() {\n      this.updateTokens(this.nLocalStorageService.getStorage(), true);\n    }\n  }, {\n    key: \"urlBase64Decode\",\n    value: function urlBase64Decode(str) {\n      var output = str.replace(/-/g, '+').replace(/_/g, '/');\n\n      switch (output.length % 4) {\n        case 0:\n          {\n            break;\n          }\n\n        case 2:\n          {\n            output += '==';\n            break;\n          }\n\n        case 3:\n          {\n            output += '=';\n            break;\n          }\n\n        default:\n          {\n            throw 'Illegal base64url string!';\n          }\n      }\n\n      return this.b64DecodeUnicode(output);\n    } // credits for decoder goes to https://github.com/atk\n\n  }, {\n    key: \"b64decode\",\n    value: function b64decode(str) {\n      var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n      var output = '';\n      str = String(str).replace(/=+$/, '');\n\n      if (str.length % 4 == 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n      }\n\n      for ( // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0; // get next character\n      buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n      }\n\n      return output;\n    } // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n\n  }, {\n    key: \"b64DecodeUnicode\",\n    value: function b64DecodeUnicode(str) {\n      return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n    }\n  }, {\n    key: \"decodeToken\",\n    value: function decodeToken(token) {\n      var parts = token.split('.');\n\n      if (parts.length !== 3) {\n        throw new Error('JWT must have 3 parts');\n      }\n\n      var decoded = this.urlBase64Decode(parts[1]);\n\n      if (!decoded) {\n        throw new Error('Cannot decode the token');\n      }\n\n      return JSON.parse(decoded);\n    }\n  }, {\n    key: \"getTokenExpirationDate\",\n    value: function getTokenExpirationDate(token) {\n      var decoded;\n      decoded = this.decodeToken(token);\n\n      if (!decoded.hasOwnProperty('exp')) {\n        return null;\n      }\n\n      var date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n\n      date.setUTCSeconds(decoded.exp);\n      return date;\n    }\n  }, {\n    key: \"isTokenExpired\",\n    value: function isTokenExpired(token, offsetSeconds) {\n      var date = this.getTokenExpirationDate(token);\n      offsetSeconds = offsetSeconds || 0;\n\n      if (date == null) {\n        return false;\n      } // Token expired?\n\n\n      return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n    }\n  }]);\n\n  return NTokenService;\n}();\n\nNTokenService.ɵfac = function NTokenService_Factory(t) {\n  return new (t || NTokenService)(ɵngcc0.ɵɵinject(NLocalStorageService));\n};\n\nNTokenService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NTokenService,\n  factory: NTokenService.ɵfac\n});\n\nNTokenService.ctorParameters = function () {\n  return [{\n    type: NLocalStorageService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NTokenService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NLocalStorageService\n    }];\n  }, null);\n})();\n\nvar ServiceName = \"PubSub Service\";\n\nvar NPubSubService = /*#__PURE__*/function () {\n  function NPubSubService() {\n    _classCallCheck(this, NPubSubService);\n\n    this.events = {};\n  }\n\n  _createClass(NPubSubService, [{\n    key: \"$sub\",\n    value: function $sub(event, callback, error, complete) {\n      if (!event) {\n        throw new Error(\"[\".concat(ServiceName, \"] => Subscription method must get event name.\"));\n      }\n\n      if (this.events[event] === undefined) {\n        this.events[event] = new Subject();\n      }\n\n      if (typeof callback !== 'function') {\n        return this.events[event].asObservable();\n      } else {\n        return this.events[event].asObservable().subscribe(callback, error, complete);\n      }\n    }\n  }, {\n    key: \"$pub\",\n    value: function $pub(event, eventObject) {\n      if (!event) {\n        throw new Error(\"[\".concat(ServiceName, \"] => Publish method must get event name.\"));\n      } else if (!this.events[event]) {\n        return;\n      }\n\n      this.events[event].next(eventObject);\n    }\n  }]);\n\n  return NPubSubService;\n}();\n\nNPubSubService.ɵfac = function NPubSubService_Factory(t) {\n  return new (t || NPubSubService)();\n};\n\nNPubSubService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NPubSubService,\n  factory: NPubSubService.ɵfac\n});\n\nNPubSubService.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NPubSubService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar NLogoutService = /*#__PURE__*/function () {\n  // nLocalStorageService = new NLocalStorageService();\n  function NLogoutService(nLocalStorageService) {\n    _classCallCheck(this, NLogoutService);\n\n    this.nLocalStorageService = nLocalStorageService;\n    this.nSessionStorage = new NSessionStorageService();\n  }\n\n  _createClass(NLogoutService, [{\n    key: \"logout\",\n    value: function logout() {\n      this.nSessionStorage.clearSessionStorage();\n      this.nLocalStorageService.clearLocalStorage();\n      return true;\n    }\n  }]);\n\n  return NLogoutService;\n}();\n\nNLogoutService.ɵfac = function NLogoutService_Factory(t) {\n  return new (t || NLogoutService)(ɵngcc0.ɵɵinject(NLocalStorageService));\n};\n\nNLogoutService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NLogoutService,\n  factory: NLogoutService.ɵfac\n});\n\nNLogoutService.ctorParameters = function () {\n  return [{\n    type: NLocalStorageService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NLogoutService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NLocalStorageService\n    }];\n  }, null);\n})(); // import { NSnackbarService } from './snackbar/service/snackbar.service';\n\n\nvar NHTTPLoaderService = /*#__PURE__*/function () {\n  function NHTTPLoaderService(nLogoutService, nPubSubService) {\n    _classCallCheck(this, NHTTPLoaderService);\n\n    this.nLogoutService = nLogoutService;\n    this.nPubSubService = nPubSubService;\n    this.pendingRequests = 0;\n    this.showLoading = false;\n    this._isHTTPRequestInProgress = new Subject();\n    this._isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();\n  }\n\n  _createClass(NHTTPLoaderService, [{\n    key: \"isHTTPRequestInProgress\",\n    value: function isHTTPRequestInProgress(bool) {\n      if (bool) {\n        this.pendingRequests++;\n\n        if (!this.showLoading) {\n          this._isHTTPRequestInProgress.next(bool);\n        }\n\n        this.showLoading = true;\n      } else {\n        this.pendingRequests--;\n\n        if (this.pendingRequests <= 0) {\n          if (this.showLoading) {\n            this._isHTTPRequestInProgress.next(bool);\n          }\n\n          this.showLoading = false;\n        }\n      }\n    }\n  }, {\n    key: \"alertError\",\n    value: function alertError(error) {\n      if (error.status < 200 || error.status > 500) {\n        if (error.status === 0) {\n          this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');\n        } else {\n          this.nPubSubService.$pub('openSnackBar', 'Response failure');\n        }\n      } else if (error.status === 401) {\n        this.nLogoutService.logout();\n\n        if (error.error) {\n          this.nPubSubService.$pub('openSnackBar', error.error);\n        } else {\n          this.nPubSubService.$pub('openSnackBar', error);\n        }\n      } else if (error.error) {\n        if (error.error instanceof Object) {\n          this.nPubSubService.$pub('openSnackBar', error.error.message);\n        } else {\n          this.nPubSubService.$pub('openSnackBar', error.error);\n        }\n      } else {\n        this.nPubSubService.$pub('openSnackBar', 'Response failure');\n      }\n    }\n  }]);\n\n  return NHTTPLoaderService;\n}();\n\nNHTTPLoaderService.ɵfac = function NHTTPLoaderService_Factory(t) {\n  return new (t || NHTTPLoaderService)(ɵngcc0.ɵɵinject(NLogoutService), ɵngcc0.ɵɵinject(NPubSubService));\n};\n\nNHTTPLoaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NHTTPLoaderService,\n  factory: NHTTPLoaderService.ɵfac\n});\n\nNHTTPLoaderService.ctorParameters = function () {\n  return [{\n    type: NLogoutService\n  }, {\n    type: NPubSubService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NHTTPLoaderService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NLogoutService\n    }, {\n      type: NPubSubService\n    }];\n  }, null);\n})();\n\nvar NNotificationService = /*#__PURE__*/function () {\n  function NNotificationService(localStorageService, pubSubService, http, bHttpLoader) {\n    var _this8 = this;\n\n    _classCallCheck(this, NNotificationService);\n\n    this.localStorageService = localStorageService;\n    this.pubSubService = pubSubService;\n    this.http = http;\n    this.bHttpLoader = bHttpLoader; // private static instance: NNotificationService;\n\n    this.systemService = NSystemService.getInstance();\n    this.possiblePushTypes = ['APNS', 'FCM'];\n    this.firebaseSenderId = this.systemService.getVal('firebaseSenderId');\n    this.isNotificationEnabled = this.systemService.getVal('isNotificationEnabled');\n    this.appName = this.systemService.getVal('appName');\n    this.deviceType = this.systemService.deviceType;\n    this.sessionStorage = new NSessionStorageService();\n    this.loginSubscribe = this.pubSubService.$sub('firebaseRegister', function () {\n      _this8.enableNotification();\n    });\n  }\n\n  _createClass(NNotificationService, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"enableNotification\",\n    value: function enableNotification() {\n      var _this9 = this;\n\n      var pushType = this.getPushType(this.systemService.getVal('pushType'));\n      document.addEventListener('deviceready', function (event) {\n        if (_this9.isNotificationEnabled) {\n          if (_this9.deviceType && _this9.deviceType != 'browser') {\n            _this9.deviceType = _this9.systemService.deviceType;\n\n            _this9.checkPermission(pushType).then(function (res) {\n              if (res) {\n                _this9.initializeNotifications(pushType);\n              }\n            });\n          }\n        }\n      });\n\n      if (this.isNotificationEnabled && pushType !== 'APNS') {\n        if (this.deviceType && this.deviceType == 'browser' && window['Notification']) {\n          this.initialiseWebPush();\n        }\n      }\n    }\n  }, {\n    key: \"initialiseWebPush\",\n    value: function initialiseWebPush() {\n      var __this = this;\n\n      var messaging = firebase.messaging();\n      Notification.requestPermission().then(function () {\n        return messaging.getToken();\n      }).then(function (token) {\n        if (token) {\n          __this.sendRegDetails(token);\n        }\n      }).catch(function (err) {\n        __this.bHttpLoader.alertError(err);\n      });\n      messaging.onMessage(function (payload) {\n        if (payload['notification']) {\n          var notificationObj = payload['notification'];\n          var options = {\n            body: notificationObj.body,\n            icon: notificationObj.icon\n          }; // creating a native browser message\n\n          var notificationUI = new Notification(notificationObj.title, options);\n\n          notificationUI.onclick = function () {\n            window.focus(); // window is focused when the user clicks the notification using this\n          };\n        }\n      });\n    }\n  }, {\n    key: \"checkPermission\",\n    value: function checkPermission(pushType) {\n      var _this10 = this;\n\n      // Android & iOS only\n      // Checks whether the push notification permission has been granted.\n      return new Promise(function (resolve) {\n        pushType = _this10.getPushType(pushType);\n\n        if ((_this10.deviceType === 'Android' || _this10.deviceType === 'iOS') && pushType === 'FCM') {\n          PushNotification.hasPermission(function (data) {\n            return resolve(data.isEnabled);\n          });\n        } else if (_this10.deviceType === 'iOS' && pushType === 'APNS') {\n          APNSPushNotification.hasPermission(function (data) {\n            return resolve(data.isEnabled);\n          });\n        } else {\n          return resolve(true);\n        }\n      });\n    }\n  }, {\n    key: \"initializeNotifications\",\n    value: function initializeNotifications(pushType) {\n      var _this11 = this;\n\n      //pushType = pushType ? pushType : 'FCM';\n      pushType = this.getPushType(pushType);\n      var push; // Default if for FCM\n\n      if (pushType === 'FCM') {\n        push = window['PushNotification'].init({\n          android: {\n            senderID: this.firebaseSenderId\n          },\n          ios: {\n            alert: \"true\",\n            badge: \"true\",\n            sound: \"true\",\n            senderID: this.firebaseSenderId\n          }\n        });\n      } // New APNS plugin init\n      else if (pushType === 'APNS') {\n          push = window['APNSPushNotification'].init({\n            ios: {\n              alert: \"true\",\n              badge: \"true\",\n              sound: \"true\"\n            }\n          });\n        }\n\n      push.on('registration', function (data) {\n        // data.registrationId\n        _this11.sendRegDetails(data.registrationId);\n      }); // ToDo Christy get call back function from app user to change what happens once a notification arrives\n\n      push.on('notification', function (data) {\n        window['cordova'].plugins.notification.local.schedule({\n          title: data.title,\n          text: data.message,\n          sound: data.sound,\n          at: new Date().getTime()\n        });\n      });\n      push.on('error', function (e) {\n        // e.message\n        console.error(e);\n      });\n    }\n  }, {\n    key: \"sendRegDetails\",\n    value: function sendRegDetails(registrationId) {\n      this.localStorageService.setValue('registrationId', registrationId);\n      var url = this.systemService.getTenantUrl() + 'notification/' + this.systemService.getVal('appName') + '/register';\n      var pushType = this.getPushType(this.systemService.getVal('pushType'));\n      this.http.post(url, {\n        'key': this.sessionStorage.getValue('userObj')['userKey'],\n        'uuid': this.localStorageService.getValue('uuid'),\n        'fbregid': registrationId,\n        'pushType': pushType\n      }).subscribe(function (result) {// this.pubSubService.$pub('FBRegComp');\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getPushType\",\n    value: function getPushType(currPushType) {\n      var isValidPush = typeof currPushType !== 'undefined' && this.possiblePushTypes.includes(currPushType.toUpperCase());\n      var pushType = isValidPush ? currPushType.toUpperCase() : 'FCM';\n      return pushType;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.loginSubscribe.unSubscribe();\n    }\n  }]);\n\n  return NNotificationService;\n}();\n\nNNotificationService.ɵfac = function NNotificationService_Factory(t) {\n  return new (t || NNotificationService)(ɵngcc0.ɵɵinject(NLocalStorageService), ɵngcc0.ɵɵinject(NPubSubService), ɵngcc0.ɵɵinject(ɵngcc2.HttpClient), ɵngcc0.ɵɵinject(NHTTPLoaderService));\n};\n\nNNotificationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NNotificationService,\n  factory: NNotificationService.ɵfac\n});\n\nNNotificationService.ctorParameters = function () {\n  return [{\n    type: NLocalStorageService\n  }, {\n    type: NPubSubService\n  }, {\n    type: HttpClient\n  }, {\n    type: NHTTPLoaderService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NNotificationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NLocalStorageService\n    }, {\n      type: NPubSubService\n    }, {\n      type: ɵngcc2.HttpClient\n    }, {\n      type: NHTTPLoaderService\n    }];\n  }, null);\n})();\n\nvar NLoginService = /*#__PURE__*/function () {\n  function NLoginService(http, pubSubService, notificationService, nLocalStorageService, nTokenService) {\n    _classCallCheck(this, NLoginService);\n\n    this.http = http;\n    this.pubSubService = pubSubService;\n    this.notificationService = notificationService;\n    this.nLocalStorageService = nLocalStorageService;\n    this.nTokenService = nTokenService;\n    this.loginCompleted = new EventEmitter();\n    this.systemService = NSystemService.getInstance(); // this.nTokenService = new NTokenService();\n\n    this.nSessionStorage = new NSessionStorageService(); // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n  _createClass(NLoginService, [{\n    key: \"login\",\n    value: function login(userName, password, isRemember) {\n      var _this12 = this;\n\n      this.appProperties = this.systemService.getVal('properties');\n      this.loginUrl = this.systemService.getAuthUrl() + this.appProperties.appName;\n      this.uuid = this.nLocalStorageService.getValue('uuid');\n\n      if (!this.uuid) {\n        this.uuid = this.nLocalStorageService.checkDeviceId();\n      }\n\n      this.details = {\n        username: userName,\n        password: password\n      };\n      this.details.platformDetails = this.systemService.getPlatformDetails(this.systemService.checkDevice());\n      this.details.platformDetails['uuid'] = this.uuid;\n      return this.http.post(this.loginUrl, JSON.stringify(this.details)).pipe(map(function (result) {\n        var tokensObj = result;\n\n        if (tokensObj) {\n          _this12.nTokenService.updateTokens(tokensObj, isRemember);\n        } // TODO chris array of supported pushes currently only support APNS and Firebase\n\n\n        if (_this12.systemService.getVal('firebaseSenderId') != 'FIREBASE_SENDER_ID' && _this12.systemService.getVal('firebaseAuthKey') != 'FIREBASE_AUTH_KEY' || _this12.systemService.getVal('pushType') === 'APNS' && _this12.systemService.isIOS()) {\n          _this12.pubSubService.$pub('firebaseRegister');\n        }\n\n        _this12.pubSubService.$pub('loginComplete');\n\n        return result;\n      }, function (error) {\n        return error;\n      }));\n    }\n  }, {\n    key: \"isLoggedIn\",\n    value: function isLoggedIn() {\n      var _this13 = this;\n\n      return this.nLocalStorageService.initStorage().then(function (result) {\n        if (_this13.nSessionStorage.getValue('accessToken') && _this13.nSessionStorage.getValue('refreshToken') && _this13.nSessionStorage.getValue('accessToken') != 'null' && _this13.nSessionStorage.getValue('refreshToken') != 'null') {\n          return true;\n        }\n\n        return false;\n      }).catch(function (error) {\n        return false;\n      });\n    }\n  }]);\n\n  return NLoginService;\n}();\n\nNLoginService.ɵfac = function NLoginService_Factory(t) {\n  return new (t || NLoginService)(ɵngcc0.ɵɵinject(ɵngcc2.HttpClient), ɵngcc0.ɵɵinject(NPubSubService), ɵngcc0.ɵɵinject(NNotificationService), ɵngcc0.ɵɵinject(NLocalStorageService), ɵngcc0.ɵɵinject(NTokenService));\n};\n\nNLoginService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NLoginService,\n  factory: NLoginService.ɵfac\n});\n\nNLoginService.ctorParameters = function () {\n  return [{\n    type: HttpClient\n  }, {\n    type: NPubSubService\n  }, {\n    type: NNotificationService\n  }, {\n    type: NLocalStorageService\n  }, {\n    type: NTokenService\n  }];\n};\n\nNLoginService.propDecorators = {\n  loginCompleted: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NLoginService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc2.HttpClient\n    }, {\n      type: NPubSubService\n    }, {\n      type: NNotificationService\n    }, {\n      type: NLocalStorageService\n    }, {\n      type: NTokenService\n    }];\n  }, {\n    loginCompleted: [{\n      type: Output\n    }]\n  });\n})();\n\nvar NAuthGuardService = /*#__PURE__*/function () {\n  function NAuthGuardService(nLoginService, router) {\n    _classCallCheck(this, NAuthGuardService);\n\n    this.nLoginService = nLoginService;\n    this.router = router;\n  }\n\n  _createClass(NAuthGuardService, [{\n    key: \"canActivate\",\n    value: function canActivate() {\n      var _this14 = this;\n\n      return this.nLoginService.isLoggedIn().then(function (result) {\n        if (result) {\n          return true;\n        } else {\n          _this14.router.navigate(['unauthorized']);\n\n          return false;\n        }\n      });\n    }\n  }]);\n\n  return NAuthGuardService;\n}();\n\nNAuthGuardService.ɵfac = function NAuthGuardService_Factory(t) {\n  return new (t || NAuthGuardService)(ɵngcc0.ɵɵinject(NLoginService), ɵngcc0.ɵɵinject(ɵngcc3.Router));\n};\n\nNAuthGuardService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NAuthGuardService,\n  factory: NAuthGuardService.ɵfac\n});\n\nNAuthGuardService.ctorParameters = function () {\n  return [{\n    type: NLoginService\n  }, {\n    type: Router\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NAuthGuardService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NLoginService\n    }, {\n      type: ɵngcc3.Router\n    }];\n  }, null);\n})();\n\nvar NDataModelService = /*#__PURE__*/function () {\n  function NDataModelService(http) {\n    _classCallCheck(this, NDataModelService);\n\n    this.http = http;\n    this.invalidDataModelName = 'Invalid data model name.';\n    this.invalidDataModelId = 'Invalid data model id.';\n    this.invalidDataModelObj = 'Invalid data model object.';\n    this.systemService = NSystemService.getInstance();\n  } // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n\n  /**\n   *\n   * @param dataModelName\n   * @param filter The filter query parameter allows to specify conditions on the documents to return.\n   * The filter qparam value is any mongodb query… Defaults to {}\n   * @param keys Projections to be applited on mongo db.\n   * @param sort sort to be applied on the query results. Defaults to {}\n   * @param pagenumber Page number for paginated queries. Defaults to 1\n   * @param pagesize Size of each page to be returned. Defaults to 100.\n   */\n\n\n  _createClass(NDataModelService, [{\n    key: \"get\",\n    value: function get(dataModelName, filter, keys, sort, pagenumber, pagesize) {\n      if (dataModelName) {\n        // let modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n        var modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n\n        if (this.checkIfValid(filter) || this.checkIfValid(keys) || this.checkIfValid(sort) || this.checkIfValid(pagenumber) || this.checkIfValid(pagesize)) {\n          var queryString = \"\".concat(this.toQueryString({\n            'filter': filter,\n            'keys': keys,\n            'sort': sort,\n            'pagenumber': pagenumber,\n            'pagesize': pagesize\n          }));\n\n          if (queryString === '') {\n            queryString += '?filter={}';\n          } else {\n            queryString = '?'.concat(queryString);\n          }\n\n          modelNameUrl += queryString;\n        }\n\n        return this.http.get(modelNameUrl).pipe(map(function (value, index) {\n          return value;\n        }), catchError(function (error) {\n          return throwError(error);\n        }));\n      } else {\n        return throwError(new Error(\"Could not get \".concat(dataModelName, \". \").concat(this.invalidDataModelName)));\n      }\n    } // PUT /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n\n    /**\n     *\n     * @param dataModelName Data model name of the app\n     * @param dataModelObj Data Model object which is to be inserted\n     */\n\n  }, {\n    key: \"put\",\n    value: function put(dataModelName, dataModelObj) {\n      if (dataModelName) {\n        if (dataModelObj) {\n          // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n          var modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n          return this.http.put(modelNameUrl, dataModelObj).pipe(map(function (value, index) {\n            return value;\n          }), catchError(function (error) {\n            return throwError(error);\n          }));\n        } else {\n          return throwError(new Error(\"Could not put \".concat(dataModelObj, \" in \").concat(dataModelName, \". \").concat(this.invalidDataModelObj)));\n        }\n      } else {\n        return throwError(new Error(\"Could not put \".concat(dataModelObj, \" in \").concat(dataModelName, \". \").concat(this.invalidDataModelName)));\n      }\n    } // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n\n    /**\n     *\n     * @param dataModelName\n     * @param filter\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(dataModelName, filter) {\n      var modelNameUrl;\n\n      if (dataModelName) {\n        // modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n        modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n\n        if (this.checkIfValid(filter) && filter != '') {\n          modelNameUrl += \"?filter=\".concat(filter);\n        } else {\n          modelNameUrl += '?filter={}';\n        }\n\n        return this.http.delete(modelNameUrl).pipe(map(function (value, index) {\n          return value;\n        }), catchError(function (error) {\n          return throwError(error);\n        }));\n      } else {\n        return throwError(new Error(\"Could not delete \".concat(dataModelName, \". \").concat(this.invalidDataModelName)));\n      }\n    } // PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n\n    /**\n     *\n     * @param dataModelName Data model name which is to be updated\n     * @param dataModelObj New data model object\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(dataModelName, updateObject) {\n      if (dataModelName && updateObject) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n        var modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n        return this.http.patch(modelNameUrl, updateObject).pipe(map(function (value, index) {\n          return value;\n        }), catchError(function (error) {\n          return throwError(error);\n        }));\n      } else {\n        return throwError(new Error(\"Could not update \".concat(dataModelName, \". \").concat(this.invalidDataModelName)));\n      }\n    } // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n\n    /**\n     *\n     * @param dataModelName Data model name which is to be updated\n     * @param dataModelId Data model id which is to be updated\n     */\n\n  }, {\n    key: \"getById\",\n    value: function getById(dataModelName, dataModelId) {\n      if (dataModelName) {\n        if (dataModelId) {\n          // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n          var modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n          return this.http.get(modelNameUrl).pipe(map(function (value, index) {\n            return value;\n          }), catchError(function (error) {\n            return throwError(error);\n          }));\n        } else {\n          throwError(new Error(\"Could not get \".concat(dataModelName, \" by id \").concat(dataModelId, \". \").concat(this.invalidDataModelId)));\n        }\n      } else {\n        throwError(new Error(\"Could not get \".concat(dataModelName, \" by id \").concat(dataModelId, \". \").concat(this.invalidDataModelName)));\n      }\n    } // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n\n    /**\n     *\n     * @param dataModelName Data model name which is to be deleted\n     * @param dataModelId Data model id which is to be deleted\n     */\n\n  }, {\n    key: \"deleteById\",\n    value: function deleteById(dataModelName, dataModelId) {\n      if (dataModelName) {\n        if (dataModelId) {\n          // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n          var modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n          return this.http.delete(modelNameUrl).pipe(map(function (value, index) {\n            return value;\n          }), catchError(function (error) {\n            return throwError(error);\n          }));\n        } else {\n          throwError(new Error(\"Could not get \".concat(dataModelName, \" by id \").concat(dataModelId, \". \").concat(this.invalidDataModelId)));\n        }\n      } else {\n        return throwError(new Error(\"Could not delete \".concat(dataModelName, \" by id \").concat(dataModelId, \". \").concat(this.invalidDataModelName)));\n      }\n    } //PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n\n    /**\n     *\n     * @param dataModelName Data model name which is to be update\n     * @param dataModelId Data model id which is to be updated\n     * @param dataModelObj Data Model object which is to be inserted\n     */\n\n  }, {\n    key: \"updateById\",\n    value: function updateById(dataModelName, dataModelId, dataModelObj) {\n      if (dataModelName) {\n        if (dataModelId) {\n          // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n          var modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n          var dmObj = Object.assign({}, dataModelObj);\n          delete dmObj['_id'];\n          return this.http.patch(modelNameUrl, dmObj).pipe(map(function (value, index) {\n            return value;\n          }), catchError(function (error) {\n            return throwError(error);\n          }));\n        } else {\n          throwError(new Error(\"Could not get \".concat(dataModelName, \" by id \").concat(dataModelId, \". \").concat(this.invalidDataModelId)));\n        }\n      } else {\n        return throwError(new Error(\"Could not delete \".concat(dataModelName, \" by id \").concat(dataModelId, \". \").concat(this.invalidDataModelName)));\n      }\n    }\n  }, {\n    key: \"toQueryString\",\n    value: function toQueryString(obj) {\n      var parts = [];\n\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i) && this.checkIfValid(obj[i])) {\n          parts.push(i + '=' + JSON.stringify(obj[i]));\n        }\n      }\n\n      return parts.join('&');\n    }\n  }, {\n    key: \"checkIfValid\",\n    value: function checkIfValid(value) {\n      if (value === undefined || value == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getDataSourceURL\",\n    value: function getDataSourceURL(dataModelName) {\n      if (!this.dmDs) {\n        this.dmDs = window['neutrinos']['dataSource'];\n      }\n\n      var dsDm = this.dmDs[dataModelName];\n      var properties = this.systemService.properties;\n\n      if (dsDm) {\n        return properties.baseUrl + properties.tenantName + '/datamodel/' + dsDm + '/' + properties.appName + '/';\n      } else {\n        return this.systemService.getDataModelUrl();\n      }\n    }\n  }]);\n\n  return NDataModelService;\n}();\n\nNDataModelService.ɵfac = function NDataModelService_Factory(t) {\n  return new (t || NDataModelService)(ɵngcc0.ɵɵinject(ɵngcc2.HttpClient));\n};\n\nNDataModelService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NDataModelService,\n  factory: NDataModelService.ɵfac\n});\n\nNDataModelService.ctorParameters = function () {\n  return [{\n    type: HttpClient\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NDataModelService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc2.HttpClient\n    }];\n  }, null);\n})();\n\nvar NHttpService = /*#__PURE__*/function () {\n  function NHttpService(nHTTPLoader, inj, nLocalStorageService, nTokenService) {\n    _classCallCheck(this, NHttpService);\n\n    this.nHTTPLoader = nHTTPLoader;\n    this.inj = inj;\n    this.nLocalStorageService = nLocalStorageService;\n    this.nTokenService = nTokenService;\n    this.timeout = 90000;\n    this.isRefreshingToken = false;\n    this.tokenSubject = new BehaviorSubject(null);\n    this.systemService = NSystemService.getInstance();\n    this.nSessionStorage = new NSessionStorageService();\n    this.appProperties = this.systemService.getVal('properties');\n    this.nPubSubService = new NPubSubService();\n  }\n\n  _createClass(NHttpService, [{\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      var _this15 = this;\n\n      this.requestInterceptor(); // Pass on the cloned request instead of the original request.\n\n      return next.handle(this.requestOptions(req)).pipe(timeout(this.timeout), catchError(function (error) {\n        return _this15.onCatch(error, req, next);\n      }), finalize(function () {\n        _this15.onFinally();\n      }));\n    }\n  }, {\n    key: \"updateToken\",\n    value: function updateToken(error, req, next) {\n      var _this16 = this;\n\n      if (this.appProperties.appAuthenticationStrategy === 'activeDirectory' || this.appProperties.appAuthenticationStrategy === 'localAuth') {\n        if (!this.isRefreshingToken) {\n          this.isRefreshingToken = true; // Reset here so that the following requests wait until the token\n          // comes back from the refreshToken call.\n\n          this.tokenSubject.next(null);\n          return this.refreshToken().pipe(switchMap(function (tokensObj) {\n            if (tokensObj) {\n              _this16.nTokenService.updateTokens(tokensObj);\n\n              var newToken = tokensObj['accessToken'];\n\n              _this16.tokenSubject.next(newToken);\n\n              return next.handle(_this16.requestOptions(req));\n            }\n\n            return throwError(new Error('Can\\'t refresh the token'));\n          }), catchError(function (err) {\n            return _this16.onCatchError(err);\n          }), finalize(function () {\n            return _this16.isRefreshingToken = false;\n          }));\n        } else {\n          return this.tokenSubject.pipe(filter(function (token) {\n            return token != null;\n          }), take(1), switchMap(function (token) {\n            return next.handle(_this16.requestOptions(req));\n          }));\n        }\n      } else {\n        return this.onCatchError(error);\n      }\n    }\n  }, {\n    key: \"refreshToken\",\n    value: function refreshToken() {\n      var http = this.inj.get(HttpClient);\n      var appProperties = this.systemService.getVal('properties');\n      var refreshUrl = this.systemService.getAuthUrl() + appProperties.appName + '/refresh';\n      var body = {\n        'platformDetails': this.systemService.getPlatformDetails(this.systemService.checkDevice()),\n        'userKey': this.nSessionStorage.getValue('userObj')['userKey'],\n        'refreshToken': this.nSessionStorage.getValue('refreshToken')\n      };\n      body.platformDetails['uuid'] = this.nLocalStorageService.getValue('uuid');\n      return http.post(refreshUrl, body);\n    }\n    /**\n     * Request options.\n     * @param options\n     * @returns HttpRequest\n     */\n\n  }, {\n    key: \"requestOptions\",\n    value: function requestOptions(req) {\n      var headers = req.headers;\n\n      if (req.headers == null) {\n        headers = new HttpHeaders();\n      }\n\n      req = req.clone({\n        url: this.getFullUrl(req.url),\n        headers: headers\n      });\n      var baseUrl = NSystemService.getInstance().getVal('baseUrl');\n      var isArt = baseUrl !== '' && req.url.includes(baseUrl);\n      return isArt ? this.addDefaultHeaders(req) : req;\n    }\n    /**\n    * Default options.\n    * @param options\n    * @returns HttpHeadedrs\n    */\n\n  }, {\n    key: \"addDefaultHeaders\",\n    value: function addDefaultHeaders(req) {\n      /**\n       * TODO: Add all default Headers over here\n       */\n      if (!req.headers.has('Access-Control-Allow-Origin')) {\n        req.headers = req.headers.set('Access-Control-Allow-Origin', '*');\n      }\n\n      if (!req.headers.has('Content-Type')) {\n        req.headers = req.headers.set('Content-Type', 'application/json');\n      } else if (req.headers.has('Content-Type') && req.headers.get('Content-Type') === 'no-content') {\n        req.headers = req.headers.delete('Content-Type');\n      }\n\n      if (!req.headers.has('Accept')) {\n        req.headers = req.headers.set('Accept', 'application/json');\n      }\n\n      if (!req.headers.has('Authorization')) {\n        this.appProperties = this.systemService.getVal('properties');\n\n        if (this.appProperties && this.appProperties.appAuthenticationStrategy === 'basicAuth') {\n          var username, password;\n\n          if (this.appProperties.basicAuthUser && this.appProperties.basicAuthPassword) {\n            username = this.appProperties.basicAuthUser;\n            password = this.appProperties.basicAuthPassword;\n          } else {\n            username = \"bhive-art-proxyuser\";\n            password = \"password\";\n            console.warn(\"Authentication strategy: Basic Auth. basicAuthUser and basicAuthPassword are not configured in environment. Setting default values.\");\n          }\n\n          req.headers = req.headers.set('Authorization', 'Basic ' + btoa(username + \":\" + password));\n        } else if (this.appProperties && (this.appProperties.appAuthenticationStrategy === 'activeDirectory' || this.appProperties.appAuthenticationStrategy === 'localAuth')) {\n          if (this.nSessionStorage.getValue('accessToken')) {\n            req.headers = req.headers.set('Authorization', 'Bearer ' + this.nSessionStorage.getValue('accessToken'));\n          }\n        }\n      }\n\n      return req;\n    }\n    /**\n     * Build API url.\n     * @param url\n     * @returns string\n     */\n\n  }, {\n    key: \"getFullUrl\",\n    value: function getFullUrl(url) {\n      // return full URL to API here\n      return url;\n    }\n    /**\n     * Request interceptor.\n     */\n\n  }, {\n    key: \"requestInterceptor\",\n    value: function requestInterceptor() {\n      this.nHTTPLoader.isHTTPRequestInProgress(true);\n    }\n    /**\n     * Response interceptor.\n     */\n\n  }, {\n    key: \"responseInterceptor\",\n    value: function responseInterceptor() {\n      this.nHTTPLoader.isHTTPRequestInProgress(false);\n    }\n    /**\n      * Error handler.\n      * @param error\n      * @param caught\n      * @returns ErrorObservable\n      */\n\n  }, {\n    key: \"onCatch\",\n    value: function onCatch(error, req, next) {\n      if (error instanceof HttpErrorResponse) {\n        if (error.status === 403 && error.error.message === 'jwt expired') {\n          return this.updateToken(error, req, next);\n        } else {\n          return this.onSubscribeError(error);\n        }\n      } else {\n        return this.onSubscribeError(error);\n      }\n    }\n    /**\n     * onSubscribeError\n     * @param error\n     */\n\n  }, {\n    key: \"onSubscribeError\",\n    value: function onSubscribeError(err) {\n      this.nHTTPLoader.alertError(err);\n      return this.onCatchError(err);\n    }\n    /**\n     * onFinally\n     */\n\n  }, {\n    key: \"onFinally\",\n    value: function onFinally() {\n      this.responseInterceptor();\n    }\n  }, {\n    key: \"onCatchError\",\n    value: function onCatchError(error) {\n      return throwError(error);\n    }\n  }]);\n\n  return NHttpService;\n}();\n\nNHttpService.ɵfac = function NHttpService_Factory(t) {\n  return new (t || NHttpService)(ɵngcc0.ɵɵinject(NHTTPLoaderService), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NLocalStorageService), ɵngcc0.ɵɵinject(NTokenService));\n};\n\nNHttpService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NHttpService,\n  factory: NHttpService.ɵfac\n});\n\nNHttpService.ctorParameters = function () {\n  return [{\n    type: NHTTPLoaderService\n  }, {\n    type: Injector\n  }, {\n    type: NLocalStorageService\n  }, {\n    type: NTokenService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NHttpService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NHTTPLoaderService\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: NLocalStorageService\n    }, {\n      type: NTokenService\n    }];\n  }, null);\n})();\n\nvar NSnackbarService = /*#__PURE__*/function () {\n  function NSnackbarService(nPubSubService) {\n    var _this17 = this;\n\n    _classCallCheck(this, NSnackbarService);\n\n    this.nPubSubService = nPubSubService;\n    this.snackService = new Subject();\n\n    if (NSystemService.getInstance().getVal('useDefaultExceptionUI')) {\n      this.snackBarListner = this.nPubSubService.$sub('openSnackBar', function (msg) {\n        _this17.openSnackBar(msg);\n      });\n    }\n  }\n\n  _createClass(NSnackbarService, [{\n    key: \"get\",\n    value: function get() {\n      return this.snackService.asObservable();\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      this.snackService.next({\n        action: 'add',\n        data: data\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      this.snackService.next({\n        action: 'remove',\n        id: id\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.snackService.next({\n        action: 'clear'\n      });\n    }\n  }, {\n    key: \"openSnackBar\",\n    value: function openSnackBar(message, timeout) {\n      this.add({\n        msg: message,\n        timeout: timeout || 5000,\n        action: {\n          text: 'Close',\n          onClick: function onClick(snack) {}\n        },\n        onAdd: function onAdd(snack) {},\n        onRemove: function onRemove(snack) {}\n      });\n    }\n  }]);\n\n  return NSnackbarService;\n}();\n\nNSnackbarService.ɵfac = function NSnackbarService_Factory(t) {\n  return new (t || NSnackbarService)(ɵngcc0.ɵɵinject(NPubSubService));\n};\n\nNSnackbarService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NSnackbarService,\n  factory: NSnackbarService.ɵfac\n});\n\nNSnackbarService.ctorParameters = function () {\n  return [{\n    type: NPubSubService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NSnackbarService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NPubSubService\n    }];\n  }, null);\n})();\n\nvar SnackComponent = function SnackComponent() {\n  _classCallCheck(this, SnackComponent);\n};\n\nSnackComponent.ɵfac = function SnackComponent_Factory(t) {\n  return new (t || SnackComponent)();\n};\n\nSnackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SnackComponent,\n  selectors: [[\"n-snack\"]],\n  inputs: {\n    background: \"background\",\n    color: \"color\",\n    customClass: \"customClass\"\n  },\n  ngContentSelectors: _c2,\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"snack\", 3, \"ngStyle\", \"ngClass\"]],\n  template: function SnackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx.background ? ctx.background : \"#323232\", ctx.color ? ctx.color : \"#fff\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction0(5, _c1));\n    }\n  },\n  directives: [ɵngcc4.NgStyle, ɵngcc4.NgClass],\n  styles: [_c4]\n});\nSnackComponent.propDecorators = {\n  background: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  customClass: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SnackComponent, [{\n    type: Component,\n    args: [{\n      selector: 'n-snack',\n      template: \"\\n     <div class=\\\"snack\\\" [ngStyle]=\\\"{background: background ? background : '#323232' , color: color ? color : '#fff'}\\\" [ngClass]=\\\" ['snackbar-layout', 'customClass' ]\\\">\\n          <ng-content></ng-content>\\n       </div> \\n  \",\n      styles: [\".snack-action{color:#2196f3;cursor:pointer;font-weight:700}.container{display:flex;flex-direction:row;flex-wrap:wrap}.child{flex:1 0;margin-right:.5em;width:60%}.snackbars.bottom-center{align-items:middle}.snackbars{display:flex;display:inline;font-family:Roboto;letter-spacing:1px;max-width:100%;position:fixed;word-wrap:break-word;z-index:99999}.snackbars.bottom-center{align-items:center;bottom:1px;left:50%;transform:translate(-50%)}.snack{border-radius:.3em;max-height:50vh;overflow:auto;padding:1em}\"]\n    }]\n  }], null, {\n    background: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    customClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar SnackbarComponent = /*#__PURE__*/function () {\n  function SnackbarComponent(snackbarService) {\n    var _this18 = this;\n\n    _classCallCheck(this, SnackbarComponent);\n\n    this.snackbarService = snackbarService;\n    this.max = 1;\n    this.onAdd = new EventEmitter();\n    this.onRemove = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.snacks = [];\n    this.snackbarService.get().subscribe(function (snack) {\n      if (snack.action === 'add') {\n        _this18.add(snack.data);\n      } else if (snack.action === 'remove') {\n        _this18.remove(snack.id);\n      } else if (snack.action === 'clear') {\n        _this18.clear();\n      }\n    });\n  }\n\n  _createClass(SnackbarComponent, [{\n    key: \"add\",\n    value: function add(snack) {\n      var _this19 = this;\n\n      var timeout;\n      var id = this.uuid();\n\n      if (this.max && this.max > 0 && this.snacks.length === this.max) {\n        this.remove(this.snacks[0].id);\n      }\n\n      if (snack.timeout || this.timeout) {\n        timeout = setTimeout(function () {\n          _this19.remove(id);\n        }, snack.timeout || this.timeout);\n      }\n\n      var data = Object.assign({\n        id: id,\n        timeoutObj: timeout\n      }, snack);\n\n      if (snack.action) {\n        var that = this;\n        var fcn = snack.action.onClick || new Function();\n\n        snack.action.onClick = function () {\n          fcn(data);\n          that.remove(id);\n        };\n      }\n\n      if (snack.onAdd) {\n        snack.onAdd(data);\n      }\n\n      if (this.onAdd) {\n        this.onAdd.emit(data);\n      }\n\n      this.snacks.push(data);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      var snack = this.snacks.find(function (obj) {\n        return obj.id === id;\n      });\n\n      if (snack) {\n        if (snack.onRemove) {\n          snack.onRemove(snack);\n        }\n\n        if (this.onRemove) {\n          this.onRemove.emit(snack);\n        }\n\n        if (snack.timeoutObj) {\n          clearTimeout(snack.timeoutObj);\n        }\n      }\n\n      this.snacks = this.snacks.filter(function (obj) {\n        return obj.id !== id;\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      // this.snacks.forEach(snack => {\n      //   this.remove(snack.id);\n      // });\n      this.snacks = [];\n\n      if (this.onClear) {\n        this.onClear.emit(true);\n      }\n    }\n  }, {\n    key: \"uuid\",\n    value: function uuid() {\n      // tslint:disable:no-bitwise\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c === 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      }); // tslint:enable:no-bitwise\n    }\n  }, {\n    key: \"calcTextColor\",\n    value: function calcTextColor(background) {\n      if (!background) {\n        return null;\n      }\n\n      function hexToRgb(hex) {\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n          return r + r + g + g + b + b;\n        });\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16)\n        } : null;\n      }\n\n      var rgb = hexToRgb(background);\n\n      if (!rgb) {\n        return null;\n      }\n\n      var color = [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n\n      for (var i = 0; i < color.length; ++i) {\n        if (color[i] <= 0.03928) {\n          color[i] = color[i] / 12.92;\n        } else {\n          color[i] = Math.pow((color[i] + 0.055) / 1.055, 2.4);\n        }\n      }\n\n      var l = 0.2126 * color[0] + 0.7152 * color[1] + 0.0722 * color[2];\n\n      if (l > 0.179) {\n        return '#000';\n      } else {\n        return '#fff';\n      }\n    }\n  }]);\n\n  return SnackbarComponent;\n}();\n\nSnackbarComponent.ɵfac = function SnackbarComponent_Factory(t) {\n  return new (t || SnackbarComponent)(ɵngcc0.ɵɵdirectiveInject(NSnackbarService));\n};\n\nSnackbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SnackbarComponent,\n  selectors: [[\"n-snackbar\"]],\n  inputs: {\n    max: \"max\",\n    position: \"position\",\n    background: \"background\",\n    accent: \"accent\",\n    color: \"color\",\n    customClass: \"customClass\",\n    timeout: \"timeout\"\n  },\n  outputs: {\n    onAdd: \"onAdd\",\n    onRemove: \"onRemove\",\n    onClear: \"onClear\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"snackbars\", 3, \"ngClass\"], [3, \"background\", \"customClass\", \"color\", 4, \"ngFor\", \"ngForOf\"], [3, \"background\", \"customClass\", \"color\"], [1, \"container\"], [1, \"snack-text\", \"child\"], [\"class\", \"snack-action\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [1, \"snack-action\", 3, \"ngStyle\", \"click\"]],\n  template: function SnackbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, SnackbarComponent_n_snack_1_Template, 5, 5, \"n-snack\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.position || \"bottom-center\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.snacks);\n    }\n  },\n  directives: [ɵngcc4.NgClass, ɵngcc4.NgForOf, SnackComponent, ɵngcc4.NgIf, ɵngcc4.NgStyle],\n  styles: [_c4]\n});\n\nSnackbarComponent.ctorParameters = function () {\n  return [{\n    type: NSnackbarService\n  }];\n};\n\nSnackbarComponent.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  background: [{\n    type: Input\n  }],\n  accent: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  customClass: [{\n    type: Input\n  }],\n  timeout: [{\n    type: Input\n  }],\n  onAdd: [{\n    type: Output\n  }],\n  onRemove: [{\n    type: Output\n  }],\n  onClear: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SnackbarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'n-snackbar',\n      template: \"\\n      <div class=\\\"snackbars\\\" [ngClass]=\\\"position || 'bottom-center'\\\">\\n          <n-snack   *ngFor=\\\"let snackbar of snacks\\\" [background]=\\\"snackbar.background || background\\\"\\n                        [customClass]=\\\"snackbar.customClass || customClass\\\"\\n                        [color]=\\\"snackbar.color || color || calcTextColor(snackbar.background || background)\\\">\\n              <div class=\\\"container\\\">\\n              <div class=\\\"snack-text child\\\" >\\n                  {{snackbar.msg}}\\n              </div>\\n              <div *ngIf=\\\"snackbar.action.text\\\" class=\\\"snack-action\\\" (click)=\\\"snackbar.action.onClick()\\\"\\n                   [ngStyle]=\\\"{color: snackbar.action.color || accent}\\\">\\n                  {{snackbar.action.text}}\\n              </div>\\n              </div>\\n          </n-snack>\\n      </div>\\n  \",\n      styles: [\".snack-action{color:#2196f3;cursor:pointer;font-weight:700}.container{display:flex;flex-direction:row;flex-wrap:wrap}.child{flex:1 0;margin-right:.5em;width:60%}.snackbars.bottom-center{align-items:middle}.snackbars{display:flex;display:inline;font-family:Roboto;letter-spacing:1px;max-width:100%;position:fixed;word-wrap:break-word;z-index:99999}.snackbars.bottom-center{align-items:center;bottom:1px;left:50%;transform:translate(-50%)}.snack{border-radius:.3em;max-height:50vh;overflow:auto;padding:1em}\"]\n    }]\n  }], function () {\n    return [{\n      type: NSnackbarService\n    }];\n  }, {\n    max: [{\n      type: Input\n    }],\n    onAdd: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    position: [{\n      type: Input\n    }],\n    background: [{\n      type: Input\n    }],\n    accent: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    customClass: [{\n      type: Input\n    }],\n    timeout: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction startupServiceFactory(startupService) {\n  var res = function res() {\n    // console.log('module before initstorage call');\n    return startupService.initStorage();\n  };\n\n  return res;\n}\n\nfunction NgForageFactory(ngForageConfig) {\n  // @ts-ignore\n  return new NgForage({}, new InstanceFactory(ngForageConfig));\n}\n\nvar NeutrinosSeedServicesModule = function NeutrinosSeedServicesModule() {\n  _classCallCheck(this, NeutrinosSeedServicesModule);\n};\n\nNeutrinosSeedServicesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NeutrinosSeedServicesModule\n});\nNeutrinosSeedServicesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NeutrinosSeedServicesModule_Factory(t) {\n    return new (t || NeutrinosSeedServicesModule)();\n  },\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: NHttpService,\n    multi: true\n  }, {\n    // Provider for APP_INITIALIZER\n    provide: APP_INITIALIZER,\n    useFactory: startupServiceFactory,\n    deps: [NLocalStorageService],\n    multi: true\n  }, {\n    provide: NgForage,\n    useFactory: NgForageFactory,\n    deps: [NgForageConfig]\n  }, NAuthGuardService, NDataModelService, NHttpService, NHTTPLoaderService, NLocalStorageService, NLoginService, NLogoutService, NNotificationService, NSnackbarService, NPubSubService, NSessionStorageService, NTokenService],\n  imports: [[CommonModule, HttpClientModule, RouterModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NeutrinosSeedServicesModule, {\n    declarations: function declarations() {\n      return [SnackComponent, SnackbarComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, HttpClientModule, RouterModule];\n    },\n    exports: function exports() {\n      return [SnackComponent, SnackbarComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NeutrinosSeedServicesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, HttpClientModule, RouterModule],\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: NHttpService,\n        multi: true\n      }, {\n        // Provider for APP_INITIALIZER\n        provide: APP_INITIALIZER,\n        useFactory: startupServiceFactory,\n        deps: [NLocalStorageService],\n        multi: true\n      }, {\n        provide: NgForage,\n        useFactory: NgForageFactory,\n        deps: [NgForageConfig]\n      }, NAuthGuardService, NDataModelService, NHttpService, NHTTPLoaderService, NLocalStorageService, NLoginService, NLogoutService, NNotificationService, NSnackbarService, NPubSubService, NSessionStorageService, NTokenService],\n      declarations: [SnackComponent, SnackbarComponent],\n      exports: [SnackComponent, SnackbarComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NAuthGuardService, NDataModelService, NHTTPLoaderService, NHttpService, NLocalStorageService, NLoginService, NLogoutService, NNotificationService, NPubSubService, NSessionStorageService, NSnackbarService, NSystemService, NTokenService, NUtility, NeutrinosSeedServicesModule, NgForageFactory, SnackComponent, SnackbarComponent, startupServiceFactory };","map":{"version":3,"sources":["../../src/app/neutrinos-seed-services/n-system.service.ts","../../src/app/neutrinos-seed-services/n-sessionStorage.service.ts","../../src/app/neutrinos-seed-services/n-util.service.ts","../../src/app/neutrinos-seed-services/n-localStorage.service.ts","../../src/app/neutrinos-seed-services/n-token.service.ts","../../src/app/neutrinos-seed-services/n-pubSub.service.ts","../../src/app/neutrinos-seed-services/n-logout.service.ts","../../src/app/neutrinos-seed-services/n-HTTPLoader.service.ts","../../src/app/neutrinos-seed-services/n-notification.service.ts","../../src/app/neutrinos-seed-services/n-login.service.ts","../../src/app/neutrinos-seed-services/n-authGaurd.service.ts","../../src/app/neutrinos-seed-services/n-dataModel.service.ts","../../src/app/neutrinos-seed-services/n-HTTP.service.ts","../../src/app/neutrinos-seed-services/n-snackbar.service.ts","../../src/app/neutrinos-seed-services/snackbar/snack/snack.component.ts","../../src/app/neutrinos-seed-services/snackbar/snackbar/snackbar.component.ts","../../src/app/neutrinos-seed-services/neutrinos-seed-services.module.ts","../../neutrinos-seed-services.ts"],"names":["platform.os","platform.name","platform.version"],"mappings":"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","sourcesContent":["// import { environment } from '../../environments/environment';\nimport { NUtility } from './n-util.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { Injectable } from '@angular/core';\nimport * as platform from 'platform';\n\n// @dynamic\nexport class NSystemService {\n  private static instance: NSystemService;\n\n  private _deviceType: string;\n  // private _deviceUUID;\n  uuid;\n  properties;\n  static envProperties;\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new NSystemService();\n    }\n    return this.instance;\n  }\n\n  private constructor() {\n    this._deviceType = this.checkDevice();\n  }\n\n  /**\n   * Seter and getter for the environments\n   */\n\n  // set environments(properties) {\n  //   console.log(properties);\n  //   NSystemService.envProperties = properties;\n  //   this.properties = this.getVal('properties');\n  // }\n\n  // get environments() {\n  //   return NSystemService.envProperties;\n  // }\n\n  /**\n   * Returna 'mobile' or 'browser' based on the platform\n   */\n  checkDevice(): string {\n    if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {\n      return 'mobile';\n    } else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {\n      return 'cordova_browser';\n    } else {\n      return 'browser';\n    }\n  }\n\n\n  public get deviceType() {\n    return this._deviceType;\n  }\n\n\n\n  public getVal(key) {\n    if (!NSystemService.envProperties) {\n      NSystemService.envProperties = window['neutrinos']['environments'];\n      this.properties = NSystemService.envProperties.properties;\n    }\n\n    if (key == 'properties') {\n      if (NSystemService.envProperties) {\n        return NSystemService.envProperties.properties;\n      } else {\n        return undefined;\n      }\n    } else {\n      if (NSystemService.envProperties && NSystemService.envProperties.properties) {\n        return NSystemService.envProperties.properties[key];\n      } else {\n        return undefined;\n      }\n\n    }\n\n  }\n\n  public isAndroid() {\n    if (window['device'] && window['device']['platform'] == 'Android') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isIOS() {\n    if (window['device'] && window['device']['platform'] == 'iOS') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public getAndroidVersion() {\n    if (this.isAndroid()) {\n      return window['device']['version'];\n    } else {\n      return '';\n    }\n  }\n\n  public getAuthUrl() {\n    // this.properties = this.getVal('properties');\n    return this.properties.baseUrl + this.properties.tenantName + '/auth/';\n  }\n  public getTenantUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/';\n  }\n\n  public getAppUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';\n  }\n\n  public getProxyUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/';\n  }\n\n  public getDataModelUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\n  }\n\n  public getFileIOUrl() {\n    return this.properties.baseUrl + this.properties.tenantName + '/fileio/' +\n      this.properties.appDataSource + '/' + this.properties.appName + '/';\n  }\n\n  public getPlatformDetails(type) {\n    const pDetails = {\n      platform: platform.os.family,\n      platformVersion: platform.os.version,\n    };\n    if (type === 'browser') {\n      return Object.assign(pDetails, {\n        type: 'browser',\n        browser: platform.name,\n        browserVersion: platform.version,\n      });\n    } else if (type === 'mobile' || type === 'cordova_browser') {\n      return Object.assign(pDetails, {\n        type: 'mobile',\n        model: window['device'].model,\n        manufacturer: window['device'].manufacturer,\n        isVirtual: window['device'].isVirtual\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NSessionStorageService {\n  static sessionStorageCache: any = {};\n  constructor() {\n    NSessionStorageService.sessionStorageCache = sessionStorage;\n  }\n\n  getSessionStorage() {\n    return NSessionStorageService.sessionStorageCache;\n  }\n\n  setValue(key, value) {\n    NSessionStorageService.sessionStorageCache[key] = value;\n    sessionStorage.setItem(key, value);\n  }\n\n  getValue(key) {\n    if (!NSessionStorageService.sessionStorageCache[key]) {\n      return null;\n    }\n    try {\n      const obj = NSessionStorageService.sessionStorageCache[key];\n      return JSON.parse(obj);\n    } catch (error) {\n      return NSessionStorageService.sessionStorageCache[key];\n    }\n  }\n\n  remove(key) {\n    if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {\n      delete NSessionStorageService.sessionStorageCache[key];\n      sessionStorage.removeItem(key);\n    }\n  }\n\n  clearSessionStorage() {\n    NSessionStorageService.sessionStorageCache = {};\n    sessionStorage.clear();\n  }\n\n}\n","export class NUtility {\n  \n    constructor() { }\n  \n    generateUUID() {\n      return this.__s4() + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + this.__s4() + this.__s4();\n    }\n  \n    __s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n  }","import { NSystemService } from './n-system.service';\nimport { Injectable } from '@angular/core';\nimport {NgForage, NgForageCache, NgForageConfig, Driver} from 'ngforage';\nimport { NUtility } from './n-util.service';\n\n@Injectable()\nexport class NLocalStorageService {\n\n  storageCache: any = {};\n  private _deviceUUID;\n  private nativeStorageI;\n  constructor(private ngfConfig?: NgForageConfig, private readonly ngf?: NgForage, private readonly ngfCache?: NgForageCache) {\n  }\n\n\n\n  initStorage() {\n    return new Promise((resolve, reject) => {\n      if (window['cordova']) {\n        this.initNgForage();\n      }\n      this.ngf.iterate((value, key, iteratonNumber) => {\n        this.storageCache[key] = value;\n      }).then(result => {\n        this.checkDeviceId();\n        return resolve('iteration is completed')\n      }).catch(error => {\n        return reject(error);\n      });\n    });\n  }\n\n  getStorage() {\n    return this.storageCache;\n  }\n\n\n  setValue(key, value) {\n    if (window['cordova']) {\n      this.initNgForage();\n    }\n    this.storageCache[key] = value;\n    return this.ngf.setItem(key, value).then(result => {\n      return result;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getValue(key): any | Promise<any> {\n    if (!this.storageCache[key]) {\n      return null;\n    } try {\n      const obj = this.storageCache[key]\n      return JSON.parse(obj);\n    } catch (error) {\n      return this.storageCache[key];\n    }\n  }\n\n  remove(key) {\n    delete this.storageCache[key];\n    if (window['cordova']) {\n      this.initNgForage();\n    }\n    this.ngf.removeItem(key).then(fulfilled => {\n      delete this.ngf[key];\n    }).catch(error => {\n      console.error('Could not remove', key);\n    });\n  }\n\n  clear() {\n    this.storageCache = {};\n    this.ngf.clear();\n  }\n\n  private pluginCheck() {\n    if (window['cordova'] && window['NativeStorage']) {\n      this.nativeStorageI = window['NativeStorage'];\n      // return true;\n    }\n    // this.initStorage();\n  }\n\n  private getItemNs(key) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.getItem(key, result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private setItemNs(key, value) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.setItem(key, value, result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private removeItemNs(key) {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.remove(key, (result) => {\n          resolve(result);\n        }, (error) => {\n          reject(error);\n        });\n      }\n    })\n  }\n\n  private clearNs() {\n    return new Promise((resolve, reject) => {\n      if (window['cordova'] && window['NativeStorage']) {\n        this.nativeStorageI.clear(result => {\n          resolve(result);\n        }, error => {\n          reject(error);\n        })\n      }\n    })\n  }\n\n  private initNgForage() {\n    let driverType = window['neutrinos']['environments']['properties']['NGFORAGE_MOBILE_DRIVER'] ? window['neutrinos']['environments']['properties']['NGFORAGE_MOBILE_DRIVER'] : \"INDEXED_DB\";\n    this.ngfConfig.configure({\n      name: 'MyApp',\n      driver: [\n        Driver[driverType],\n      ]\n    });\n\n  }\n\n  private promiseReflect(promise) {\n    return promise.then(resolved => { return { v: resolved, status: 'resolved' } }, error => { return { e: error, status: 'rejected' } })\n  }\n\n  clearLocalStorage() {\n    this.remove('userObj');\n    this.remove('accessToken');\n    this.remove('refreshToken');\n    this.remove('registrationId');\n  }\n\n  /**\n   * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService\n  */\n\n  checkDeviceId() {\n    if (NSystemService.getInstance().checkDevice() === 'browser') {\n      this._deviceUUID = this.getValue('uuid');\n\n      if (!this._deviceUUID) {\n        this._deviceUUID = new NUtility().generateUUID();\n        this.setValue('uuid', this._deviceUUID);\n      }\n    } else {\n      window['plugins'].uniqueDeviceID.get((uuid) => {\n        this._deviceUUID = uuid;\n        this.setValue('uuid', this._deviceUUID);\n      });\n    }\n    return this._deviceUUID;\n  }\n\n  public get deviceUUID() {\n    return this._deviceUUID;\n  }\n}\n","import { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NTokenService {\n\n  nSessionStorage;\n  // nLocalStorageService: NLocalStorageService;\n\n  constructor(private nLocalStorageService: NLocalStorageService) {\n    this.nSessionStorage = new NSessionStorageService();\n    // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n  updateTokens(tokensObj, isRemember?: Boolean) {\n    let userObj = this.decodeToken(tokensObj['accessToken'])\n    this.nSessionStorage.setValue('accessToken', tokensObj['accessToken']);\n    this.nSessionStorage.setValue('refreshToken', tokensObj['refreshToken']);\n    this.nSessionStorage.setValue('userObj', JSON.stringify(userObj));\n\n    if ((isRemember || this.nLocalStorageService.getValue('accessToken'))) {\n      this.nLocalStorageService.setValue('accessToken', tokensObj['accessToken']);\n      this.nLocalStorageService.setValue('refreshToken', tokensObj['refreshToken']);\n      this.nLocalStorageService.setValue('userObj', JSON.stringify(userObj));\n    }\n  }\n\n  updateSessionStorage() {\n    this.updateTokens(this.nLocalStorageService.getStorage(), true);\n  }\n\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: { break; }\n      case 2: { output += '=='; break; }\n      case 3: { output += '='; break; }\n      default: {\n        throw 'Illegal base64url string!';\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output: string = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 == 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (\n      // initialize result and counters\n      let bc: number = 0, bs: any, buffer: any, idx: number = 0;\n      // get next character\n      buffer = str.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), (c: any) => {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  }\n\n  public decodeToken(token: string): any {\n    let parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error('JWT must have 3 parts');\n    }\n\n    let decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(token: string): Date {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    let date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    let date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date == null) {\n      return false;\n    }\n\n    // Token expired?\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable, Subscription } from 'rxjs';\n\nconst ServiceName: string = \"PubSub Service\";\n\n@Injectable()\nexport class NPubSubService {\n  private events = {};\n\n  constructor() { }\n\n  public $sub(event: string): Observable<any>;\n  public $sub(event: string, callback: (value: any) => void): Subscription;\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n  public $sub(event: string, callback?: (value: any) => void, error?: (error: any) => void, complete?: () => void) {\n      if (!event) {\n          throw new Error(`[${ServiceName}] => Subscription method must get event name.`);\n      }\n\n      if (this.events[event] === undefined) {\n          this.events[event] = new Subject<any>();\n      }\n\n      if (typeof callback !== 'function') {\n          return this.events[event].asObservable();\n      } else {\n          return this.events[event].asObservable().subscribe(callback, error, complete);\n      }\n  }\n\n  public $pub(event: string, eventObject?: any) {\n      if (!event) {\n          throw new Error(`[${ServiceName}] => Publish method must get event name.`);\n      } else if (!this.events[event]) {\n          return;\n      }\n      this.events[event].next(eventObject);\n  }\n}\n\nexport interface IPubSubService {\n  $pub(event: string, eventObject?: any);\n  $sub(event: string): Observable<any>;\n  $sub(event: string, callback: (value: any) => void): Subscription;\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n\ninterface I$sub {\n  (event: string): Observable<any>;\n  (event: string, callback: (value: any) => void): Subscription;\n  (event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n  (event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n","import { Injectable } from '@angular/core';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\n\n@Injectable()\nexport class NLogoutService {\n\n  nSessionStorage = new NSessionStorageService();\n  // nLocalStorageService = new NLocalStorageService();\n  constructor(private nLocalStorageService: NLocalStorageService) { }\n\n  logout() {\n    this.nSessionStorage.clearSessionStorage();\n    this.nLocalStorageService.clearLocalStorage();\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject ,  Observable } from 'rxjs';\n// import { NSnackbarService } from './n-snackbar.service';\nimport { NLogoutService } from './n-logout.service';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\n// import { NSnackbarService } from './snackbar/service/snackbar.service';\n\n@Injectable()\nexport class NHTTPLoaderService {\n  public pendingRequests = 0;\n  public showLoading = false;\n  private _isHTTPRequestInProgress = new Subject<boolean>();\n  _isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();\n\n  constructor(private nLogoutService: NLogoutService, private nPubSubService: NPubSubService) {\n\n  }\n\n  isHTTPRequestInProgress(bool) {\n    if (bool) {\n      this.pendingRequests++;\n      if (!this.showLoading) {\n        this._isHTTPRequestInProgress.next(bool);\n      }\n      this.showLoading = true;\n    } else {\n      this.pendingRequests--;\n      if (this.pendingRequests <= 0) {\n        if (this.showLoading) {\n          this._isHTTPRequestInProgress.next(bool);\n        }\n        this.showLoading = false;\n      }\n    }\n  }\n\n  alertError(error) {\n    if (error.status < 200 || error.status > 500) {\n      if (error.status === 0) {\n        this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');\n      } else {\n        this.nPubSubService.$pub('openSnackBar', 'Response failure')\n      }\n    } else if (error.status === 401) {\n      this.nLogoutService.logout();\n      if (error.error) {\n        this.nPubSubService.$pub('openSnackBar', error.error)\n      } else {\n        this.nPubSubService.$pub('openSnackBar', error)\n      }\n    } else if (error.error) {\n      if (error.error instanceof Object) {\n        this.nPubSubService.$pub('openSnackBar', error.error.message)\n      } else {\n        this.nPubSubService.$pub('openSnackBar', error.error)\n      }\n    } else {\n      this.nPubSubService.$pub('openSnackBar', 'Response failure')\n    }\n  }\n\n}\n\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\nimport { NSystemService } from './n-system.service';\nimport { Observable } from 'rxjs';\ndeclare var PushNotification: any;\ndeclare var APNSPushNotification: any;\nimport { NLocalStorageService } from './n-localStorage.service';\nimport firebase from 'firebase';\nimport { NPubSubService } from './n-pubSub.service';\nimport { HttpClient } from '@angular/common/http';\nimport { NSessionStorageService } from './n-sessionStorage.service';\n// import { Router } from '@angular/router';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { environment } from '../../environments/environment.prod';\n\n\n@Injectable()\nexport class NNotificationService {\n  // private static instance: NNotificationService;\n  private systemService: NSystemService = NSystemService.getInstance();\n  private firebaseSenderId: string;\n  private isNotificationEnabled: boolean;\n  private deviceType; string;\n  private resDetails;\n  private deviceUUID: string;\n  private possiblePushTypes: string[] = ['APNS','FCM'];\n  loginSubscribe;\n  sessionStorage: NSessionStorageService;\n  appName;\n  constructor(private localStorageService: NLocalStorageService, private pubSubService: NPubSubService,\n    private http: HttpClient, private bHttpLoader: NHTTPLoaderService) {\n    this.firebaseSenderId = this.systemService.getVal('firebaseSenderId');\n    this.isNotificationEnabled = this.systemService.getVal('isNotificationEnabled');\n    this.appName = this.systemService.getVal('appName');\n    this.deviceType = this.systemService.deviceType;\n    this.sessionStorage = new NSessionStorageService();\n    this.loginSubscribe = this.pubSubService.$sub('firebaseRegister', () => {\n      this.enableNotification();\n    })\n  }\n\n  ngOnInit() {\n  }\n\n\n  enableNotification() {\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\n    document.addEventListener('deviceready', event => {\n      if (this.isNotificationEnabled) {\n        if (this.deviceType && this.deviceType != 'browser') {\n          this.deviceType = this.systemService.deviceType;\n          this.checkPermission(pushType).then(res => {\n            if (res) {\n              this.initializeNotifications(pushType);\n            }\n          });\n        }\n      }\n    });\n    if (this.isNotificationEnabled && pushType !== 'APNS') {\n      if (this.deviceType && this.deviceType == 'browser' && window['Notification']) {\n        this.initialiseWebPush();\n      }\n    }\n  }\n\n  initialiseWebPush() {\n    const __this = this;\n    const messaging = firebase.messaging();\n\n    Notification.requestPermission()\n      .then(function () {\n        return messaging.getToken();\n      })\n      .then(function (token) {\n        if (token) {\n          __this.sendRegDetails(token);\n        }\n      })\n      .catch(function (err) {\n        __this.bHttpLoader.alertError(err);\n      });\n\n    messaging.onMessage(function (payload) {\n      if (payload['notification']) {\n        let notificationObj = payload['notification'];\n        let options = {\n          body: notificationObj.body,\n          icon: notificationObj.icon\n        }\n        // creating a native browser message\n        let notificationUI = new Notification(notificationObj.title, options);\n        notificationUI.onclick = function () {\n          window.focus(); // window is focused when the user clicks the notification using this\n        }\n      }\n    });\n  }\n\n  checkPermission(pushType?) {\n    // Android & iOS only\n    // Checks whether the push notification permission has been granted.\n    return new Promise((resolve) => {\n      pushType = this.getPushType(pushType);\n      if ((this.deviceType === 'Android' || this.deviceType === 'iOS') && (pushType === 'FCM' )) {\n        PushNotification.hasPermission(function (data) {\n          return resolve(data.isEnabled);\n        });\n      } else if (this.deviceType === 'iOS' && pushType === 'APNS') {\n         APNSPushNotification.hasPermission(function (data) {\n          return resolve(data.isEnabled);\n        });\n      } else {\n        return resolve(true);\n      }\n    });\n  }\n\n  initializeNotifications(pushType?) {\n    //pushType = pushType ? pushType : 'FCM';\n    pushType = this.getPushType(pushType);\n\n    let push;\n    // Default if for FCM\n    if (pushType === 'FCM') {\n      push = window['PushNotification'].init({\n        android: {\n          senderID: this.firebaseSenderId\n        },\n        ios: {\n          alert: \"true\",\n          badge: \"true\",\n          sound: \"true\",\n          senderID: this.firebaseSenderId\n        },\n      });\n    }\n    // New APNS plugin init\n    else if (pushType === 'APNS') {\n      push = window['APNSPushNotification'].init({\n        ios: {\n          alert: \"true\",\n          badge: \"true\",\n          sound: \"true\"\n        }\n      });\n    }\n    push.on('registration', (data) => {\n      // data.registrationId\n      this.sendRegDetails(data.registrationId);\n    });\n\n    // ToDo Christy get call back function from app user to change what happens once a notification arrives\n    push.on('notification', (data) => {\n      window['cordova'].plugins.notification.local.schedule({\n        title: data.title,\n        text: data.message,\n        sound: data.sound,\n        at: new Date().getTime()\n      });\n    });\n\n    push.on('error', (e) => {\n      // e.message\n      console.error(e);\n    });\n  }\n\n  sendRegDetails(registrationId) {\n    this.localStorageService.setValue('registrationId', registrationId);\n    var url = this.systemService.getTenantUrl() + 'notification/' + this.systemService.getVal('appName') + '/register';\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\n    this.http.post(url, {\n      'key': this.sessionStorage.getValue('userObj')['userKey'],\n      'uuid': this.localStorageService.getValue('uuid'), \n      'fbregid': registrationId,\n      'pushType': pushType\n    }).subscribe(result => {\n      // this.pubSubService.$pub('FBRegComp');\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  getPushType (currPushType) {\n    let isValidPush = typeof currPushType !== 'undefined' && this.possiblePushTypes.includes(currPushType.toUpperCase());\n    let pushType = isValidPush ? currPushType.toUpperCase() : 'FCM';\n    return pushType;\n  }\n\n  ngOnDestroy() {\n    this.loginSubscribe.unSubscribe();\n  }\n}\n","\nimport {map} from 'rxjs/operators';\nimport { Injectable, EventEmitter, Output, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NSystemService } from './n-system.service';\nimport { NTokenService } from './n-token.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NNotificationService } from './n-notification.service';\n\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class NLoginService {\n  loginUrl;\n  appProperties;\n  systemService;\n  nSessionStorage;\n  uuid;\n  details: any;\n\n  @Output() loginCompleted = new EventEmitter();\n  constructor(private http: HttpClient, private pubSubService: NPubSubService, private notificationService: NNotificationService,\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\n    this.systemService = NSystemService.getInstance();\n    // this.nTokenService = new NTokenService();\n    this.nSessionStorage = new NSessionStorageService();\n    // this.nLocalStorageService = new NLocalStorageService();\n  }\n\n\n  login(userName, password, isRemember?) {\n    this.appProperties = this.systemService.getVal('properties');\n    this.loginUrl = this.systemService.getAuthUrl() + this.appProperties.appName;\n    this.uuid = this.nLocalStorageService.getValue('uuid');\n    if (!this.uuid) {\n      this.uuid = this.nLocalStorageService.checkDeviceId();\n    }\n    this.details = {\n      username: userName,\n      password: password,\n    };\n    this.details.platformDetails = this.systemService.getPlatformDetails(this.systemService.checkDevice());\n    this.details.platformDetails['uuid'] = this.uuid;\n    return this.http.post(this.loginUrl, JSON.stringify(this.details)).pipe(map(result => {\n      const tokensObj = result;\n      if (tokensObj) {\n        this.nTokenService.updateTokens(tokensObj, isRemember);\n      }\n      // TODO chris array of supported pushes currently only support APNS and Firebase\n      if ((this.systemService.getVal('firebaseSenderId') != 'FIREBASE_SENDER_ID' && this.systemService.getVal('firebaseAuthKey') != 'FIREBASE_AUTH_KEY') \n           || (this.systemService.getVal('pushType') === 'APNS' && this.systemService.isIOS())) {\n        this.pubSubService.$pub('firebaseRegister');\n      }\n      this.pubSubService.$pub('loginComplete');\n      return (result);\n    }, error => {\n      return (error);\n    }));\n  }\n\n  isLoggedIn() {\n    return this.nLocalStorageService.initStorage().then(result => {\n      if (this.nSessionStorage.getValue('accessToken') && this.nSessionStorage.getValue('refreshToken') &&\n        this.nSessionStorage.getValue('accessToken') != 'null' && this.nSessionStorage.getValue('refreshToken') != 'null') {\n        return true;\n      }\n      return false;\n    }).catch(error => {\n      return false;\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { NLoginService } from './n-login.service';\n\n@Injectable()\nexport class NAuthGuardService implements CanActivate {\n\n  constructor(private nLoginService: NLoginService, private router: Router) { }\n\n  canActivate() {\n    return this.nLoginService.isLoggedIn().then(result => {\n      if (result) {\n        return true;\n      } else {\n        this.router.navigate(['unauthorized']);\n        return false;\n      }\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { NSystemService } from './n-system.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class NDataModelService {\n  private systemService: NSystemService;\n  private dmUrl: string;\n  private invalidDataModelName: string = 'Invalid data model name.';\n  private invalidDataModelId: string = 'Invalid data model id.';\n  private invalidDataModelObj: string = 'Invalid data model object.';\n  private dmDs;\n  constructor(private http: HttpClient) {\n    this.systemService = NSystemService.getInstance();\n  }\n\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName\n   * @param filter The filter query parameter allows to specify conditions on the documents to return.\n   * The filter qparam value is any mongodb query… Defaults to {}\n   * @param keys Projections to be applited on mongo db.\n   * @param sort sort to be applied on the query results. Defaults to {}\n   * @param pagenumber Page number for paginated queries. Defaults to 1\n   * @param pagesize Size of each page to be returned. Defaults to 100.\n   */\n  get(dataModelName, filter?, keys?, sort?, pagenumber?, pagesize?): Observable<any> {\n    if (dataModelName) {\n      // let modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      let modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n      if (this.checkIfValid(filter) || this.checkIfValid(keys) || this.checkIfValid(sort) ||\n        this.checkIfValid(pagenumber) || this.checkIfValid(pagesize)) {\n        let queryString = `${this.toQueryString({\n          'filter': filter,\n          'keys': keys,\n          'sort': sort,\n          'pagenumber': pagenumber,\n          'pagesize': pagesize\n        })}`;\n        if (queryString === '') {\n          queryString += '?filter={}';\n        } else {\n          queryString = '?'.concat(queryString);\n        }\n        modelNameUrl += queryString;\n      }\n      return this.http.get(modelNameUrl).pipe(map((value, index) => {\n        return value;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    } else {\n      return throwError(new Error(`Could not get ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // PUT /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName Data model name of the app\n   * @param dataModelObj Data Model object which is to be inserted\n   */\n  put(dataModelName, dataModelObj): Observable<any> {\n    if (dataModelName) {\n      if (dataModelObj) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n        return this.http.put(modelNameUrl, dataModelObj).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n        return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelObj}`));\n      }\n    } else {\n      return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName\n   * @param filter\n   */\n  delete(dataModelName, filter): Observable<any> {\n    let modelNameUrl;\n    if (dataModelName) {\n      // modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n\n      if (this.checkIfValid(filter) && filter != '') {\n        modelNameUrl += `?filter=${filter}`;\n      } else {\n        modelNameUrl += '?filter={}';\n      }\n      return this.http.delete(modelNameUrl).pipe(map((value, index) => {\n        return value;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    } else {\n      return throwError(new Error(`Could not delete ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\n  /**\n   *\n   * @param dataModelName Data model name which is to be updated\n   * @param dataModelObj New data model object\n   */\n  update(dataModelName, updateObject): Observable<any> {\n    if (dataModelName && updateObject) {\n      // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\n      const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\n      return this.http.patch(modelNameUrl, updateObject).pipe(map((value, index) => {\n        return value;\n      }), catchError(error => {\n        return throwError(error);\n      }));\n    } else {\n      return throwError(new Error(`Could not update ${dataModelName}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be updated\n   * @param dataModelId Data model id which is to be updated\n   */\n  getById(dataModelName, dataModelId): Observable<any> {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        return this.http.get(modelNameUrl).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n       throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be deleted\n   * @param dataModelId Data model id which is to be deleted\n   */\n  deleteById(dataModelName, dataModelId) {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        return this.http.delete(modelNameUrl).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  //PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\n  /**\n   *\n   * @param dataModelName Data model name which is to be update\n   * @param dataModelId Data model id which is to be updated\n   * @param dataModelObj Data Model object which is to be inserted\n   */\n  updateById(dataModelName, dataModelId, dataModelObj) {\n    if (dataModelName) {\n      if (dataModelId) {\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\n        var dmObj = Object.assign({}, dataModelObj);\n        delete dmObj['_id'];\n        return this.http.patch(modelNameUrl, dmObj).pipe(map((value, index) => {\n          return value;\n        }), catchError(error => {\n          return throwError(error);\n        }));\n      } else {\n        throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\n      }\n    } else {\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\n    }\n  }\n\n  private toQueryString(obj) {\n    const parts = [];\n    for (const i in obj) {\n      if (obj.hasOwnProperty(i) && this.checkIfValid(obj[i])) {\n        parts.push((i) + '=' + JSON.stringify(obj[i]));\n      }\n    }\n    return parts.join('&');\n  }\n\n  private checkIfValid(value: any) {\n    if (value === undefined || value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private getDataSourceURL(dataModelName) {\n    if (!this.dmDs) {\n      this.dmDs = window['neutrinos']['dataSource'];\n    }\n    const dsDm = this.dmDs[dataModelName];\n    const properties = this.systemService.properties;\n    if (dsDm) {\n      return properties.baseUrl + properties.tenantName + '/datamodel/' + dsDm + '/' + properties.appName + '/';\n    } else {\n      return this.systemService.getDataModelUrl();\n    }\n  }\n\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpHeaders,\n  HttpResponse,\n  HttpErrorResponse,\n  HttpClient\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { NSystemService } from './n-system.service';\nimport { NSessionStorageService } from './n-sessionStorage.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NTokenService } from './n-token.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { timeout, catchError, finalize, switchMap, filter, take } from 'rxjs/operators';\n\n@Injectable()\nexport class NHttpService {\n  timeout = 90000;\n  systemService;\n  nSessionStorage;\n  appProperties;\n  isRefreshingToken = false;\n  nPubSubService;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n  constructor(private nHTTPLoader: NHTTPLoaderService, private inj: Injector,\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\n    this.systemService = NSystemService.getInstance();\n    this.nSessionStorage = new NSessionStorageService();\n    this.appProperties = this.systemService.getVal('properties');\n    this.nPubSubService = new NPubSubService();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.requestInterceptor();\n\n    // Pass on the cloned request instead of the original request.\n    return next.handle(this.requestOptions(req))\n      .pipe(timeout(this.timeout)\n        , catchError(error => this.onCatch(error, req, next))\n        , finalize(() => {\n          this.onFinally();\n        }));\n  }\n\n  updateToken(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): any {\n    if (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\n      this.appProperties.appAuthenticationStrategy === 'localAuth') {\n      if (!this.isRefreshingToken) {\n        this.isRefreshingToken = true;\n\n        // Reset here so that the following requests wait until the token\n        // comes back from the refreshToken call.\n        this.tokenSubject.next(null);\n\n        return this.refreshToken()\n          .pipe(\n            switchMap((tokensObj: Object) => {\n              if (tokensObj) {\n                this.nTokenService.updateTokens(tokensObj);\n                const newToken = tokensObj['accessToken'];\n                this.tokenSubject.next(newToken);\n                return next.handle(this.requestOptions(req));\n              }\n              return throwError(new Error('Can\\'t refresh the token'));\n            }),\n            catchError(err => this.onCatchError(err)),\n            finalize(() => this.isRefreshingToken = false)\n          );\n      } else {\n        return this.tokenSubject.pipe(\n          filter(token => token != null),\n          take(1),\n          switchMap(token => next.handle(this.requestOptions(req)))\n        );\n      }\n    } else {\n      return this.onCatchError(error);\n    }\n  }\n\n  refreshToken() {\n    const http = this.inj.get(HttpClient);\n    const appProperties = this.systemService.getVal('properties');\n    const refreshUrl = this.systemService.getAuthUrl() + appProperties.appName + '/refresh';\n    const body = {\n      'platformDetails': this.systemService.getPlatformDetails(this.systemService.checkDevice()),\n      'userKey': this.nSessionStorage.getValue('userObj')['userKey'],\n      'refreshToken': this.nSessionStorage.getValue('refreshToken')\n    };\n    body.platformDetails['uuid'] = this.nLocalStorageService.getValue('uuid');\n    return http.post(refreshUrl, body);\n  }\n\n\n  /**\n   * Request options.\n   * @param options\n   * @returns HttpRequest\n   */\n  private requestOptions(req?: HttpRequest<any>) {\n    let headers = req.headers;\n    if (req.headers == null) {\n      headers = new HttpHeaders();\n    }\n    req = req.clone({\n      url: this.getFullUrl(req.url),\n      headers: headers\n    });\n    const baseUrl = NSystemService.getInstance().getVal('baseUrl');\n    const isArt = (baseUrl !== '' && req.url.includes(baseUrl));\n    return isArt ? this.addDefaultHeaders(req) : req;\n  }\n\n\n  /**\n  * Default options.\n  * @param options\n  * @returns HttpHeadedrs\n  */\n  private addDefaultHeaders(req: any) {\n    /**\n     * TODO: Add all default Headers over here\n     */\n    if (!req.headers.has('Access-Control-Allow-Origin')) {\n      req.headers = req.headers.set('Access-Control-Allow-Origin', '*');\n    }\n\n    if (!req.headers.has('Content-Type')) {\n      req.headers = req.headers.set('Content-Type', 'application/json');\n    } else if (req.headers.has('Content-Type') && (req.headers.get('Content-Type') === 'no-content')) {\n      req.headers = req.headers.delete('Content-Type');\n    }\n\n    if (!req.headers.has('Accept')) {\n      req.headers = req.headers.set('Accept', 'application/json');\n    }\n\n    if (!req.headers.has('Authorization')) {\n      this.appProperties = this.systemService.getVal('properties');\n      if (this.appProperties && this.appProperties.appAuthenticationStrategy === 'basicAuth') {\n        let username, password;\n        if (this.appProperties.basicAuthUser && this.appProperties.basicAuthPassword) {\n          username = this.appProperties.basicAuthUser;\n          password = this.appProperties.basicAuthPassword;\n        } else {\n          username = \"bhive-art-proxyuser\";\n          password = \"password\";\n          console.warn(\"Authentication strategy: Basic Auth. basicAuthUser and basicAuthPassword are not configured in environment. Setting default values.\");\n        }\n        req.headers = req.headers.set('Authorization', 'Basic ' + btoa(username + \":\" + password));\n      } else if (this.appProperties && (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\n        this.appProperties.appAuthenticationStrategy === 'localAuth')) {\n        if (this.nSessionStorage.getValue('accessToken')) {\n          req.headers = req.headers.set('Authorization', 'Bearer ' + this.nSessionStorage.getValue('accessToken'));\n        }\n      }\n    }\n    return req;\n  }\n\n  /**\n   * Build API url.\n   * @param url\n   * @returns string\n   */\n  private getFullUrl(url: string): string {\n    // return full URL to API here\n    return url;\n  }\n\n  /**\n   * Request interceptor.\n   */\n  private requestInterceptor(): void {\n    this.nHTTPLoader.isHTTPRequestInProgress(true);\n  }\n\n  /**\n   * Response interceptor.\n   */\n  private responseInterceptor(): void {\n    this.nHTTPLoader.isHTTPRequestInProgress(false);\n  }\n\n  /**\n    * Error handler.\n    * @param error\n    * @param caught\n    * @returns ErrorObservable\n    */\n  private onCatch(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    if (error instanceof HttpErrorResponse) {\n      if ((<HttpErrorResponse>error).status === 403 && (<HttpErrorResponse>error).error.message === 'jwt expired') {\n        return this.updateToken(error, req, next);\n      } else {\n        return this.onSubscribeError(error);\n      }\n    } else {\n      return this.onSubscribeError(error);\n    }\n  }\n\n  /**\n   * onSubscribeError\n   * @param error\n   */\n  private onSubscribeError(err: HttpErrorResponse): Observable<any> {\n    this.nHTTPLoader.alertError(err);\n    return this.onCatchError(err);\n  }\n  /**\n   * onFinally\n   */\n  private onFinally(): void {\n    this.responseInterceptor();\n  }\n\n  private onCatchError(error: HttpErrorResponse): Observable<any> {\n    return throwError(error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n// import { MatSnackBar } from '@angular/material';\nimport { Subject, Observable } from 'rxjs';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\n\n\n@Injectable()\nexport class NSnackbarService {\n  snackBarListner;\n  private snackService = new Subject<any>();\n  constructor(private nPubSubService: NPubSubService) {\n    if (NSystemService.getInstance().getVal('useDefaultExceptionUI')) {\n      this.snackBarListner = this.nPubSubService.$sub('openSnackBar', (msg) => {\n        this.openSnackBar(msg);\n      })\n    }\n  }\n\n  get() {\n    return this.snackService.asObservable();\n  }\n\n\n\n  add(data: {\n    msg: string, timeout?: number, background?: string, color?: string, customClass?: any,\n    action?: { text: string, onClick?: Function, color?: string }, onAdd?: Function, onRemove?: Function\n  }) {\n    this.snackService.next({\n      action: 'add',\n      data: data\n    });\n  }\n\n  remove(id: string) {\n    this.snackService.next({ action: 'remove', id: id });\n  }\n\n  clear() {\n    this.snackService.next({ action: 'clear' });\n  }\n\n  openSnackBar(message, timeout?, ) {\n    this.add({\n      msg: message,\n      timeout: timeout || 5000,\n      action: {\n        text: 'Close',\n        onClick: (snack) => {\n        },\n      },\n      onAdd: (snack) => {\n      },\n      onRemove: (snack) => {\n      }\n    });\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'n-snack',\n  template: `\n     <div class=\"snack\" [ngStyle]=\"{background: background ? background : '#323232' , color: color ? color : '#fff'}\" [ngClass]=\" ['snackbar-layout', 'customClass' ]\">\n          <ng-content></ng-content>\n       </div> \n  `,\n  styleUrls: ['../snackbar/snackbar.style.css']\n})\nexport class SnackComponent {\n  @Input() background;\n  @Input() color;\n  @Input() customClass;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NSnackbarService } from '../../n-snackbar.service';\n\n@Component({\n  selector: 'n-snackbar',\n  template: `\n      <div class=\"snackbars\" [ngClass]=\"position || 'bottom-center'\">\n          <n-snack   *ngFor=\"let snackbar of snacks\" [background]=\"snackbar.background || background\"\n                        [customClass]=\"snackbar.customClass || customClass\"\n                        [color]=\"snackbar.color || color || calcTextColor(snackbar.background || background)\">\n              <div class=\"container\">\n              <div class=\"snack-text child\" >\n                  {{snackbar.msg}}\n              </div>\n              <div *ngIf=\"snackbar.action.text\" class=\"snack-action\" (click)=\"snackbar.action.onClick()\"\n                   [ngStyle]=\"{color: snackbar.action.color || accent}\">\n                  {{snackbar.action.text}}\n              </div>\n              </div>\n          </n-snack>\n      </div>\n  `,\n  styleUrls: ['./snackbar.style.css']\n})\nexport class SnackbarComponent {\n  @Input() position: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n  @Input() max: number = 1;\n  @Input() background: string;\n  @Input() accent: string;\n  @Input() color: string;\n  @Input() customClass: any;\n  @Input() timeout: number;\n\n  @Output() public onAdd: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public onRemove: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public onClear: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  snacks: Array<{\n    id: string, msg: string, timeout?: number, color?: string, background?: string, customClass?: any, action?: {\n      text: string, onClick?: Function, color?: string\n    }, onAdd?: Function, onRemove?: Function, timeoutObj?: any\n  }> = [];\n\n  constructor(private snackbarService: NSnackbarService) {\n    this.snackbarService.get()\n      .subscribe(snack => {\n        if (snack.action === 'add') {\n          this.add(snack.data);\n        } else if (snack.action === 'remove') {\n          this.remove(snack.id);\n        } else if (snack.action === 'clear') {\n          this.clear();\n        }\n      });\n  }\n\n  add(snack) {\n    let timeout;\n    const id = this.uuid();\n\n    if (this.max && this.max > 0 && this.snacks.length === this.max) {\n      this.remove(this.snacks[0].id);\n    }\n\n    if (snack.timeout || this.timeout) {\n      timeout = setTimeout(() => {\n        this.remove(id);\n      }, snack.timeout || this.timeout)\n    }\n\n    const data = Object.assign({ id: id, timeoutObj: timeout }, snack);\n\n    if (snack.action) {\n      const that = this;\n      const fcn = snack.action.onClick || new Function();\n      snack.action.onClick = () => {\n        fcn(data);\n        that.remove(id);\n      };\n    }\n\n    if (snack.onAdd) {\n      snack.onAdd(data);\n    }\n\n    if (this.onAdd) {\n      this.onAdd.emit(data);\n    }\n\n    this.snacks.push(data);\n  }\n\n  remove(id) {\n    const snack = this.snacks.find(obj => obj.id === id);\n\n    if (snack) {\n      if (snack.onRemove) {\n        snack.onRemove(snack);\n      }\n\n      if (this.onRemove) {\n        this.onRemove.emit(snack);\n      }\n\n      if (snack.timeoutObj) {\n        clearTimeout(snack.timeoutObj);\n      }\n    }\n\n    this.snacks = this.snacks.filter(obj => obj.id !== id);\n  }\n\n  clear() {\n    // this.snacks.forEach(snack => {\n    //   this.remove(snack.id);\n    // });\n\n    this.snacks = [];\n\n    if (this.onClear) {\n      this.onClear.emit(true);\n    }\n  }\n\n  uuid() {\n    // tslint:disable:no-bitwise\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n    // tslint:enable:no-bitwise\n  }\n\n  calcTextColor(background) {\n    if (!background) {\n      return null;\n    }\n\n    function hexToRgb(hex) {\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n      hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n        return r + r + g + g + b + b;\n      });\n\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      } : null;\n    }\n\n    const rgb = hexToRgb(background);\n    if (!rgb) {\n      return null;\n    }\n\n    const color = [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n\n    for (let i = 0; i < color.length; ++i) {\n      if (color[i] <= 0.03928) {\n        color[i] = color[i] / 12.92;\n      } else {\n        color[i] = Math.pow((color[i] + 0.055) / 1.055, 2.4);\n      }\n    }\n\n    const l = 0.2126 * color[0] + 0.7152 * color[1] + 0.0722 * color[2];\n\n    if (l > 0.179) {\n      return '#000';\n    } else {\n      return '#fff';\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NAuthGuardService } from './n-authGaurd.service';\nimport { NDataModelService } from './n-dataModel.service';\nimport { NHttpService } from './n-HTTP.service';\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\nimport { NLocalStorageService } from './n-localStorage.service';\nimport { NLoginService } from './n-login.service';\nimport { NLogoutService } from './n-logout.service';\nimport { NNotificationService } from './n-notification.service';\nimport { NSnackbarService } from './n-snackbar.service';\nimport { NSystemService } from './n-system.service';\nimport { NPubSubService } from './n-pubSub.service';\nimport { NSessionStorageService } from './n-sessionStorage.service'\nimport { NTokenService } from './n-token.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InstanceFactory, NgForage, NgForageConfig } from 'ngforage';\n\nimport { SnackComponent } from './snackbar/snack/snack.component';\nimport { SnackbarComponent } from './snackbar/snackbar/snackbar.component';\n\n\nexport function startupServiceFactory(startupService: NLocalStorageService) {\n  const res = () => {\n    // console.log('module before initstorage call');\n    return startupService.initStorage();\n\n  }\n  return res;\n}\n\nexport function NgForageFactory(ngForageConfig: NgForageConfig) {\n\t// @ts-ignore\n\treturn new NgForage({}, new InstanceFactory(ngForageConfig));\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NHttpService,\n      multi: true\n    },\n    {\n      // Provider for APP_INITIALIZER\n      provide: APP_INITIALIZER,\n      useFactory: startupServiceFactory,\n      deps: [NLocalStorageService],\n      multi: true\n\t},\n\t{\n\t\tprovide: NgForage,\n\t\tuseFactory: NgForageFactory,\n\t\tdeps: [\n\t\t\tNgForageConfig\n\t\t]\n\t},\n    NAuthGuardService,\n    NDataModelService,\n    NHttpService,\n    NHTTPLoaderService,\n    NLocalStorageService,\n    NLoginService,\n    NLogoutService,\n    NNotificationService,\n    NSnackbarService,\n    NPubSubService,\n    NSessionStorageService,\n    NTokenService\n  ],\n  declarations: [\n    SnackComponent,\n    SnackbarComponent\n  ],\n  exports: [\n    SnackComponent,\n    SnackbarComponent\n  ]\n\n})\nexport class NeutrinosSeedServicesModule {\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}