import { Injectable } from '@angular/core';
export class NSessionStorageService {
    constructor() {
        NSessionStorageService.sessionStorageCache = sessionStorage;
    }
    getSessionStorage() {
        return NSessionStorageService.sessionStorageCache;
    }
    setValue(key, value) {
        NSessionStorageService.sessionStorageCache[key] = value;
        sessionStorage.setItem(key, value);
    }
    getValue(key) {
        if (!NSessionStorageService.sessionStorageCache[key]) {
            return null;
        }
        try {
            const obj = NSessionStorageService.sessionStorageCache[key];
            return JSON.parse(obj);
        }
        catch (error) {
            return NSessionStorageService.sessionStorageCache[key];
        }
    }
    remove(key) {
        if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {
            delete NSessionStorageService.sessionStorageCache[key];
            sessionStorage.removeItem(key);
        }
    }
    clearSessionStorage() {
        NSessionStorageService.sessionStorageCache = {};
        sessionStorage.clear();
    }
}
NSessionStorageService.sessionStorageCache = {};
NSessionStorageService.decorators = [
    { type: Injectable }
];
NSessionStorageService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zZXNzaW9uU3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL25ldXRyaW5vcy9Eb2N1bWVudHMvbmV1dHJpbm9zLW1vZHVsZXMtYW5ndWxhci9uZXV0cmlub3Mtc2VlZC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvbi1zZXNzaW9uU3RvcmFnZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLHNCQUFzQjtJQUVqQztRQUNFLHNCQUFzQixDQUFDLG1CQUFtQixHQUFHLGNBQWMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsT0FBTyxzQkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQztJQUNwRCxDQUFDO0lBRUQsUUFBUSxDQUFDLEdBQUcsRUFBRSxLQUFLO1FBQ2pCLHNCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUN4RCxjQUFjLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsUUFBUSxDQUFDLEdBQUc7UUFDVixJQUFJLENBQUMsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDcEQsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUk7WUFDRixNQUFNLEdBQUcsR0FBRyxzQkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM1RCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDeEI7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLE9BQU8sc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDeEQ7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQUc7UUFDUixJQUFJLHNCQUFzQixDQUFDLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNsRSxPQUFPLHNCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3ZELGNBQWMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDaEM7SUFDSCxDQUFDO0lBRUQsbUJBQW1CO1FBQ2pCLHNCQUFzQixDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztRQUNoRCxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQzs7QUFwQ00sMENBQW1CLEdBQVEsRUFBRSxDQUFDOztZQUZ0QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTlNlc3Npb25TdG9yYWdlU2VydmljZSB7XG4gIHN0YXRpYyBzZXNzaW9uU3RvcmFnZUNhY2hlOiBhbnkgPSB7fTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlID0gc2Vzc2lvblN0b3JhZ2U7XG4gIH1cblxuICBnZXRTZXNzaW9uU3RvcmFnZSgpIHtcbiAgICByZXR1cm4gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlO1xuICB9XG5cbiAgc2V0VmFsdWUoa2V5LCB2YWx1ZSkge1xuICAgIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldID0gdmFsdWU7XG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcbiAgfVxuXG4gIGdldFZhbHVlKGtleSkge1xuICAgIGlmICghTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV0pIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgY29uc3Qgb2JqID0gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV07XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShvYmopO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmVtb3ZlKGtleSkge1xuICAgIGlmIChOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgZGVsZXRlIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldO1xuICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgIH1cbiAgfVxuXG4gIGNsZWFyU2Vzc2lvblN0b3JhZ2UoKSB7XG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlID0ge307XG4gICAgc2Vzc2lvblN0b3JhZ2UuY2xlYXIoKTtcbiAgfVxuXG59XG4iXX0=