import { NgForage, NgForageCache, NgForageConfig } from 'ngforage';
import * as ɵngcc0 from '@angular/core';
export declare class NLocalStorageService {
    private ngfConfig?;
    private readonly ngf?;
    private readonly ngfCache?;
    storageCache: any;
    private _deviceUUID;
    private nativeStorageI;
    constructor(ngfConfig?: NgForageConfig, ngf?: NgForage, ngfCache?: NgForageCache);
    initStorage(): Promise<unknown>;
    getStorage(): any;
    setValue(key: any, value: any): Promise<any>;
    getValue(key: any): any | Promise<any>;
    remove(key: any): void;
    clear(): void;
    private pluginCheck;
    private getItemNs;
    private setItemNs;
    private removeItemNs;
    private clearNs;
    private initNgForage;
    private promiseReflect;
    clearLocalStorage(): void;
    /**
     * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService
    */
    checkDeviceId(): any;
    get deviceUUID(): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NLocalStorageService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NLocalStorageService>;
}

//# sourceMappingURL=n-localStorage.service.d.ts.map