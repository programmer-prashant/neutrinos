import { Observable, Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class NPubSubService {
    private events;
    constructor();
    $sub(event: string): Observable<any>;
    $sub(event: string, callback: (value: any) => void): Subscription;
    $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;
    $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;
    $pub(event: string, eventObject?: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NPubSubService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NPubSubService>;
}
export interface IPubSubService {
    $pub(event: string, eventObject?: any): any;
    $sub(event: string): Observable<any>;
    $sub(event: string, callback: (value: any) => void): Subscription;
    $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;
    $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;
}

//# sourceMappingURL=n-pubSub.service.d.ts.map