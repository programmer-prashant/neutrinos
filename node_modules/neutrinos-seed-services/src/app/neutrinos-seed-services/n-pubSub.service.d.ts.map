{"version":3,"file":"n-pubSub.service.d.ts","sources":["n-pubSub.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Observable, Subscription } from 'rxjs';\nexport declare class NPubSubService {\n    private events;\n    constructor();\n    $sub(event: string): Observable<any>;\n    $sub(event: string, callback: (value: any) => void): Subscription;\n    $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n    $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n    $pub(event: string, eventObject?: any): void;\n}\nexport interface IPubSubService {\n    $pub(event: string, eventObject?: any): any;\n    $sub(event: string): Observable<any>;\n    $sub(event: string, callback: (value: any) => void): Subscription;\n    $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\n    $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\n}\n"]}