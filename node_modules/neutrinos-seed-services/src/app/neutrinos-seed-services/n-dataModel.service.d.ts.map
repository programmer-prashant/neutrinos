{"version":3,"file":"n-dataModel.service.d.ts","sources":["n-dataModel.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nexport declare class NDataModelService {\n    private http;\n    private systemService;\n    private dmUrl;\n    private invalidDataModelName;\n    private invalidDataModelId;\n    private invalidDataModelObj;\n    private dmDs;\n    constructor(http: HttpClient);\n    /**\n     *\n     * @param dataModelName\n     * @param filter The filter query parameter allows to specify conditions on the documents to return.\n     * The filter qparam value is any mongodb queryâ€¦ Defaults to {}\n     * @param keys Projections to be applited on mongo db.\n     * @param sort sort to be applied on the query results. Defaults to {}\n     * @param pagenumber Page number for paginated queries. Defaults to 1\n     * @param pagesize Size of each page to be returned. Defaults to 100.\n     */\n    get(dataModelName: any, filter?: any, keys?: any, sort?: any, pagenumber?: any, pagesize?: any): Observable<any>;\n    /**\n     *\n     * @param dataModelName Data model name of the app\n     * @param dataModelObj Data Model object which is to be inserted\n     */\n    put(dataModelName: any, dataModelObj: any): Observable<any>;\n    /**\n     *\n     * @param dataModelName\n     * @param filter\n     */\n    delete(dataModelName: any, filter: any): Observable<any>;\n    /**\n     *\n     * @param dataModelName Data model name which is to be updated\n     * @param dataModelObj New data model object\n     */\n    update(dataModelName: any, updateObject: any): Observable<any>;\n    /**\n     *\n     * @param dataModelName Data model name which is to be updated\n     * @param dataModelId Data model id which is to be updated\n     */\n    getById(dataModelName: any, dataModelId: any): Observable<any>;\n    /**\n     *\n     * @param dataModelName Data model name which is to be deleted\n     * @param dataModelId Data model id which is to be deleted\n     */\n    deleteById(dataModelName: any, dataModelId: any): Observable<Object>;\n    /**\n     *\n     * @param dataModelName Data model name which is to be update\n     * @param dataModelId Data model id which is to be updated\n     * @param dataModelObj Data Model object which is to be inserted\n     */\n    updateById(dataModelName: any, dataModelId: any, dataModelObj: any): Observable<Object>;\n    private toQueryString;\n    private checkIfValid;\n    private getDataSourceURL;\n}\n"]}