import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
export declare class NDataModelService {
    private http;
    private systemService;
    private dmUrl;
    private invalidDataModelName;
    private invalidDataModelId;
    private invalidDataModelObj;
    private dmDs;
    constructor(http: HttpClient);
    /**
     *
     * @param dataModelName
     * @param filter The filter query parameter allows to specify conditions on the documents to return.
     * The filter qparam value is any mongodb queryâ€¦ Defaults to {}
     * @param keys Projections to be applited on mongo db.
     * @param sort sort to be applied on the query results. Defaults to {}
     * @param pagenumber Page number for paginated queries. Defaults to 1
     * @param pagesize Size of each page to be returned. Defaults to 100.
     */
    get(dataModelName: any, filter?: any, keys?: any, sort?: any, pagenumber?: any, pagesize?: any): Observable<any>;
    /**
     *
     * @param dataModelName Data model name of the app
     * @param dataModelObj Data Model object which is to be inserted
     */
    put(dataModelName: any, dataModelObj: any): Observable<any>;
    /**
     *
     * @param dataModelName
     * @param filter
     */
    delete(dataModelName: any, filter: any): Observable<any>;
    /**
     *
     * @param dataModelName Data model name which is to be updated
     * @param dataModelObj New data model object
     */
    update(dataModelName: any, updateObject: any): Observable<any>;
    /**
     *
     * @param dataModelName Data model name which is to be updated
     * @param dataModelId Data model id which is to be updated
     */
    getById(dataModelName: any, dataModelId: any): Observable<any>;
    /**
     *
     * @param dataModelName Data model name which is to be deleted
     * @param dataModelId Data model id which is to be deleted
     */
    deleteById(dataModelName: any, dataModelId: any): Observable<Object>;
    /**
     *
     * @param dataModelName Data model name which is to be update
     * @param dataModelId Data model id which is to be updated
     * @param dataModelObj Data Model object which is to be inserted
     */
    updateById(dataModelName: any, dataModelId: any, dataModelObj: any): Observable<Object>;
    private toQueryString;
    private checkIfValid;
    private getDataSourceURL;
}
