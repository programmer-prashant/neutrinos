{"version":3,"file":"neutrinos-oauth-client.js","sources":["../../../projects/neutrinos-oauth-client/src/lib/services/util.service.ts","../../../projects/neutrinos-oauth-client/src/lib/neutrinos-oauth-client.service.ts","../../../projects/neutrinos-oauth-client/src/lib/auth-guard.service.ts","../../../projects/neutrinos-oauth-client/src/lib/neutrinos-oauth.component.ts","../../../projects/neutrinos-oauth-client/src/lib/cookie-interceptor.service.ts","../../../projects/neutrinos-oauth-client/src/lib/neutrinos-oauth-client.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n  private platformType: string;\n  private environment;\n\n  constructor() {\n    this.platformType = this.checkPlatformType();\n    this.getEnvironment();\n  }\n\n  /**\n   * Returns 'mobile' or 'browser' based on the platform\n   */\n  public getPlatformType(): string {\n    return this.platformType;\n  }\n\n\n  /**\n   * Returns env from neutrinos seed app\n   */\n  private getEnvironment() {\n    if (window['neutrinos'] && window['neutrinos']['environments'] && window['neutrinos']['environments']['properties']) {\n      // Break the refernce\n      this.environment = JSON.parse(JSON.stringify(window['neutrinos']['environments']['properties']));\n      // Append the url with / if ssdUrl does not end with /\n      if (this.environment['ssdURL']) {\n        this.environment['ssdURL'] = this.environment['ssdURL'].endsWith('/') ? this.environment['ssdURL'] :\n          (this.environment['ssdURL'] + '/');\n      }\n      return;\n    }\n    /*For dev env only */\n    this.environment = {\n      ssdURL: 'http://localhost:8081/api/',\n      useDefaultExceptionUI: true,\n      isIDSEnabled: 'true',\n      webAppMountpoint: '',\n      production: true\n    };\n\n  }\n\n  /**\n   * Returns 'mobile' or 'browser' based on the platform\n   */\n  private checkPlatformType(): string {\n    // tslint:disable-next-line: no-string-literal\n    if (window['device'] && (window['device']['platform'] !== 'browser' || window['device']['platform'] !== 'Browser')) {\n      return 'mobile';\n      // tslint:disable-next-line: no-string-literal\n    } else if (window['device'] && (window['device']['platform'] === 'browser' || window['device']['platform'] === 'Browser')) {\n      return 'cordova_browser';\n    } else {\n      return 'browser';\n    }\n  }\n\n  /*URL helper methods */\n  public getBaseLoginPath() {\n    return `${this.environment.ssdURL}login`;\n  }\n\n  public getWebLoginUrl(redirectTo) {\n    redirectTo = this.calcRedirectUrl(redirectTo);\n    return `${this.getBaseLoginPath()}?redirectTo=${redirectTo}`;\n  }\n\n  public getMobileLoginUrl() {\n    return `${this.getBaseLoginPath()}?isMobile=true`;\n  }\n\n  public getWebLogoutUrl(redirectTo) {\n    redirectTo = this.calcRedirectUrl(redirectTo);\n    return `${this.environment.ssdURL}logout?redirectTo=${redirectTo}`;\n  }\n\n  public getMobileLogoutUrl() {\n    return `${this.environment.ssdURL}logout?isMobile=true`;\n  }\n\n  public getUserInfoUrl() {\n    return `${this.environment.ssdURL}user/info`;\n  }\n\n  getSSDBasePath() {\n    return `${this.environment.ssdURL}`;\n  }\n\n  /**\n   *  Returns a absoulte url for the urlPath\n   * @param urlPath - path relative to the current host\n   */\n  private calcRedirectUrl(urlPath) {\n    if (urlPath) {\n      let host: any = new URL(window.location.href).origin; // http://xyz.com\n      if (!isDevMode()) {\n        // Append `webAppMountpoint` to host\n        host = (this.environment.webAppMountpoint !== '' && this.environment.webAppMountpoint !== '/')\n          ? new URL(this.environment.webAppMountpoint, host).href : host;\n        // Get user redirect path with `webAppMountpoint`\n        const mountPointWithRedirect = new URL(urlPath, host).pathname;\n        return host + mountPointWithRedirect;\n      } else {\n        return new URL(urlPath, host);\n      }\n    } else {\n      return window.location.href;\n    }\n\n  }\n\n  /**\n   *\n   * @param property - environment property key\n   */\n  getEnvValue(property): any {\n    return this.environment[property];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { UtilService } from './services/util.service';\n\ndeclare const cordova;\ndeclare const cookieMaster;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeutrinosOAuthClientService {\n\n  private cookieName = 'connect.sid';\n  private currentUserInfo;\n\n  private authStateSubject = new Subject();\n\n  constructor(private util: UtilService, private http: HttpClient) {\n  }\n\n  /**\n   * Get user info and tokens of the current logged in user\n   */\n  get userInfo() {\n    return this.currentUserInfo;\n  }\n\n  get isLoggedIn(): boolean {\n    return this.currentUserInfo ? true : false;\n  }\n\n  private setUserInfo(userInfo) {\n    this.currentUserInfo = userInfo;\n  }\n\n  /**\n   * Performs authentication based on configuration and returns user info for mobile env and\n   * for web app user info is stored in memory. Call userInfo getter method to retrieve userinfo\n   * @param redirectBackUrl - url to redirect back to when authentication is done. Valid only for Web.\n   * For mobile use the Promise returned to perform post authentication actions\n   */\n  public login(redirectBackUrl?: string) {\n    return new Promise((resolve, reject) => {\n      if (this.util.getEnvValue('isIDSEnabled') === 'false') {\n        return reject({ message: 'IDS is not enabled in environments' });\n      }\n      if (this.util.getPlatformType() === 'browser') {\n        this.loginWithRedirect(redirectBackUrl);\n        return;\n      }\n      this.loginWithInAppBrowser()\n        .then(tokenset => {\n          return resolve(tokenset);\n        })\n        .catch(authError => {\n          return reject(authError);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param loginUrl - Login url where SSD is hosted\n   */\n  private loginWithInAppBrowser() {\n    return new Promise(async (resolve, reject) => {\n      const scriptURLS = ['/interaction/', '/auth-provider/return']; // execute JS only for this urls\n      const script = await this.getScript(); // Get JS which stores guid and device details in local storage of webview\n      const inAppBrowserRef = cordova.InAppBrowser.open(this.util.getMobileLoginUrl(), '_blank');\n      const executeScriptCB = (event) => {\n        if (event && event.hasOwnProperty('type') && event.hasOwnProperty('url') && event.type === 'loadstop'\n          && this.isURLMatch(event.url, scriptURLS)) {\n          inAppBrowserRef.executeScript({ code: script }, () => { });\n        }\n      };\n      inAppBrowserRef.addEventListener('loadstop', executeScriptCB);\n      const exitCB = () => {\n        return reject({ code: 'auth-cancel', message: 'Authentication cancelled by user' });\n      };\n      inAppBrowserRef.addEventListener('message', (message) => {\n        if (message && message.data && message.data.auth && message.data.auth === 'success') {\n          inAppBrowserRef.removeEventListener('exit', exitCB);\n          inAppBrowserRef.close();\n          this.getUserInfo().then(tokenset => {\n            return resolve(tokenset);\n          }).catch(authErr => {\n            return reject(authErr);\n          });\n        }\n      });\n      // settle the promise if user closed the in app browser manually\n      inAppBrowserRef.addEventListener('exit', exitCB);\n    });\n  }\n\n  private isURLMatch(url, compareWith: Array<string>) {\n    return compareWith.some(u => url.includes(u));\n  }\n\n\n  /**\n   * Returns JS as a string to be executed in inAppBrowser which sets guid and device details in localStorage\n   */\n  private async getScript() {\n    const deviceDetails = JSON.stringify(window['device']) || {};\n    const guid = await this.getuniqueDeviceID();\n    const guidScript = guid ? `localStorage.setItem('guid', '${guid}')` : '';\n    const script = `${guidScript}\n          localStorage.setItem('additionalInfo', '${deviceDetails}')\n          window.isScriptExecuted = true;`;\n    return script;\n  }\n\n  private getuniqueDeviceID() {\n    return new Promise((resolve, reject) => {\n      window['plugins'].uniqueDeviceID.get((guid) => {\n        return resolve(guid);\n      }, error => {\n        return resolve(null);\n      });\n    });\n  }\n\n\n  public getUserInfo(): Promise<{}> {\n    return new Promise((resolve, reject) => {\n      let headers = new HttpHeaders();\n      /*Edge case: Userinfo is retreived from cache when login page is opened and user cancels the login attempt  */\n      headers = headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\n      headers = headers.set('Pragma', 'no-cache');\n      headers = headers.set('Expires', '0');\n      this.http.get(this.util.getUserInfoUrl(), { headers }).subscribe(tokenset => {\n        this.setUserInfo(tokenset);\n        return resolve(tokenset);\n      }, error => {\n        this.destroyClientSession();\n        return reject(error);\n      });\n    });\n  }\n\n  /*If SSD throws 401 during any http request due to refresh token expiry, cookie expiry or access revoke nullify the userinfo in memory\n  and emit authState event  */\n  public removeUserInfo(errorResponse) {\n    this.destroyClientSession();\n    this.authStateSubject.next(errorResponse);\n  }\n\n  /**\n   * Returns event when Auth state has changed due to session expiry, access revoke or cookie expiry.\n   */\n  public authState(): Observable<any> {\n    return this.authStateSubject.asObservable();\n  }\n\n  private loginWithRedirect(redirectBackUrl): void {\n    window.location.href = this.util.getWebLoginUrl(redirectBackUrl);\n  }\n\n  /**\n   * Restores the connect.sid cookie from session storage during app bootstrap if device is mobile\n   */\n  public async restoreCookies() {\n    return await this.getCookie(this.cookieName, this.util.getSSDBasePath())\n    .then(async (connectSid) => {\n      return await this.setCookie(this.util.getSSDBasePath(), this.cookieName, connectSid);\n    }).catch((error) => {\n      return false;\n    });\n  }\n\n  /**\n   *\n   * @param url - site where the cookie is stored\n   * @param cookieName - name of the cookie to restore\n   * @param cookieValue - value of the cookie to restore\n   */\n  private setCookie(url: string, cookieName: string, cookieValue: string) {\n    return new Promise((resolve, reject) => {\n      cookieMaster.setCookieValue(url, cookieName, cookieValue, () => {\n        return resolve(true);\n      }, (error) => {\n        return reject(false);\n      });\n    });\n  }\n\n  /**\n   *\n   * @param cookieName          name of the cookie to retrieve\n   * @param fullCookieString    String containing all the cookies from an url\n   */\n  private readCookieValueFromCookieString(cookieName, fullCookieString) {\n    let cookieNameWithEqualsSign = cookieName + \"=\";\n    let cookieArray = fullCookieString.split(';');\n    for(let i=0;i < cookieArray.length;i++) {\n        let cookie = cookieArray[i];\n        // Remove unnecessary leading spaces from cookie\n        while (cookie.charAt(0)==' ') {\n          cookie = cookie.substring(1,cookie.length);\n        }\n        // Retrieve and return cookie value\n        if (cookie.indexOf(cookieNameWithEqualsSign) == 0) {\n          return cookie.substring(cookieNameWithEqualsSign.length,cookie.length);\n        }\n    }\n    return null;\n  }\n\n  /**\n   *\n   * @param  cookieName - name of the cookie to retrieve\n   * @param   url - site where the cookie is stored\n   */\n  private getCookie(cookieName: string, url: string): any {\n    return new Promise((resolve, reject) => {\n      window['cordova'].plugins.CookiesPlugin.getCookie(url, (cookies) => {\n        let cookieValue = this.readCookieValueFromCookieString(cookieName,cookies);\n        if(cookieValue) {\n          return resolve(cookieValue);\n        } else {\n          return reject(\"cookie value null\");\n        }\n      }, (error) => {\n        return reject(error);\n      });\n    });\n  }\n\n  /**\n   * Logout the current user, destroys session between client and server.\n   * @param redirectBackUrl - URL where the user is navigated post logout. Valid only for Web.\n   * For mobile use the Promise returned to perform post authentication actions\n   */\n  public logout(redirectBackUrl?: string): Promise<{}> {\n    const logoutUrl = (this.util.getPlatformType() === 'browser') ? this.util.getWebLogoutUrl(redirectBackUrl)\n      : this.util.getMobileLogoutUrl();\n    return new Promise((resolve, reject) => {\n      this.http.get(logoutUrl).subscribe(idsLogoutInfo => {\n        this.destroyIDSSession(idsLogoutInfo)\n          .then(() => {\n            return resolve();\n          })\n          .catch(logoutErr => {\n            return reject(logoutErr);\n          });\n      }, logoutError => {\n        return reject(logoutError);\n      });\n    });\n  }\n\n  private destroyIDSSession(idsInfo) {\n    return new Promise((resolve, reject) => {\n      if (idsInfo['sessionExists'] === false) {\n        // No session present with SSD due to cookie expiry\n        this.destroyClientSession();\n        this.authStateSubject.next({ code: 'NO_SESSION', message: 'User session has already expired' });\n        return resolve();\n      }\n      if (this.util.getPlatformType() === 'browser') {\n        window.location.href = idsInfo['idsURL'];\n      } else {\n        this.logoutWithInappBrowser(idsInfo['idsURL'])\n          .then(() => {\n            return resolve();\n          })\n          .catch(sessionError => {\n            return reject(sessionError);\n          });\n      }\n    });\n  }\n\n  /**\n   *\n   * @param idsLogoutUrl - IDS logout url\n   * Opens InApp browser and destroys the session\n   */\n  private logoutWithInappBrowser(idsLogoutUrl: string) {\n    return new Promise((resolve, reject) => {\n      const exitCB = () => {\n        return reject({ code: 'auth-cancel', message: 'Authentication cancelled by user' });\n      };\n      const inAppBrowserRef = cordova.InAppBrowser.open(idsLogoutUrl, '_blank');\n      inAppBrowserRef.addEventListener('message', (message) => {\n        // Remove exit listener if script closed the in app browser\n        if (message && message.data && message.data.auth && message.data.auth === 'success') {\n          inAppBrowserRef.removeEventListener('exit', exitCB);\n          inAppBrowserRef.close();\n          this.destroyClientSession();\n          return resolve();\n        }\n      });\n      // settle the promise if user closed the in app browser manually\n      inAppBrowserRef.addEventListener('exit', exitCB);\n    });\n  }\n\n  /*Remove persisted cookies in local storage and nullify user info */\n  private destroyClientSession() {\n    this.setUserInfo(null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, RouterStateSnapshot, Router, Route, ActivatedRouteSnapshot } from '@angular/router';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeutrinosAuthGuardService {\n\n  private currUrl;\n  \n  constructor(private _neutrinosOAuthClientService: NeutrinosOAuthClientService, private _router: Router, private _arouter: ActivatedRoute) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>   {\n    \n    return new Promise ((resolve, reject) => {\n      this.currUrl = state.url;\n      if(this._neutrinosOAuthClientService.isLoggedIn) {\n        return resolve(true);\n      } else {\n        this._neutrinosOAuthClientService.login().then(tokenSet => {\n          this._router.navigate([this.currUrl]);\n          return resolve(true);\n        })\n        .catch(err => {\n          console.error(err);\n          if(err && err.code == 'auth-cancel') {\n            // Added setTimeout for reloading the current route\n            setTimeout(() => {\n              this._router.navigateByUrl(this.currUrl,{skipLocationChange: true}).then(() => {\n                return resolve(false);\n              });\n            }, 500);\n          } else {\n            return resolve(false);\n          }\n        })\n      }\n    })\n  } \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'lib-neutrinos-oauth',\n  template: `\n   NOTE: use this component only for testing. Not intended for production\n\n      <button (click)=\"login()\" >  Login </button>\n      <button (click)=\"token()\" > Get tokenset</button>\n      <button (click)=\"logout()\" > Logout </button>\n      <button (click)=\"userinfo()\" > In memory user info </button>\n      <button (click)=\"httpTest()\" > Http Interceptor test </button>\n      `,\n  styles: []\n})\nexport class NeutrinosOauthComponent implements OnInit {\n\n  constructor(public neutrinosOauthService: NeutrinosOAuthClientService, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.neutrinosOauthService.authState().subscribe(state => {\n      console.log(state);\n    });\n  }\n\n  login() {\n    const a = this.neutrinosOauthService.login('/i-am-loggedin').then(tokens => {\n      console.log('got tokens in component', tokens);\n    }).catch(e => {\n      console.error(e);\n    });\n    // console.log(a);\n  }\n\n  token() {\n    this.neutrinosOauthService.getUserInfo().then(t => {\n      console.log('t', t);\n    }).catch(console.log);\n  }\n\n  logout() {\n    this.neutrinosOauthService.logout()\n  }\n\n  userinfo() {\n    alert(JSON.stringify(this.neutrinosOauthService.userInfo))\n    console.log(this.neutrinosOauthService.userInfo);\n  }\n\n  httpTest() {\n    this.http.get('http://localhost:8081/api/ping').subscribe(res => {\n      console.log(res);\n    }, e => {\n      console.error(e);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { UtilService } from './services/util.service';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieInterceptorService {\n\n  constructor(private utilService: UtilService, private neutrinosOAuthClientService: NeutrinosOAuthClientService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    /* withCredentials adds cookies to the request for cross site (Only ssd urls).*/\n    const baseUrl = this.utilService.getSSDBasePath();\n    const isSSD = (baseUrl !== '' && request.url.includes(baseUrl));\n    if (isSSD && this.isCrossDomain(baseUrl)) {\n      request = request.clone({\n        withCredentials: true\n      });\n    }\n    return next.handle(request).pipe(map(event => {\n      return event;\n    }), catchError((errorResponse: HttpErrorResponse) => {\n      /*Intercept all requests and remove userinfo and cookies when status is 401 with code SESSION_EXPIRED, which means\n      * cookies have expired or access has been revoked by the OAuth providers hence IDS rejected.  */\n      if (errorResponse && errorResponse.hasOwnProperty('status') && errorResponse.status === 401 &&\n        errorResponse.error.hasOwnProperty('code')) {\n        this.neutrinosOAuthClientService.removeUserInfo(errorResponse.error);\n      }\n      return throwError(errorResponse);\n    }));\n  }\n\n  /**\n   * Returns true is the ssd url is running on a different domain than where UI is hosted.\n   * For mobile Returns false always since UI is already bundled with cordova\n   * If the user is not using IDS and is cross domain isIDSEnabled can be set to false to skip adding withCredentials\n   * @param ssdUrl - string\n   */\n  private isCrossDomain(ssdUrl): boolean {\n    try {\n      ssdUrl = new URL(ssdUrl);\n      return (this.utilService.getPlatformType() === 'browser' && (ssdUrl.host !== location.host)\n        && this.utilService.getEnvValue('isIDSEnabled') === 'true');\n    } catch (e) {\n      return false; // ssdUrl is not a valid URL hence return false;\n    }\n\n  }\n\n}\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { NeutrinosOauthComponent } from './neutrinos-oauth.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CookieInterceptorService } from './cookie-interceptor.service';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\nimport { UtilService } from './services/util.service';\n\nexport function getTokens(neutrinosOAuthService: NeutrinosOAuthClientService, utilService: UtilService) {\n  return () => {\n    /**\n     * For ios restore the cookies and get userInfo since iOS webview does not\n     * persisit the cookie between app launches\n     */\n    if (utilService.getEnvValue('isIDSEnabled') === 'true') {\n      if (window['device'] && window['device'].platform === 'iOS' ) {\n        return neutrinosOAuthService.restoreCookies().then((cookieExist) => {\n          console.log('cookieExist' + cookieExist);\n          cookieExist ? neutrinosOAuthService.getUserInfo()\n          .catch(userInfoErr => {\n            console.log(userInfoErr);\n          }) : null;\n        });\n      } else {\n        // Cannot get cookie for cross domain using JS. hence calling userinfo always\n        return neutrinosOAuthService.getUserInfo()\n        .catch(userInfoErr => {\n          console.log(userInfoErr);\n        });\n      }\n    }\n  };\n}\n\n// @dynamic (https://github.com/ng-packagr/ng-packagr/issues/641)\n@NgModule({\n  declarations: [NeutrinosOauthComponent],\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CookieInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getTokens,\n      deps: [NeutrinosOAuthClientService, UtilService],\n      multi: true\n    },\n  ]\n})\nexport class NeutrinosOAuthClientModule { }\n"]}