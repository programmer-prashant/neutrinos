import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';
import { UtilService } from './services/util.service';
import { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';
import * as ɵngcc0 from '@angular/core';
export declare class CookieInterceptorService {
    private utilService;
    private neutrinosOAuthClientService;
    constructor(utilService: UtilService, neutrinosOAuthClientService: NeutrinosOAuthClientService);
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    /**
     * Returns true is the ssd url is running on a different domain than where UI is hosted.
     * For mobile Returns false always since UI is already bundled with cordova
     * If the user is not using IDS and is cross domain isIDSEnabled can be set to false to skip adding withCredentials
     * @param ssdUrl - string
     */
    private isCrossDomain;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CookieInterceptorService, never>;
}

//# sourceMappingURL=cookie-interceptor.service.d.ts.map