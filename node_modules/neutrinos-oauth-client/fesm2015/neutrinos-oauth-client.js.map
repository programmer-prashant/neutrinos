{"version":3,"file":"neutrinos-oauth-client.js","sources":["../../../projects/neutrinos-oauth-client/src/lib/services/util.service.ts","../../../projects/neutrinos-oauth-client/src/lib/neutrinos-oauth-client.service.ts","../../../projects/neutrinos-oauth-client/src/lib/auth-guard.service.ts","../../../projects/neutrinos-oauth-client/src/lib/neutrinos-oauth.component.ts","../../../projects/neutrinos-oauth-client/src/lib/cookie-interceptor.service.ts","../../../projects/neutrinos-oauth-client/src/lib/neutrinos-oauth-client.module.ts"],"sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n  private platformType: string;\n  private environment;\n\n  constructor() {\n    this.platformType = this.checkPlatformType();\n    this.getEnvironment();\n  }\n\n  /**\n   * Returns 'mobile' or 'browser' based on the platform\n   */\n  public getPlatformType(): string {\n    return this.platformType;\n  }\n\n\n  /**\n   * Returns env from neutrinos seed app\n   */\n  private getEnvironment() {\n    if (window['neutrinos'] && window['neutrinos']['environments'] && window['neutrinos']['environments']['properties']) {\n      // Break the refernce\n      this.environment = JSON.parse(JSON.stringify(window['neutrinos']['environments']['properties']));\n      // Append the url with / if ssdUrl does not end with /\n      if (this.environment['ssdURL']) {\n        this.environment['ssdURL'] = this.environment['ssdURL'].endsWith('/') ? this.environment['ssdURL'] :\n          (this.environment['ssdURL'] + '/');\n      }\n      return;\n    }\n    /*For dev env only */\n    this.environment = {\n      ssdURL: 'http://localhost:8081/api/',\n      useDefaultExceptionUI: true,\n      isIDSEnabled: 'true',\n      webAppMountpoint: '',\n      production: true\n    };\n\n  }\n\n  /**\n   * Returns 'mobile' or 'browser' based on the platform\n   */\n  private checkPlatformType(): string {\n    // tslint:disable-next-line: no-string-literal\n    if (window['device'] && (window['device']['platform'] !== 'browser' || window['device']['platform'] !== 'Browser')) {\n      return 'mobile';\n      // tslint:disable-next-line: no-string-literal\n    } else if (window['device'] && (window['device']['platform'] === 'browser' || window['device']['platform'] === 'Browser')) {\n      return 'cordova_browser';\n    } else {\n      return 'browser';\n    }\n  }\n\n  /*URL helper methods */\n  public getBaseLoginPath() {\n    return `${this.environment.ssdURL}login`;\n  }\n\n  public getWebLoginUrl(redirectTo) {\n    redirectTo = this.calcRedirectUrl(redirectTo);\n    return `${this.getBaseLoginPath()}?redirectTo=${redirectTo}`;\n  }\n\n  public getMobileLoginUrl() {\n    return `${this.getBaseLoginPath()}?isMobile=true`;\n  }\n\n  public getWebLogoutUrl(redirectTo) {\n    redirectTo = this.calcRedirectUrl(redirectTo);\n    return `${this.environment.ssdURL}logout?redirectTo=${redirectTo}`;\n  }\n\n  public getMobileLogoutUrl() {\n    return `${this.environment.ssdURL}logout?isMobile=true`;\n  }\n\n  public getUserInfoUrl() {\n    return `${this.environment.ssdURL}user/info`;\n  }\n\n  getSSDBasePath() {\n    return `${this.environment.ssdURL}`;\n  }\n\n  /**\n   *  Returns a absoulte url for the urlPath\n   * @param urlPath - path relative to the current host\n   */\n  private calcRedirectUrl(urlPath) {\n    if (urlPath) {\n      let host: any = new URL(window.location.href).origin; // http://xyz.com\n      if (!isDevMode()) {\n        // Append `webAppMountpoint` to host\n        host = (this.environment.webAppMountpoint !== '' && this.environment.webAppMountpoint !== '/')\n          ? new URL(this.environment.webAppMountpoint, host).href : host;\n        // Get user redirect path with `webAppMountpoint`\n        const mountPointWithRedirect = new URL(urlPath, host).pathname;\n        return host + mountPointWithRedirect;\n      } else {\n        return new URL(urlPath, host);\n      }\n    } else {\n      return window.location.href;\n    }\n\n  }\n\n  /**\n   *\n   * @param property - environment property key\n   */\n  getEnvValue(property): any {\n    return this.environment[property];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { UtilService } from './services/util.service';\n\ndeclare const cordova;\ndeclare const cookieMaster;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeutrinosOAuthClientService {\n\n  private cookieName = 'connect.sid';\n  private currentUserInfo;\n\n  private authStateSubject = new Subject();\n\n  constructor(private util: UtilService, private http: HttpClient) {\n  }\n\n  /**\n   * Get user info and tokens of the current logged in user\n   */\n  get userInfo() {\n    return this.currentUserInfo;\n  }\n\n  get isLoggedIn(): boolean {\n    return this.currentUserInfo ? true : false;\n  }\n\n  private setUserInfo(userInfo) {\n    this.currentUserInfo = userInfo;\n  }\n\n  /**\n   * Performs authentication based on configuration and returns user info for mobile env and\n   * for web app user info is stored in memory. Call userInfo getter method to retrieve userinfo\n   * @param redirectBackUrl - url to redirect back to when authentication is done. Valid only for Web.\n   * For mobile use the Promise returned to perform post authentication actions\n   */\n  public login(redirectBackUrl?: string) {\n    return new Promise((resolve, reject) => {\n      if (this.util.getEnvValue('isIDSEnabled') === 'false') {\n        return reject({ message: 'IDS is not enabled in environments' });\n      }\n      if (this.util.getPlatformType() === 'browser') {\n        this.loginWithRedirect(redirectBackUrl);\n        return;\n      }\n      this.loginWithInAppBrowser()\n        .then(tokenset => {\n          return resolve(tokenset);\n        })\n        .catch(authError => {\n          return reject(authError);\n        });\n    });\n  }\n\n  /**\n   *\n   * @param loginUrl - Login url where SSD is hosted\n   */\n  private loginWithInAppBrowser() {\n    return new Promise(async (resolve, reject) => {\n      const scriptURLS = ['/interaction/', '/auth-provider/return']; // execute JS only for this urls\n      const script = await this.getScript(); // Get JS which stores guid and device details in local storage of webview\n      const inAppBrowserRef = cordova.InAppBrowser.open(this.util.getMobileLoginUrl(), '_blank');\n      const executeScriptCB = (event) => {\n        if (event && event.hasOwnProperty('type') && event.hasOwnProperty('url') && event.type === 'loadstop'\n          && this.isURLMatch(event.url, scriptURLS)) {\n          inAppBrowserRef.executeScript({ code: script }, () => { });\n        }\n      };\n      inAppBrowserRef.addEventListener('loadstop', executeScriptCB);\n      const exitCB = () => {\n        return reject({ code: 'auth-cancel', message: 'Authentication cancelled by user' });\n      };\n      inAppBrowserRef.addEventListener('message', (message) => {\n        if (message && message.data && message.data.auth && message.data.auth === 'success') {\n          inAppBrowserRef.removeEventListener('exit', exitCB);\n          inAppBrowserRef.close();\n          this.getUserInfo().then(tokenset => {\n            return resolve(tokenset);\n          }).catch(authErr => {\n            return reject(authErr);\n          });\n        }\n      });\n      // settle the promise if user closed the in app browser manually\n      inAppBrowserRef.addEventListener('exit', exitCB);\n    });\n  }\n\n  private isURLMatch(url, compareWith: Array<string>) {\n    return compareWith.some(u => url.includes(u));\n  }\n\n\n  /**\n   * Returns JS as a string to be executed in inAppBrowser which sets guid and device details in localStorage\n   */\n  private async getScript() {\n    const deviceDetails = JSON.stringify(window['device']) || {};\n    const guid = await this.getuniqueDeviceID();\n    const guidScript = guid ? `localStorage.setItem('guid', '${guid}')` : '';\n    const script = `${guidScript}\n          localStorage.setItem('additionalInfo', '${deviceDetails}')\n          window.isScriptExecuted = true;`;\n    return script;\n  }\n\n  private getuniqueDeviceID() {\n    return new Promise((resolve, reject) => {\n      window['plugins'].uniqueDeviceID.get((guid) => {\n        return resolve(guid);\n      }, error => {\n        return resolve(null);\n      });\n    });\n  }\n\n\n  public getUserInfo(): Promise<{}> {\n    return new Promise((resolve, reject) => {\n      let headers = new HttpHeaders();\n      /*Edge case: Userinfo is retreived from cache when login page is opened and user cancels the login attempt  */\n      headers = headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\n      headers = headers.set('Pragma', 'no-cache');\n      headers = headers.set('Expires', '0');\n      this.http.get(this.util.getUserInfoUrl(), { headers }).subscribe(tokenset => {\n        this.setUserInfo(tokenset);\n        return resolve(tokenset);\n      }, error => {\n        this.destroyClientSession();\n        return reject(error);\n      });\n    });\n  }\n\n  /*If SSD throws 401 during any http request due to refresh token expiry, cookie expiry or access revoke nullify the userinfo in memory\n  and emit authState event  */\n  public removeUserInfo(errorResponse) {\n    this.destroyClientSession();\n    this.authStateSubject.next(errorResponse);\n  }\n\n  /**\n   * Returns event when Auth state has changed due to session expiry, access revoke or cookie expiry.\n   */\n  public authState(): Observable<any> {\n    return this.authStateSubject.asObservable();\n  }\n\n  private loginWithRedirect(redirectBackUrl): void {\n    window.location.href = this.util.getWebLoginUrl(redirectBackUrl);\n  }\n\n  /**\n   * Restores the connect.sid cookie from session storage during app bootstrap if device is mobile\n   */\n  public async restoreCookies() {\n    return await this.getCookie(this.cookieName, this.util.getSSDBasePath())\n    .then(async (connectSid) => {\n      return await this.setCookie(this.util.getSSDBasePath(), this.cookieName, connectSid);\n    }).catch((error) => {\n      return false;\n    });\n  }\n\n  /**\n   *\n   * @param url - site where the cookie is stored\n   * @param cookieName - name of the cookie to restore\n   * @param cookieValue - value of the cookie to restore\n   */\n  private setCookie(url: string, cookieName: string, cookieValue: string) {\n    return new Promise((resolve, reject) => {\n      cookieMaster.setCookieValue(url, cookieName, cookieValue, () => {\n        return resolve(true);\n      }, (error) => {\n        return reject(false);\n      });\n    });\n  }\n\n  /**\n   *\n   * @param cookieName          name of the cookie to retrieve\n   * @param fullCookieString    String containing all the cookies from an url\n   */\n  private readCookieValueFromCookieString(cookieName, fullCookieString) {\n    let cookieNameWithEqualsSign = cookieName + \"=\";\n    let cookieArray = fullCookieString.split(';');\n    for(let i=0;i < cookieArray.length;i++) {\n        let cookie = cookieArray[i];\n        // Remove unnecessary leading spaces from cookie\n        while (cookie.charAt(0)==' ') {\n          cookie = cookie.substring(1,cookie.length);\n        }\n        // Retrieve and return cookie value\n        if (cookie.indexOf(cookieNameWithEqualsSign) == 0) {\n          return cookie.substring(cookieNameWithEqualsSign.length,cookie.length);\n        }\n    }\n    return null;\n  }\n\n  /**\n   *\n   * @param  cookieName - name of the cookie to retrieve\n   * @param   url - site where the cookie is stored\n   */\n  private getCookie(cookieName: string, url: string): any {\n    return new Promise((resolve, reject) => {\n      window['cordova'].plugins.CookiesPlugin.getCookie(url, (cookies) => {\n        let cookieValue = this.readCookieValueFromCookieString(cookieName,cookies);\n        if(cookieValue) {\n          return resolve(cookieValue);\n        } else {\n          return reject(\"cookie value null\");\n        }\n      }, (error) => {\n        return reject(error);\n      });\n    });\n  }\n\n  /**\n   * Logout the current user, destroys session between client and server.\n   * @param redirectBackUrl - URL where the user is navigated post logout. Valid only for Web.\n   * For mobile use the Promise returned to perform post authentication actions\n   */\n  public logout(redirectBackUrl?: string): Promise<{}> {\n    const logoutUrl = (this.util.getPlatformType() === 'browser') ? this.util.getWebLogoutUrl(redirectBackUrl)\n      : this.util.getMobileLogoutUrl();\n    return new Promise((resolve, reject) => {\n      this.http.get(logoutUrl).subscribe(idsLogoutInfo => {\n        this.destroyIDSSession(idsLogoutInfo)\n          .then(() => {\n            return resolve();\n          })\n          .catch(logoutErr => {\n            return reject(logoutErr);\n          });\n      }, logoutError => {\n        return reject(logoutError);\n      });\n    });\n  }\n\n  private destroyIDSSession(idsInfo) {\n    return new Promise((resolve, reject) => {\n      if (idsInfo['sessionExists'] === false) {\n        // No session present with SSD due to cookie expiry\n        this.destroyClientSession();\n        this.authStateSubject.next({ code: 'NO_SESSION', message: 'User session has already expired' });\n        return resolve();\n      }\n      if (this.util.getPlatformType() === 'browser') {\n        window.location.href = idsInfo['idsURL'];\n      } else {\n        this.logoutWithInappBrowser(idsInfo['idsURL'])\n          .then(() => {\n            return resolve();\n          })\n          .catch(sessionError => {\n            return reject(sessionError);\n          });\n      }\n    });\n  }\n\n  /**\n   *\n   * @param idsLogoutUrl - IDS logout url\n   * Opens InApp browser and destroys the session\n   */\n  private logoutWithInappBrowser(idsLogoutUrl: string) {\n    return new Promise((resolve, reject) => {\n      const exitCB = () => {\n        return reject({ code: 'auth-cancel', message: 'Authentication cancelled by user' });\n      };\n      const inAppBrowserRef = cordova.InAppBrowser.open(idsLogoutUrl, '_blank');\n      inAppBrowserRef.addEventListener('message', (message) => {\n        // Remove exit listener if script closed the in app browser\n        if (message && message.data && message.data.auth && message.data.auth === 'success') {\n          inAppBrowserRef.removeEventListener('exit', exitCB);\n          inAppBrowserRef.close();\n          this.destroyClientSession();\n          return resolve();\n        }\n      });\n      // settle the promise if user closed the in app browser manually\n      inAppBrowserRef.addEventListener('exit', exitCB);\n    });\n  }\n\n  /*Remove persisted cookies in local storage and nullify user info */\n  private destroyClientSession() {\n    this.setUserInfo(null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, RouterStateSnapshot, Router, Route, ActivatedRouteSnapshot } from '@angular/router';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeutrinosAuthGuardService {\n\n  private currUrl;\n  \n  constructor(private _neutrinosOAuthClientService: NeutrinosOAuthClientService, private _router: Router, private _arouter: ActivatedRoute) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>   {\n    \n    return new Promise ((resolve, reject) => {\n      this.currUrl = state.url;\n      if(this._neutrinosOAuthClientService.isLoggedIn) {\n        return resolve(true);\n      } else {\n        this._neutrinosOAuthClientService.login().then(tokenSet => {\n          this._router.navigate([this.currUrl]);\n          return resolve(true);\n        })\n        .catch(err => {\n          console.error(err);\n          if(err && err.code == 'auth-cancel') {\n            // Added setTimeout for reloading the current route\n            setTimeout(() => {\n              this._router.navigateByUrl(this.currUrl,{skipLocationChange: true}).then(() => {\n                return resolve(false);\n              });\n            }, 500);\n          } else {\n            return resolve(false);\n          }\n        })\n      }\n    })\n  } \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'lib-neutrinos-oauth',\n  template: `\n   NOTE: use this component only for testing. Not intended for production\n\n      <button (click)=\"login()\" >  Login </button>\n      <button (click)=\"token()\" > Get tokenset</button>\n      <button (click)=\"logout()\" > Logout </button>\n      <button (click)=\"userinfo()\" > In memory user info </button>\n      <button (click)=\"httpTest()\" > Http Interceptor test </button>\n      `,\n  styles: []\n})\nexport class NeutrinosOauthComponent implements OnInit {\n\n  constructor(public neutrinosOauthService: NeutrinosOAuthClientService, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.neutrinosOauthService.authState().subscribe(state => {\n      console.log(state);\n    });\n  }\n\n  login() {\n    const a = this.neutrinosOauthService.login('/i-am-loggedin').then(tokens => {\n      console.log('got tokens in component', tokens);\n    }).catch(e => {\n      console.error(e);\n    });\n    // console.log(a);\n  }\n\n  token() {\n    this.neutrinosOauthService.getUserInfo().then(t => {\n      console.log('t', t);\n    }).catch(console.log);\n  }\n\n  logout() {\n    this.neutrinosOauthService.logout()\n  }\n\n  userinfo() {\n    alert(JSON.stringify(this.neutrinosOauthService.userInfo))\n    console.log(this.neutrinosOauthService.userInfo);\n  }\n\n  httpTest() {\n    this.http.get('http://localhost:8081/api/ping').subscribe(res => {\n      console.log(res);\n    }, e => {\n      console.error(e);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { UtilService } from './services/util.service';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieInterceptorService {\n\n  constructor(private utilService: UtilService, private neutrinosOAuthClientService: NeutrinosOAuthClientService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    /* withCredentials adds cookies to the request for cross site (Only ssd urls).*/\n    const baseUrl = this.utilService.getSSDBasePath();\n    const isSSD = (baseUrl !== '' && request.url.includes(baseUrl));\n    if (isSSD && this.isCrossDomain(baseUrl)) {\n      request = request.clone({\n        withCredentials: true\n      });\n    }\n    return next.handle(request).pipe(map(event => {\n      return event;\n    }), catchError((errorResponse: HttpErrorResponse) => {\n      /*Intercept all requests and remove userinfo and cookies when status is 401 with code SESSION_EXPIRED, which means\n      * cookies have expired or access has been revoked by the OAuth providers hence IDS rejected.  */\n      if (errorResponse && errorResponse.hasOwnProperty('status') && errorResponse.status === 401 &&\n        errorResponse.error.hasOwnProperty('code')) {\n        this.neutrinosOAuthClientService.removeUserInfo(errorResponse.error);\n      }\n      return throwError(errorResponse);\n    }));\n  }\n\n  /**\n   * Returns true is the ssd url is running on a different domain than where UI is hosted.\n   * For mobile Returns false always since UI is already bundled with cordova\n   * If the user is not using IDS and is cross domain isIDSEnabled can be set to false to skip adding withCredentials\n   * @param ssdUrl - string\n   */\n  private isCrossDomain(ssdUrl): boolean {\n    try {\n      ssdUrl = new URL(ssdUrl);\n      return (this.utilService.getPlatformType() === 'browser' && (ssdUrl.host !== location.host)\n        && this.utilService.getEnvValue('isIDSEnabled') === 'true');\n    } catch (e) {\n      return false; // ssdUrl is not a valid URL hence return false;\n    }\n\n  }\n\n}\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { NeutrinosOauthComponent } from './neutrinos-oauth.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CookieInterceptorService } from './cookie-interceptor.service';\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\nimport { UtilService } from './services/util.service';\n\nexport function getTokens(neutrinosOAuthService: NeutrinosOAuthClientService, utilService: UtilService) {\n  return () => {\n    /**\n     * For ios restore the cookies and get userInfo since iOS webview does not\n     * persisit the cookie between app launches\n     */\n    if (utilService.getEnvValue('isIDSEnabled') === 'true') {\n      if (window['device'] && window['device'].platform === 'iOS' ) {\n        return neutrinosOAuthService.restoreCookies().then((cookieExist) => {\n          console.log('cookieExist' + cookieExist);\n          cookieExist ? neutrinosOAuthService.getUserInfo()\n          .catch(userInfoErr => {\n            console.log(userInfoErr);\n          }) : null;\n        });\n      } else {\n        // Cannot get cookie for cross domain using JS. hence calling userinfo always\n        return neutrinosOAuthService.getUserInfo()\n        .catch(userInfoErr => {\n          console.log(userInfoErr);\n        });\n      }\n    }\n  };\n}\n\n// @dynamic (https://github.com/ng-packagr/ng-packagr/issues/641)\n@NgModule({\n  declarations: [NeutrinosOauthComponent],\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CookieInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getTokens,\n      deps: [NeutrinosOAuthClientService, UtilService],\n      multi: true\n    },\n  ]\n})\nexport class NeutrinosOAuthClientModule { }\n"],"names":[],"mappings":"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"}