{"version":3,"file":"n-signature.component.d.ts","sources":["n-signature.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, EventEmitter } from '@angular/core';\n/**\n* Model import Example :\n* import { HERO } from '../models/hero.model';\n*/\n/**\n * Service import Example :\n * import { HeroService } from '../services/hero/hero.service';\n */\nexport declare class NSignatureComponent implements AfterViewInit {\n    imageDataValue: string;\n    private signaturePad;\n    signaturecanvas: any;\n    canvasparent: any;\n    backgroundColor: any;\n    dotSize: any;\n    minWidth: any;\n    maxWidth: any;\n    throttle: any;\n    minDistance: any;\n    penColor: any;\n    velocityFilterWeight: any;\n    onBegin: any;\n    onEnd: any;\n    mode: string;\n    canvasMode: string;\n    private savedData;\n    private previousSavedData;\n    classAbs: any;\n    imageDataChange: EventEmitter<any>;\n    get imageData(): string;\n    set imageData(val: string);\n    ngAfterViewInit(): void;\n    createCanvas(): void;\n    saveCavas(dataUrl?: any): void;\n    clearCanvas(): void;\n    undoCanvas(): void;\n    showCanvas(): void;\n    hideCanvas(): void;\n    cancel(): void;\n    createCanvasFromData(): void;\n    private fitToContainer;\n    private assignOptions;\n    private checkIfValidValueAndNumber;\n    private checkIfValidValueAndRGB;\n    private checkIfValidValueAndFunction;\n    private checkIfValid;\n    private checkNumber;\n    private checkIfValidFunction;\n    private checkRGB;\n    private checkIsNan;\n    private invalidToast;\n    private isDataURL;\n}\n"]}