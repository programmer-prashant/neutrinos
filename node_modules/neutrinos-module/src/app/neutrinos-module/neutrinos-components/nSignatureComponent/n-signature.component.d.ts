import { AfterViewInit, EventEmitter } from '@angular/core';
/**
* Model import Example :
* import { HERO } from '../models/hero.model';
*/
/**
 * Service import Example :
 * import { HeroService } from '../services/hero/hero.service';
 */
import * as ɵngcc0 from '@angular/core';
export declare class NSignatureComponent implements AfterViewInit {
    imageDataValue: string;
    private signaturePad;
    signaturecanvas: any;
    canvasparent: any;
    backgroundColor: any;
    dotSize: any;
    minWidth: any;
    maxWidth: any;
    throttle: any;
    minDistance: any;
    penColor: any;
    velocityFilterWeight: any;
    onBegin: any;
    onEnd: any;
    mode: string;
    canvasMode: string;
    private savedData;
    private previousSavedData;
    classAbs: any;
    imageDataChange: EventEmitter<any>;
    get imageData(): string;
    set imageData(val: string);
    ngAfterViewInit(): void;
    createCanvas(): void;
    saveCavas(dataUrl?: any): void;
    clearCanvas(): void;
    undoCanvas(): void;
    showCanvas(): void;
    hideCanvas(): void;
    cancel(): void;
    createCanvasFromData(): void;
    private fitToContainer;
    private assignOptions;
    private checkIfValidValueAndNumber;
    private checkIfValidValueAndRGB;
    private checkIfValidValueAndFunction;
    private checkIfValid;
    private checkNumber;
    private checkIfValidFunction;
    private checkRGB;
    private checkIsNan;
    private invalidToast;
    private isDataURL;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NSignatureComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NSignatureComponent, "n-signature", never, { "mode": "mode"; "imageData": "imageData"; "backgroundColor": "backgroundColor"; "dotSize": "dotSize"; "minWidth": "minWidth"; "maxWidth": "maxWidth"; "throttle": "throttle"; "minDistance": "minDistance"; "penColor": "penColor"; "velocityFilterWeight": "velocityFilterWeight"; "onBegin": "onBegin"; "onEnd": "onEnd"; }, { "imageDataChange": "imageDataChange"; }, never, never>;
}

//# sourceMappingURL=n-signature.component.d.ts.map