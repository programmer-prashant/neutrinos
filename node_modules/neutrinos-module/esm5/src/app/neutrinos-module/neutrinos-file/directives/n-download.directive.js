import { __decorate } from "tslib";
import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';
import { NFileIOService } from '../services/n-fileIO.service';
var NDownloadDirective = /** @class */ (function () {
    function NDownloadDirective(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    NDownloadDirective.prototype.methodToHandleMouseClickAction = function () {
        var _this = this;
        this.downloadFile()
            .then(function (res) { return _this.onsuccess.emit(res); })
            .catch(function (err) { return _this.onerror.emit(err); });
    };
    NDownloadDirective.prototype.downloadFile = function () {
        return this.fsv.download(this.downloadOptions);
    };
    NDownloadDirective.ctorParameters = function () { return [
        { type: NFileIOService }
    ]; };
    __decorate([
        Input()
    ], NDownloadDirective.prototype, "downloadOptions", void 0);
    __decorate([
        Output()
    ], NDownloadDirective.prototype, "onsuccess", void 0);
    __decorate([
        Output()
    ], NDownloadDirective.prototype, "onerror", void 0);
    __decorate([
        HostListener('click')
    ], NDownloadDirective.prototype, "methodToHandleMouseClickAction", null);
    NDownloadDirective = __decorate([
        Directive({ selector: '[n-download]' })
    ], NDownloadDirective);
    return NDownloadDirective;
}());
export { NDownloadDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1kb3dubG9hZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZXV0cmlub3MtbW9kdWxlLyIsInNvdXJjZXMiOlsic3JjL2FwcC9uZXV0cmlub3MtbW9kdWxlL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi1kb3dubG9hZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUs5RDtJQUtFLDRCQUFvQixHQUFtQjtRQUFuQixRQUFHLEdBQUgsR0FBRyxDQUFnQjtRQUg3QixjQUFTLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEQsWUFBTyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWYsQ0FBQztJQUVyQiwyREFBOEIsR0FBOUI7UUFBdkIsaUJBSUM7UUFIQyxJQUFJLENBQUMsWUFBWSxFQUFFO2FBQ2hCLElBQUksQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLEtBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUF4QixDQUF3QixDQUFDO2FBQ3JDLEtBQUssQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUF0QixDQUFzQixDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELHlDQUFZLEdBQVo7UUFDRSxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNqRCxDQUFDOztnQkFWd0IsY0FBYzs7SUFKOUI7UUFBUixLQUFLLEVBQUU7K0RBQW9DO0lBQ2xDO1FBQVQsTUFBTSxFQUFFO3lEQUFtRDtJQUNsRDtRQUFULE1BQU0sRUFBRTt1REFBaUQ7SUFJbkM7UUFBdEIsWUFBWSxDQUFDLE9BQU8sQ0FBQzs0RUFJckI7SUFYVSxrQkFBa0I7UUFEOUIsU0FBUyxDQUFDLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxDQUFDO09BQzNCLGtCQUFrQixDQWdCOUI7SUFBRCx5QkFBQztDQUFBLEFBaEJELElBZ0JDO1NBaEJZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5GaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvbi1maWxlSU8uc2VydmljZSc7XG5pbXBvcnQgeyBORGlyZWN0aXZlT3B0aW9ucyB9IGZyb20gJy4vZGlyZWN0aXZlLmNsYXNzJztcblxuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbbi1kb3dubG9hZF0nIH0pXG5leHBvcnQgY2xhc3MgTkRvd25sb2FkRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgZG93bmxvYWRPcHRpb25zOiBORGlyZWN0aXZlT3B0aW9ucztcbiAgQE91dHB1dCgpIG9uc3VjY2VzczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBvbmVycm9yOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZzdjogTkZpbGVJT1NlcnZpY2UpIHsgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJykgbWV0aG9kVG9IYW5kbGVNb3VzZUNsaWNrQWN0aW9uKCkge1xuICAgIHRoaXMuZG93bmxvYWRGaWxlKClcbiAgICAgIC50aGVuKHJlcyA9PiB0aGlzLm9uc3VjY2Vzcy5lbWl0KHJlcykpXG4gICAgICAuY2F0Y2goZXJyID0+IHRoaXMub25lcnJvci5lbWl0KGVycikpO1xuICB9XG5cbiAgZG93bmxvYWRGaWxlKCkge1xuICAgIHJldHVybiB0aGlzLmZzdi5kb3dubG9hZCh0aGlzLmRvd25sb2FkT3B0aW9ucyk7XG4gIH1cbn1cbiJdfQ==