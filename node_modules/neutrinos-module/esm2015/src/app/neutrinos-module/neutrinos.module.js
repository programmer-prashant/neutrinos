import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { FlexLayoutModule } from '@angular/flex-layout';
import { NeutrinosSeedServicesModule } from 'neutrinos-seed-services';
import { MatIconModule } from '@angular/material/icon';
import { MatDialogModule } from '@angular/material/dialog';
import { MatButtonModule } from '@angular/material/button';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { NCameraDirective } from './neutrinos-file/directives/n-camera.directive';
import { NDownloadDirective } from './neutrinos-file/directives/n-download.directive';
import { NScanDirective } from './neutrinos-file/directives/n-scanner.directive';
import { NVideoDirective } from './neutrinos-file/directives/n-video.directive';
import { NBarcodeDirective } from './neutrinos-file/directives/n-barcode.directive';
import { NTtsDirective } from './neutrinos-file/directives/n-tts.directive';
import { NFingerprintDirective } from './neutrinos-file/directives/n-fingerprint.directive';
import { NOcrDirective } from './neutrinos-file/directives/n-ocr.directive';
import { NShakeDirective } from './neutrinos-file/directives/n-shake.directive';
import { NFileUploadComponent } from './neutrinos-file/fileUpload/n-fileUpload.component';
import { NFileIOService } from './neutrinos-file/services/n-fileIO.service';
import { NAlertService } from './neutrinos-components/nAlertComponent/n-alert.service';
import { NAlertComponent } from './neutrinos-components/nAlertComponent/n-alert.component';
import { NToggleoptionsComponent } from './neutrinos-components/nToggleoptionsComponent/n-toggleoptions.component';
import { NSignatureComponent } from './neutrinos-components/nSignatureComponent/n-signature.component';
const EXPORTS = [
    NCameraDirective,
    NDownloadDirective,
    NScanDirective,
    NVideoDirective,
    NBarcodeDirective,
    NTtsDirective,
    NFingerprintDirective,
    NOcrDirective,
    NShakeDirective,
    NFileUploadComponent,
    NAlertComponent,
    NToggleoptionsComponent,
    NSignatureComponent,
];
let NeutrinosModule = class NeutrinosModule {
};
NeutrinosModule = __decorate([
    NgModule({
        imports: [
            HttpClientModule,
            FormsModule,
            CommonModule,
            MatIconModule,
            MatDialogModule,
            MatButtonModule,
            BrowserAnimationsModule,
            MatButtonToggleModule,
            NeutrinosSeedServicesModule,
            FlexLayoutModule,
        ],
        declarations: [
            EXPORTS,
        ],
        exports: [
            EXPORTS,
            NFileUploadComponent,
            NeutrinosSeedServicesModule,
        ],
        providers: [
            NFileIOService,
            NAlertService
        ]
    })
], NeutrinosModule);
export { NeutrinosModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV1dHJpbm9zLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1tb2R1bGUvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUd6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUNqRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDcEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDaEYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDMUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUV2RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDM0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFDbkgsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0VBQWtFLENBQUM7QUFHdkcsTUFBTSxPQUFPLEdBQWdCO0lBQzNCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtDQUNwQixDQUFDO0FBNEJGLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7Q0FHM0IsQ0FBQTtBQUhZLGVBQWU7SUExQjNCLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRTtZQUNQLGdCQUFnQjtZQUNoQixXQUFXO1lBQ1gsWUFBWTtZQUNaLGFBQWE7WUFDYixlQUFlO1lBQ2YsZUFBZTtZQUNmLHVCQUF1QjtZQUN2QixxQkFBcUI7WUFDckIsMkJBQTJCO1lBQzNCLGdCQUFnQjtTQUNqQjtRQUNELFlBQVksRUFBRTtZQUNaLE9BQU87U0FDUjtRQUNELE9BQU8sRUFBRTtZQUNQLE9BQU87WUFDUCxvQkFBb0I7WUFDcEIsMkJBQTJCO1NBQzVCO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsY0FBYztZQUNkLGFBQWE7U0FDZDtLQUNGLENBQUM7R0FDVyxlQUFlLENBRzNCO1NBSFksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEJyb3dzZXJBbmltYXRpb25zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQgeyBOZXV0cmlub3NTZWVkU2VydmljZXNNb2R1bGUgfSBmcm9tICduZXV0cmlub3Mtc2VlZC1zZXJ2aWNlcyc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXREaWFsb2dNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcbmltcG9ydCB7IE1hdEJ1dHRvblRvZ2dsZU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbi10b2dnbGUnO1xuaW1wb3J0IHsgTkNhbWVyYURpcmVjdGl2ZSB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLWNhbWVyYS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTkRvd25sb2FkRGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tZG93bmxvYWQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE5TY2FuRGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tc2Nhbm5lci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTlZpZGVvRGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tdmlkZW8uZGlyZWN0aXZlJztcbmltcG9ydCB7IE5CYXJjb2RlRGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tYmFyY29kZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTlR0c0RpcmVjdGl2ZSB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLXR0cy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTkZpbmdlcnByaW50RGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tZmluZ2VycHJpbnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE5PY3JEaXJlY3RpdmUgfSBmcm9tICcuL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi1vY3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IE5TaGFrZURpcmVjdGl2ZSB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLXNoYWtlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBORmlsZVVwbG9hZENvbXBvbmVudCB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZmlsZVVwbG9hZC9uLWZpbGVVcGxvYWQuY29tcG9uZW50JztcbmltcG9ydCB7IE5GaWxlSU9TZXJ2aWNlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9zZXJ2aWNlcy9uLWZpbGVJTy5zZXJ2aWNlJztcbmltcG9ydCB7IE5BbGVydFNlcnZpY2UgfSBmcm9tICcuL25ldXRyaW5vcy1jb21wb25lbnRzL25BbGVydENvbXBvbmVudC9uLWFsZXJ0LnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBOQWxlcnRDb21wb25lbnQgfSBmcm9tICcuL25ldXRyaW5vcy1jb21wb25lbnRzL25BbGVydENvbXBvbmVudC9uLWFsZXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOVG9nZ2xlb3B0aW9uc0NvbXBvbmVudCB9IGZyb20gJy4vbmV1dHJpbm9zLWNvbXBvbmVudHMvblRvZ2dsZW9wdGlvbnNDb21wb25lbnQvbi10b2dnbGVvcHRpb25zLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOU2lnbmF0dXJlQ29tcG9uZW50IH0gZnJvbSAnLi9uZXV0cmlub3MtY29tcG9uZW50cy9uU2lnbmF0dXJlQ29tcG9uZW50L24tc2lnbmF0dXJlLmNvbXBvbmVudCc7XG5cblxuY29uc3QgRVhQT1JUUzogVHlwZTxhbnk+W10gPSBbXG4gIE5DYW1lcmFEaXJlY3RpdmUsXG4gIE5Eb3dubG9hZERpcmVjdGl2ZSxcbiAgTlNjYW5EaXJlY3RpdmUsXG4gIE5WaWRlb0RpcmVjdGl2ZSxcbiAgTkJhcmNvZGVEaXJlY3RpdmUsXG4gIE5UdHNEaXJlY3RpdmUsXG4gIE5GaW5nZXJwcmludERpcmVjdGl2ZSxcbiAgTk9jckRpcmVjdGl2ZSxcbiAgTlNoYWtlRGlyZWN0aXZlLFxuICBORmlsZVVwbG9hZENvbXBvbmVudCxcbiAgTkFsZXJ0Q29tcG9uZW50LFxuICBOVG9nZ2xlb3B0aW9uc0NvbXBvbmVudCxcbiAgTlNpZ25hdHVyZUNvbXBvbmVudCxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNYXRJY29uTW9kdWxlLFxuICAgIE1hdERpYWxvZ01vZHVsZSxcbiAgICBNYXRCdXR0b25Nb2R1bGUsXG4gICAgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGUsXG4gICAgTWF0QnV0dG9uVG9nZ2xlTW9kdWxlLFxuICAgIE5ldXRyaW5vc1NlZWRTZXJ2aWNlc01vZHVsZSxcbiAgICBGbGV4TGF5b3V0TW9kdWxlLFxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBFWFBPUlRTLFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgRVhQT1JUUyxcbiAgICBORmlsZVVwbG9hZENvbXBvbmVudCxcbiAgICBOZXV0cmlub3NTZWVkU2VydmljZXNNb2R1bGUsXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIE5GaWxlSU9TZXJ2aWNlLFxuICAgIE5BbGVydFNlcnZpY2VcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZXV0cmlub3NNb2R1bGUge1xuXG5cbn1cbiJdfQ==