{"version":3,"file":"base-configurable-impl.service.d.ts","sources":["base-configurable-impl.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import 'localforage';\nimport { DriverType } from '../misc/driver-type.type';\nimport { BaseConfigurable } from './base-configurable';\nimport { NgForageOptions } from './ng-forage-options';\n/**\n * Abstract service-level configuration layer for NgForage\n */\nexport declare abstract class BaseConfigurableImpl implements BaseConfigurable {\n    /**\n     * A description of the database, essentially for developer usage.\n     * @default \"\"\n     */\n    get description(): string;\n    set description(v: string);\n    /**\n     * The preferred driver(s) to use.\n     * @default IndexedDB, WebSQL and localStorage\n     */\n    get driver(): DriverType | DriverType[];\n    set driver(v: DriverType | DriverType[]);\n    /**\n     * The name of the database. May appear during storage limit prompts. Useful to use the name of your app here.\n     * In localStorage, this is used as a key prefix for all keys stored in localStorage.\n     * @default ngForage\n     */\n    get name(): string;\n    set name(v: string);\n    /**\n     * The size of the database in bytes. Used only in WebSQL for now.\n     * @default 4980736\n     */\n    get size(): number;\n    set size(v: number);\n    /**\n     * The name of the datastore.\n     * In IndexedDB this is the dataStore,\n     * in WebSQL this is the name of the key/value table in the database.\n     * Must be alphanumeric, with underscores.\n     * Any non-alphanumeric characters will be converted to underscores.\n     * @default ng_forage\n     */\n    get storeName(): string;\n    set storeName(v: string);\n    /**\n     * The version of your database. May be used for upgrades in the future; currently unused.\n     * @default 1.0\n     */\n    get version(): number;\n    set version(v: number);\n    /**\n     * Bulk-set configuration options\n     * @param opts The configuration\n     */\n    configure(opts: NgForageOptions): this;\n    toJSON(): Partial<NgForageOptions>;\n    toString(): string;\n}\n"]}