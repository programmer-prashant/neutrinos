"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const ast_utils_1 = require("@schematics/angular/utility/ast-utils");
const change_1 = require("@schematics/angular/utility/change");
const fs = require("fs");
const path_1 = require("path");
const loadAppModule_1 = require("../_common/loadAppModule");
function ngAddSetupProject(options) {
    return (tree, context) => {
        const { modulePath, appModule } = loadAppModule_1.loadAppModule(tree, options.project);
        const moduleFileContent = tree.read(modulePath);
        if (!moduleFileContent) {
            throw new schematics_1.SchematicsException(`Could not read app module ${modulePath}`);
        }
        const confPath = path_1.join(path_1.dirname(modulePath), "ngforage.config.ts" /* CFG_FILE */);
        if (!tree.exists(confPath)) {
            tree.create(confPath, fs.readFileSync(path_1.join(__dirname, 'files', "ngforage.config.ts" /* CFG_FILE */)));
        }
        else {
            context.logger.info('Skipping ngforage.config.ts - already exists');
        }
        const prov = ast_utils_1.addProviderToModule(appModule, modulePath, 'NGFORAGE_CONFIG_PROVIDER', './ngforage.config')
            .filter((v) => v instanceof change_1.InsertChange);
        if (prov.length) {
            const recorder = tree.beginUpdate(modulePath);
            for (const p of prov) {
                recorder.insertLeft(p.pos, p.toAdd);
            }
            tree.commitUpdate(recorder);
        }
    };
}
exports.ngAddSetupProject = ngAddSetupProject;
//# sourceMappingURL=setup.js.map